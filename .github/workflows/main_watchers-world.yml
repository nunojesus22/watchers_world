name: Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_server:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: WatchersWorld/WatchersWorld.Server
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Set up .NET
        uses: actions/setup-dotnet@v4.0.0
        with:
          dotnet-version: '8.x'
      - name: Set up server environment
        run: |
          echo '{
            "AzureAd": {
              "Instance": "${{ secrets.AZURE_AD_INSTANCE }}",
              "Domain": "${{ secrets.AZURE_AD_DOMAIN }}",
              "TenantId": "${{ secrets.AZUREAPPSERVICE_TENANTID_F78ED58CF7954AAE9A59768BCCB3C3FA }}",
              "ClientId": "${{ secrets.AZUREAPPSERVICE_CLIENTID_7EBCA730BA4641B299DA8A042E85F1A6 }}",
              "Scopes": "access_as_user",
              "CallbackPath": "/signin-oidc"
            },
            "Logging": {
              "LogLevel": {
                "Default": "Information",
                "Microsoft.AspNetCore": "Warning"
              }
            },
            "AllowedHosts": "*",
            "ConnectionStrings": {
              "DefaultConnection": "${{ secrets.AZURE_SQL_SERVER_CONNECTION }}"
            },
            "JWT": {
              "Key": "${{ secrets.JWT_KEY }}",
              "ExpiresInDays": 15,
              "Issuer": "${{ secrets.ISSUER_URL }}",
              "ClientUrl": "${{ secrets.CLIENT_URL }}"
            },
            "Email": {
              "From": "${{ secrets.EMAIL_FROM }}",
              "ApplicationName": "Watchers World",
              "ConfirmEmailPath": "account/confirm-email",
              "ResetPasswordPath": "account/reset-password"
            },
            "MailJet": {
              "ApiKey": "${{ secrets.MAILJET_API_KEY }}",
              "SecretKey": "${{ secrets.MAILJET_SECRET_KEY }}"
            },
            "Google": {
              "ClientId": "${{ secrets.GOOGLE_CLIENT_ID }}"
            }
          }' > ./appsettings.json

      - name: Publish server
        run: dotnet publish -c Release -o ./publish --no-dependencies

      - name: Zip artifact for deployment
        working-directory: WatchersWorld/WatchersWorld.Server/publish
        run: zip ../release.zip . -r

      - name: Upload server artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          name: server-app
          path: ./WatchersWorld/WatchersWorld.Server/release.zip

  deploy_server:
    runs-on: ubuntu-latest
    needs: build_server
    environment:
      name: 'Production'
    steps:
      - name: Download server artifact
        uses: actions/download-artifact@v4.1.4
        with:
          name: server-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Deploy server to Azure Web App
        uses: azure/webapps-deploy@v3.0.0
        with:
          app-name: 'watchers-world-backend'
          slot-name: 'Production'
          publish-profile: ${{ secrets.SERVER_PUBLISH_PROFILE }}
