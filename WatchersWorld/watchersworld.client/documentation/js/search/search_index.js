var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutUsComponent.html",[0,0.261,1,0.924]],["body/components/AboutUsComponent.html",[0,0.429,1,1.613,2,1.572,3,0.14,4,0.123,5,1.236,6,1.236,7,1.236,8,0.123,9,3.82,10,3.155,11,3.82,12,1.236,13,2.013,14,1.938,15,1.406,16,5.808,17,1.76,18,5.808,19,0.44,20,0.014,21,0.612,22,0.14,23,0.072,24,3.049,25,5.044,26,5.808,27,6.916,28,3.828,29,3.005,30,2.018,31,5.808,32,6.916,33,5.808,34,5.808,35,0.803,36,5.044,37,1.799,38,5.808,39,1.257,40,5.808,41,0.844,42,5.044,43,5.044,44,5.808,45,6.916,46,5.808,47,2.35,48,5.808,49,1.613,50,5.808,51,5.044,52,5.808,53,5.808,54,5.808,55,5.808,56,5.808,57,5.808,58,2.523,59,5.044,60,5.808,61,5.808,62,5.808,63,5.808,64,5.808,65,5.808,66,1.572,67,6.916,68,5.808,69,5.808,70,2.647,71,5.808,72,5.808,73,5.808,74,4.166,75,5.808,76,4.166,77,3.866,78,5.808,79,4.541,80,5.808,81,5.808,82,5.808,83,4.166,84,5.808,85,0.996,86,5.808,87,2.523,88,5.808,89,5.808,90,5.808,91,5.808,92,5.808,93,5.808,94,5.808,95,5.808,96,5.808,97,5.808,98,1.105,99,1.632,100,1.632,101,1.236,102,1.738,103,1.236,104,0.522,105,1.236,106,1.065,107,1.236,108,1.026,109,1.147,110,1.632,111,0.988,112,0.988,113,1.632,114,0.988,115,1.355,116,1.065,117,1.236,118,1.065,119,1.105,120,1.236,121,1.065,122,1.191,123,1.236,124,1.065,125,1.236,126,1.026,127,1.105,128,1.236,129,1.065,130,1.236,131,1.632,132,1.065,133,1.236,134,1.026,135,1.236,136,0.988,137,1.236,138,1.065,139,1.236,140,1.026,141,1.236,142,1.065,143,1.065,144,1.827,145,1.065,146,1.191,147,1.236,148,1.065,149,1.236,150,1.026,151,1.147,152,1.236,153,1.026,154,1.026,155,0.988,156,1.065,157,1.236,158,1.026,159,1.236,160,1.026,161,1.065,162,1.236,163,1.026,164,1.236,165,1.065,166,1.191,167,1.236,168,1.026,169,1.515,170,1.026,171,1.065,172,1.236,173,1.026,174,1.147,175,1.236,176,1.065,177,1.065,178,1.026,179,1.191,180,1.191,181,1.236,182,1.236,183,0.01,184,0.01]],["title/classes/AchievementNotificationModel.html",[23,0.065,185,2.84]],["body/classes/AchievementNotificationModel.html",[3,0.157,4,0.138,8,0.138,19,0.493,20,0.015,22,0.157,23,0.081,35,0.884,37,1.405,41,1.05,85,1.342,104,0.443,183,0.011,184,0.011,185,4.485,186,2.051,187,6.273,188,3.912,189,2.888,190,0.686,191,3.605,192,0.879,193,3.121,194,4.889,195,1.757,196,4.889,197,4.162,198,4.162,199,2.84,200,4.23,201,4.889,202,2.975,203,5.955,204,1.289,205,4.23,206,7.222,207,2.717,208,7.903,209,2.975,210,3.893,211,7.903,212,3.121,213,2.107,214,3.893,215,5.431,216,5.431,217,4.162,218,4.109,219,0.259,220,0.625,221,4.461,222,4.461,223,4.461,224,2.691,225,4.23,226,0.871,227,3.069,228,0.951,229,3.436,230,2.552,231,2.533,232,0.997,233,4.889,234,0.748,235,0.446,236,0.748,237,3.855,238,4.961,239,3.281,240,3.281,241,3.281,242,3.281,243,3.281,244,2.345,245,3.281,246,4.93,247,4.93]],["title/classes/Actor.html",[23,0.065,248,3.096]],["body/classes/Actor.html",[3,0.193,4,0.169,8,0.169,20,0.015,22,0.193,23,0.099,104,0.696,183,0.013,184,0.013,186,2.515,202,3.573,219,0.318,220,0.708,226,0.842,228,0.916,231,2.682,232,0.957,234,0.917,235,0.428,236,0.917,248,5.538,249,5.555,250,5.251,251,7.082,252,6.727,253,7.082,254,6.151,255,6.046,256,6.046,257,6.046]],["title/injectables/AdminService.html",[258,1.456,259,2.636]],["body/injectables/AdminService.html",[3,0.078,4,0.068,8,0.068,19,0.63,20,0.015,21,0.341,22,0.078,23,0.04,24,1.996,29,3.074,35,0.961,37,1.183,39,1.675,41,1.197,47,1.292,49,1.228,58,2.287,66,1.03,85,1.244,87,1.652,104,0.585,119,0.615,183,0.007,184,0.007,190,0.907,192,0.861,204,1.446,212,1.221,213,1.11,219,0.129,226,0.341,228,0.887,231,1.586,232,0.934,234,0.988,235,0.381,236,0.988,258,1.398,259,2.532,260,1.354,261,2.125,262,1.03,263,1.582,264,2.974,265,2.532,266,1.996,267,3.304,268,1.996,269,3.804,270,4.721,271,4.572,272,3.304,273,3.304,274,3.804,275,3.832,276,0.854,277,3.804,278,3.804,279,3.804,280,3.804,281,3.804,282,4.116,283,3.776,284,5.265,285,5.265,286,5.265,287,5.265,288,5.265,289,3.304,290,3.804,291,1.628,292,3.504,293,1.909,294,2.446,295,3.504,296,3.804,297,2.446,298,5.265,299,4.572,300,1.552,301,4.572,302,1.974,303,2.667,304,1.661,305,2.823,306,4.116,307,1.514,308,4.502,309,5.153,310,4.71,311,4.405,312,6.516,313,3.804,314,5.265,315,2.446,316,5.265,317,3.804,318,3.804,319,3.804,320,2.446,321,5.265,322,5.782,323,4.116,324,6.037,325,5.265,326,3.804,327,2.446,328,3.804,329,2.446,330,3.804,331,2.914,332,3.804,333,3.804,334,2.446,335,2.974,336,3.304,337,3.304,338,3.257,339,3.764,340,3.504,341,3.776,342,1.935,343,2.532,344,3.776,345,2.974,346,2.368,347,2.532,348,2.446,349,2.105,350,2.728,351,3.304,352,2.105,353,1.243,354,1.243,355,1.344,356,2.532,357,3.304,358,2.446,359,3.366,360,4.451,361,5.45,362,5.265,363,2.446,364,3.776,365,3.804,366,2.446,367,5.095,368,4.572,369,2.446,370,4.572,371,2.446,372,4.572,373,3.304,374,2.446,375,3.804,376,3.804,377,2.446,378,3.804,379,2.728,380,1.996,381,2.974,382,3.804,383,3.804,384,1.284,385,0.615,386,0.714,387,2.015,388,1.754,389,1.523,390,1.754,391,1.433,392,2.446,393,1.433,394,1.354,395,0.687,396,1.03,397,1.929,398,2.532,399,1.754,400,1.754,401,2.306,402,1.628,403,1.913,404,1.523,405,2.125,406,5.612,407,0.741,408,1.354,409,1.913,410,1.754,411,1.628,412,1.637,413,5.448,414,2.446,415,2.446,416,2.446,417,1.913,418,2.125,419,2.446,420,2.446,421,2.446,422,2.446,423,2.446,424,2.446,425,4.667,426,2.914,427,2.446,428,1.284,429,2.446,430,2.446,431,3.804,432,3.804,433,2.728,434,2.446,435,5.703,436,2.125,437,2.728,438,1.754,439,2.728,440,1.523,441,2.125]],["title/components/AdminStatisticsComponent.html",[0,0.261,108,0.924]],["body/components/AdminStatisticsComponent.html",[0,0.292,1,0.526,2,0.966,3,0.072,4,0.063,5,0.634,6,0.634,7,0.634,8,0.063,12,0.634,13,1.912,14,1.838,15,0.864,17,1.081,19,0.548,20,0.015,21,0.314,22,0.072,23,0.037,29,3.057,30,1.469,35,0.951,37,1.704,39,0.958,41,1.103,47,1.864,49,1.521,66,1.363,70,1.366,85,1,98,0.567,99,1.244,100,1.003,101,0.634,102,1.265,103,0.634,104,0.569,105,0.634,106,0.546,107,0.634,108,1.36,109,1.743,110,1.003,111,0.506,112,0.506,113,1.003,114,0.506,115,1.279,116,0.546,117,0.634,118,0.546,119,0.567,120,0.634,121,0.546,122,0.61,123,0.634,124,0.546,125,0.634,126,0.526,127,0.567,128,0.634,129,0.546,130,0.634,131,1.003,132,0.546,133,0.634,134,0.526,135,0.634,136,0.506,137,0.634,138,0.546,139,0.634,140,0.526,141,0.634,142,0.546,143,0.546,144,1.244,145,0.546,146,0.61,147,0.634,148,0.546,149,0.634,150,0.526,151,0.588,152,0.634,153,0.526,154,0.526,155,0.506,156,0.546,157,0.634,158,0.526,159,0.634,160,0.526,161,0.546,162,0.634,163,0.526,164,0.634,165,0.546,166,0.61,167,0.634,168,0.526,169,0.931,170,0.526,171,0.546,172,0.634,173,0.526,174,0.588,175,0.634,176,0.546,177,0.546,178,0.526,179,0.61,180,0.61,181,0.634,182,0.634,183,0.006,184,0.006,190,0.617,192,0.867,195,1.003,204,0.979,213,0.658,219,0.119,220,0.357,226,0.497,231,2.27,232,0.956,234,0.671,235,0.406,236,0.671,259,4.067,262,1.579,263,1.484,266,1.873,267,3.099,273,3.099,276,0.801,293,1.92,300,0.688,304,0.506,307,1.357,347,2.947,353,1.166,354,2.33,355,1.564,356,2.375,361,5.652,364,3.611,367,5.33,368,5.503,370,5.503,372,3.099,381,2.79,385,0.567,387,0.797,396,1.97,397,0.588,401,0.709,412,1.378,426,2.451,433,1.617,436,1.958,437,2.559,438,1.617,439,2.559,440,1.404,441,1.958,442,6.552,443,5.411,444,1.958,445,3.568,446,3.568,447,3.568,448,4.428,449,4.428,450,4.428,451,5.101,452,5.485,453,5.485,454,5.485,455,5.485,456,5.485,457,3.568,458,5.034,459,5.034,460,3.568,461,5.034,462,5.034,463,1.584,464,5.034,465,5.034,466,5.034,467,2.254,468,1.851,469,1.584,470,3.568,471,1.312,472,1.366,473,2.221,474,1.873,475,2.513,476,3.099,477,3.568,478,1.893,479,2.254,480,4.221,481,4.184,482,6.682,483,6.682,484,4.372,485,2.79,486,5.225,487,3.568,488,3.568,489,5.034,490,5.034,491,2.786,492,5.034,493,2.254,494,6.111,495,7.036,496,2.254,497,3.568,498,2.254,499,6.817,500,2.254,501,3.611,502,2.159,503,3.568,504,2.903,505,6.022,506,7.126,507,4.372,508,2.254,509,3.099,510,2.65,511,3.568,512,6.336,513,2.254,514,2.254,515,3.632,516,3.568,517,3.568,518,2.324,519,2.756,520,3.845,521,2.375,522,3.568,523,3.568,524,2.375,525,2.221,526,2.254,527,5.833,528,2.254,529,3.568,530,2.492,531,1.781,532,2.254,533,2.254,534,0.737,535,0.737,536,2.254,537,3.15,538,2.254,539,2.254,540,2.254,541,2.254,542,2.254,543,1.958,544,1.024,545,1.763,546,1.617,547,0.829,548,2.375,549,1.183,550,2.254,551,3.462,552,1.617,553,2.254,554,2.145,555,1.024,556,1.404,557,1.958,558,3.099,559,2.375,560,0.938,561,1.958,562,3.099,563,2.254,564,3.568,565,3.568,566,3.568,567,2.254,568,2.254,569,2.254,570,2.254,571,2.832,572,5.066,573,4.561,574,1.958,575,1.404,576,2.254,577,2.254,578,2.254,579,1.404,580,2.254,581,2.254,582,2.254,583,4.428,584,4.428,585,2.254,586,4.428,587,5.833,588,4.428,589,4.428,590,1.766,591,4.428,592,5.833,593,2.451,594,2.254,595,4.428,596,4.428,597,2.106,598,4.428,599,4.428,600,2.593,601,2.254,602,3.568,603,3.568,604,2.254,605,2.254,606,2.254,607,4.428,608,2.254,609,2.254,610,3.568,611,2.254,612,2.254,613,2.254,614,2.254,615,2.254,616,2.79,617,3.568,618,3.099,619,3.568,620,2.949,621,1.621,622,3.568,623,3.568,624,3.568,625,3.568,626,3.568,627,3.568,628,3.568,629,1.781,630,3.568,631,3.568]],["title/components/AllMoviesPageComponent.html",[0,0.261,111,0.89]],["body/components/AllMoviesPageComponent.html",[0,0.318,1,0.599,2,1.07,3,0.082,4,0.072,5,0.722,6,0.722,7,0.722,8,0.072,12,0.722,13,1.937,14,1.862,15,0.957,17,1.197,19,0.616,20,0.015,21,0.358,22,0.082,23,0.042,30,2.023,35,0.932,41,1.128,47,1.636,49,1.496,66,1.07,70,0.984,83,1.844,85,1.336,98,0.646,99,1.111,100,1.111,101,0.722,102,1.358,103,0.722,104,0.684,105,0.722,106,0.622,107,0.722,108,0.599,109,0.67,110,1.111,111,1.214,112,1.806,113,1.111,114,0.577,115,0.922,116,0.622,117,0.722,118,0.622,119,0.646,120,0.722,121,0.622,122,0.696,123,0.722,124,0.622,125,0.722,126,0.599,127,0.646,128,0.722,129,0.622,130,0.722,131,1.111,132,0.622,133,0.722,134,0.599,135,0.722,136,0.577,137,0.722,138,0.622,139,0.722,140,0.599,141,0.722,142,0.622,143,1.166,144,1.353,145,0.622,146,0.696,147,0.722,148,0.622,149,0.722,150,0.599,151,0.67,152,0.722,153,0.599,154,0.599,155,0.577,156,0.622,157,0.722,158,0.599,159,0.722,160,0.599,161,0.622,162,0.722,163,0.599,164,0.722,165,0.622,166,0.696,167,0.722,168,0.599,169,1.031,170,0.599,171,0.622,172,0.722,173,0.599,174,0.67,175,0.722,176,0.622,177,0.622,178,0.599,179,0.696,180,0.696,181,0.722,182,0.722,183,0.013,184,0.007,190,0.893,192,0.658,199,1.795,204,0.964,219,0.208,220,0.395,226,0.358,228,0.859,230,0.908,231,1.636,232,0.924,234,0.973,235,0.387,236,0.973,262,1.793,263,1.069,276,0.888,293,1.637,304,1.526,307,1.399,342,1.987,353,1.292,359,2.571,385,0.646,386,0.75,395,0.722,396,1.304,397,1.93,401,1.701,404,1.6,407,0.779,412,1.707,463,1.701,468,1.987,469,1.701,471,1.453,472,1.513,473,2.461,478,1.644,480,2.315,510,1.795,515,1.6,530,3.552,534,0.84,535,0.84,544,1.168,547,2.145,548,3.205,549,1.349,597,1.223,621,1.168,629,2.698,632,5.731,633,4.293,634,1.711,635,1.973,636,2.835,637,2.835,638,2.82,639,3.365,640,4.694,641,3.09,642,3.09,643,3.433,644,3.365,645,3.09,646,3.09,647,3.433,648,2.232,649,2.571,650,2.249,651,3.879,652,3.952,653,2.527,654,2.57,655,2.455,656,3.597,657,3.365,658,4.694,659,2.57,660,3.433,661,3.433,662,2.461,663,2.57,664,3.365,665,3.365,666,4.812,667,3.76,668,4.563,669,2.461,670,2.57,671,3.565,672,6.023,673,2.992,674,2.835,675,2.57,676,3.433,677,3.877,678,2.63,679,2.57,680,1.576,681,2.665,682,2.461,683,2.57,684,3.365,685,2.835,686,3.835,687,2.57,688,2.461,689,2.57,690,2.188,691,2.232,692,2.57,693,2.01,694,1.711,695,2.187,696,2.57,697,1.711,698,1.117,699,1.168,700,1.711,701,2.232,702,1.711,703,1.506,704,1.844,705,0.515,706,4.062,707,4.974,708,1.423,709,1.844,710,1.6,711,2.232,712,1.506,713,1.506,714,2.979,715,2.6,716,1.283,717,1.6,718,1.844,719,1.6,720,2.232,721,1.844,722,1.844,723,1.711,724,1.6,725,1.506,726,1.711,727,1.844,728,1.844,729,1.844,730,1.844,731,1.844,732,1.844,733,1.844,734,1.506,735,1.506,736,1.506,737,1.423,738,1.844,739,1.844,740,1.844,741,1.844,742,1.844,743,1.844,744,1.844,745,1.844,746,1.844,747,2.232,748,1.844,749,1.844,750,1.844,751,1.844,752,1.844,753,1.844,754,1.844,755,1.844,756,1.844,757,1.844,758,1.844,759,1.844,760,1.844,761,1.844,762,2.835,763,1.844,764,1.711,765,3.09,766,2.835,767,2.835,768,1.844,769,4.229,770,3.365,771,3.632,772,1.6,773,3.632,774,3.365,775,2.461,776,1.973,777,1.973,778,3.632,779,1.6,780,2.835,781,1.844,782,3.433,783,3.433,784,3.09,785,2.63,786,3.433,787,2.232,788,2.01]],["title/components/AllSeriesPageComponent.html",[0,0.261,114,0.89]],["body/components/AllSeriesPageComponent.html",[0,0.304,1,0.56,2,1.015,3,0.077,4,0.067,5,0.675,6,0.675,7,0.675,8,0.067,12,0.675,13,1.924,14,1.85,15,0.908,17,1.136,19,0.648,20,0.015,21,0.334,22,0.077,23,0.039,24,1.261,30,1.094,35,0.912,37,1.455,39,0.811,41,1.158,47,1.771,49,1.552,66,1.249,83,1.722,85,1.339,98,0.603,99,1.054,100,1.054,101,0.675,102,1.31,103,0.675,104,0.667,105,0.675,106,0.581,107,0.675,108,0.56,109,0.626,110,1.054,111,0.539,112,1.036,113,1.054,114,1.406,115,1.876,116,0.581,117,0.675,118,0.581,119,0.603,120,0.675,121,0.581,122,0.65,123,0.675,124,0.581,125,0.675,126,0.56,127,0.603,128,0.675,129,0.581,130,0.675,131,1.054,132,0.581,133,0.675,134,0.56,135,0.675,136,0.539,137,0.675,138,0.581,139,0.675,140,0.56,141,0.675,142,0.581,143,0.908,144,1.296,145,0.581,146,0.65,147,0.675,148,0.581,149,0.675,150,0.56,151,0.626,152,0.675,153,0.56,154,0.56,155,0.539,156,0.581,157,0.675,158,0.56,159,0.675,160,0.56,161,0.581,162,0.675,163,0.56,164,0.675,165,0.581,166,0.65,167,0.675,168,0.56,169,0.978,170,0.56,171,0.581,172,0.675,173,0.56,174,0.626,175,0.675,176,0.581,177,0.581,178,0.56,179,0.65,180,0.65,181,0.675,182,0.675,183,0.012,184,0.007,188,1.261,190,0.872,192,0.844,193,2.302,204,1.009,219,0.197,220,0.375,226,0.334,228,0.848,229,1.142,230,0.849,231,1.567,232,0.921,234,0.949,235,0.379,236,0.949,244,1.142,262,1.842,276,0.842,293,1.579,300,1.156,302,1.508,304,1.495,307,1.394,342,1.916,349,2.885,353,1.226,385,0.603,386,0.701,395,0.675,396,1.411,397,1.938,401,1.779,404,1.495,407,1.579,412,1.71,463,1.64,468,1.916,469,1.64,471,1.378,472,1.766,473,2.334,478,1.648,480,1.407,510,1.703,519,1.495,524,1.598,530,3.2,531,3.678,534,0.785,535,0.785,544,1.091,547,1.696,548,3.07,549,1.261,554,0.883,560,0.999,571,1.766,575,1.495,597,1.142,621,1.091,629,2.991,633,4.277,634,1.598,635,1.871,636,2.689,637,2.689,638,2.702,639,3.245,641,2.932,642,2.932,643,3.256,644,3.245,645,2.932,646,2.932,647,3.256,648,2.086,649,2.48,650,2.169,651,3.793,653,2.421,655,1.703,656,2.496,662,2.334,664,3.245,665,3.245,666,4.875,667,3.684,668,4.499,669,2.334,671,3.639,673,2.885,674,2.689,677,3.738,678,3.988,680,1.496,681,2.075,682,2.334,685,2.689,686,3.73,688,2.334,690,2.075,691,2.086,693,1.878,694,1.598,695,2.095,697,1.598,698,1.043,699,1.091,700,1.598,702,2.496,703,1.407,704,1.722,705,0.481,706,3.793,707,4.644,708,1.329,709,2.689,710,1.495,712,1.407,713,1.407,714,2.831,715,2.479,716,1.199,717,1.495,719,1.495,724,1.495,725,1.407,734,1.407,735,1.407,736,1.407,737,1.329,738,1.722,739,1.722,740,1.722,741,1.722,742,1.722,743,1.722,744,1.722,745,2.689,746,1.722,748,1.722,749,1.722,750,1.722,751,1.722,752,1.722,753,1.722,754,1.722,755,1.722,756,1.722,757,1.722,758,1.722,759,1.722,760,1.722,761,1.722,762,2.689,763,1.722,764,1.598,766,2.689,767,2.689,768,1.722,769,4.143,770,3.245,771,3.52,772,1.495,773,3.52,774,3.245,775,2.334,776,1.871,777,1.871,778,3.52,779,1.495,780,2.689,781,1.722,782,3.256,783,3.256,784,2.932,785,2.496,786,3.256,787,2.086,788,1.878,789,5.709,790,4.613,791,4.527,792,3.793,793,3.749,794,2.402,795,2.402,796,2.402,797,2.402,798,1.878,799,2.702,800,3.07,801,2.402,802,2.196,803,1.871,804,3.256,805,2.402,806,3.256,807,2.689,808,4.527,809,2.402,810,3.738,811,2.402,812,3.509,813,2.402,814,3.256,815,2.402,816,2.932,817,3.256,818,2.402,819,2.496,820,2.402,821,1.871,822,2.402,823,2.496,824,2.402,825,2.402,826,1.722,827,2.334,828,2.086,829,1.598,830,1.722,831,2.086,832,2.086,833,1.495,834,2.086,835,2.086,836,1.878,837,2.086,838,1.722,839,2.086,840,2.086,841,2.086,842,2.086,843,2.086,844,2.086,845,2.086,846,2.086,847,2.086,848,2.086,849,2.086,850,2.086,851,1.495,852,1.722,853,3.256,854,2.086,855,2.086,856,2.086,857,2.086,858,1.722,859,2.086,860,2.086,861,1.598,862,1.495,863,1.407]],["title/components/AppComponent.html",[0,0.261,116,0.959]],["body/components/AppComponent.html",[0,0.44,1,1.082,2,1.628,3,0.148,4,0.129,5,1.304,6,1.304,7,1.304,8,0.129,12,1.304,13,2.019,14,1.944,15,1.456,17,1.822,19,0.731,20,0.015,21,0.646,22,0.148,23,0.076,98,1.166,99,1.69,100,1.69,101,1.304,102,1.774,103,1.304,104,0.599,105,1.304,106,1.123,107,1.304,108,1.082,109,1.21,110,1.69,111,1.042,112,1.042,113,1.69,114,1.042,115,1.403,116,1.709,117,1.304,118,1.123,119,1.166,120,1.304,121,1.123,122,1.256,123,1.304,124,1.123,125,1.304,126,1.082,127,1.166,128,1.304,129,1.123,130,1.304,131,1.69,132,1.123,133,1.304,134,1.082,135,1.304,136,1.042,137,1.304,138,1.123,139,1.304,140,1.082,141,1.304,142,1.123,143,1.123,144,1.875,145,1.123,146,1.256,147,1.304,148,1.123,149,1.304,150,1.082,151,1.21,152,1.304,153,1.082,154,1.082,155,1.042,156,1.123,157,1.304,158,1.082,159,1.304,160,1.082,161,1.123,162,1.304,163,1.082,164,1.304,165,1.123,166,1.256,167,1.304,168,1.082,169,1.569,170,1.082,171,1.123,172,1.304,173,1.082,174,1.21,175,1.304,176,1.123,177,1.123,178,1.082,179,1.256,180,1.256,181,1.304,182,1.304,183,0.011,184,0.011,219,0.244,226,0.646,232,0.85,234,0.704,235,0.264,236,0.704,276,1.351,291,3.088,292,4.699,295,4.003,307,1.16,339,3.157,384,2.435,394,3.329,395,1.304,396,2.029,397,1.21,463,2.221,468,2.453,469,2.221,478,1.456,544,2.107,554,1.705,571,1.776,593,4.223,864,4.029,865,2.613,866,3.503,867,6.014,868,6.014,869,6.132,870,4.004,871,4.639,872,4.639,873,4.639,874,4.029,875,2.717,876,2.568,877,2.717,878,4.639,879,4.639,880,3.627,881,4.029,882,4.639,883,4.639,884,4.313,885,3.327,886,4.639]],["title/modules/AppModule.html",[887,2.32,888,2.84]],["body/modules/AppModule.html",[1,1.636,3,0.165,4,0.103,8,0.103,10,2.654,14,0.863,19,0.829,20,0.015,21,0.515,22,0.118,23,0.061,98,0.93,106,1.698,108,1.636,109,0.965,111,1.576,112,1.16,114,1.576,115,1.204,116,1.866,124,1.698,126,1.636,127,1.298,129,1.698,132,1.698,134,1.636,136,1.576,138,1.698,142,1.698,145,1.698,146,1.002,148,1.698,153,1.636,161,0.896,163,1.636,165,1.743,168,1.636,169,1.347,170,1.636,171,1.25,176,1.698,177,1.698,183,0.009,184,0.009,342,1.899,384,1.942,443,2.654,451,2.893,590,2.06,633,3.025,650,3.104,698,1.607,699,2.346,870,3.682,875,3.025,876,2.048,877,2.167,887,2.167,888,6.012,889,2.167,890,2.462,891,4.267,892,4.652,893,4.652,894,2.462,895,3.213,896,3.213,897,3.213,898,3.213,899,3.213,900,4.966,901,4.669,902,4.669,903,4.669,904,4.038,905,2.654,906,3.7,907,3.704,908,5.949,909,4.485,910,3.704,911,5.164,912,5.164,913,3.7,914,3.213,915,3.7,916,5.949,917,4.485,918,4.485,919,5.164,920,3.7,921,3.213,922,3.213,923,2.893,924,3.213,925,3.213,926,2.893,927,3.7,928,3.7,929,4.652,930,2.457,931,3.213,932,3.7,933,3.7,934,3.7,935,4.038,936,3.213,937,5.949,938,3.213,939,3.213,940,4.485,941,2.167,942,3.213,943,3.213,944,2.893,945,5.167,946,3.213,947,2.893,948,3.7,949,3.213,950,3.213,951,2.462,952,3.213,953,2.654,954,2.654,955,3.213,956,3.213,957,3.213,958,3.213,959,3.213,960,3.213,961,5.164,962,3.213,963,2.893,964,3.213,965,3.7,966,3.7,967,3.7,968,3.7,969,3.7,970,2.893,971,2.893,972,2.654,973,5.164,974,3.7,975,5.164,976,3.7,977,5.164,978,1.942,979,3.7,980,3.7,981,3.213,982,3.7,983,3.7,984,3.7,985,3.7,986,3.7,987,3.7,988,3.7,989,3.7,990,3.7,991,3.7,992,3.7,993,3.7,994,3.7,995,5.164,996,5.164,997,5.164,998,3.7,999,3.7]],["title/modules/AppRoutingModule.html",[887,2.32,900,2.636]],["body/modules/AppRoutingModule.html",[0,0.541,1,1.411,3,0.149,4,0.131,8,0.131,10,3.357,19,0.824,20,0.015,21,0.652,22,0.149,23,0.077,106,1.464,108,1.411,109,1.748,111,1.359,112,1.505,114,1.359,115,1.563,124,1.622,129,1.464,134,1.411,136,1.359,142,1.464,148,1.464,153,1.563,163,1.563,166,1.267,168,1.411,169,1.578,170,1.411,171,1.464,176,1.464,177,1.464,178,1.411,180,1.267,183,0.011,184,0.011,385,1.176,391,2.741,397,1.221,443,3.357,633,3.543,635,3.019,715,1.792,889,2.741,894,3.115,900,4.026,907,3.357,910,4.338,925,4.065,929,4.729,930,2.226,931,4.065,935,4.729,936,4.065,938,4.065,939,4.065,940,5.253,942,4.065,943,4.065,944,3.66,945,5.82,946,4.065,947,3.66,949,4.065,952,4.065,953,3.357,954,3.357,955,4.065,956,4.065,957,4.065,958,4.065,959,4.065,960,4.065,1000,4.68,1001,4.065,1002,5.253,1003,4.46,1004,4.338,1005,4.68,1006,4.68,1007,3.357,1008,4.065,1009,7.176,1010,4.68,1011,4.729,1012,4.68,1013,4.68,1014,4.68,1015,4.68,1016,4.065,1017,4.68,1018,4.68,1019,4.68,1020,4.68,1021,4.68,1022,4.68,1023,4.68,1024,4.68,1025,4.68,1026,4.68,1027,2.591,1028,4.68,1029,4.68,1030,4.68,1031,4.68,1032,4.68,1033,4.68,1034,4.68,1035,4.68,1036,4.68]],["title/components/AuthenticationButtonComponent.html",[0,0.261,118,0.959]],["body/components/AuthenticationButtonComponent.html",[0,0.441,1,1.088,2,1.634,3,0.149,4,0.13,5,1.311,6,1.311,7,1.311,8,0.13,12,1.311,13,2.02,14,1.941,15,1.461,17,1.828,19,0.466,20,0.015,21,0.649,22,0.149,23,0.076,98,1.172,99,1.696,100,1.696,101,1.311,102,1.778,103,1.311,104,0.542,105,1.311,106,1.129,107,1.311,108,1.088,109,1.216,110,1.696,111,1.048,112,1.048,113,1.696,114,1.048,115,1.407,116,1.129,117,1.311,118,1.713,119,1.919,120,1.311,121,1.129,122,1.263,123,1.311,124,1.129,125,1.311,126,1.088,127,1.172,128,1.311,129,1.129,130,1.311,131,1.696,132,1.129,133,1.311,134,1.088,135,1.311,136,1.048,137,1.311,138,1.129,139,1.311,140,1.088,141,1.311,142,1.129,143,1.129,144,1.88,145,1.129,146,1.263,147,1.311,148,1.129,149,1.311,150,1.088,151,1.216,152,1.311,153,1.088,154,1.088,155,1.048,156,1.129,157,1.311,158,1.088,159,1.311,160,1.088,161,1.129,162,1.311,163,1.088,164,1.311,165,1.129,166,1.263,167,1.311,168,1.088,169,1.574,170,1.088,171,1.129,172,1.311,173,1.088,174,1.216,175,1.311,176,1.129,177,1.129,178,1.088,179,1.263,180,1.263,181,1.311,182,1.311,183,0.011,184,0.011,219,0.245,226,0.932,228,0.871,232,0.956,235,0.403,276,1.356,307,0.9,407,1.413,478,1.461,534,2.187,535,2.187,1037,6.634,1038,5.972,1039,4.05,1040,4.328,1041,6.035,1042,6.035,1043,7.074,1044,4.328,1045,7.327,1046,6.69,1047,4.798,1048,5.241,1049,6.69,1050,6.035,1051,4.664,1052,4.664,1053,4.664,1054,5.81,1055,4.664,1056,5.074,1057,5.241,1058,4.664]],["title/modules/AuthenticationModule.html",[887,2.32,1059,2.84]],["body/modules/AuthenticationModule.html",[3,0.164,4,0.143,8,0.143,19,0.816,20,0.015,21,0.715,22,0.164,23,0.084,98,1.29,118,1.927,119,1.29,121,1.863,122,1.389,140,1.794,150,1.794,151,1.339,154,1.794,155,1.153,156,1.553,158,1.794,160,1.794,161,1.553,173,1.794,174,1.339,178,1.794,179,1.389,183,0.011,184,0.011,384,2.694,887,3.006,889,3.006,890,3.416,891,5.017,892,4.013,893,4.013,894,4.268,904,5.015,905,3.681,907,4.6,909,6.076,910,4.6,914,4.457,929,5.47,930,2.441,1007,3.681,1008,5.57,1038,4.013,1059,5.977,1060,4.457,1061,4.457,1062,4.457,1063,5.121,1064,5.132,1065,5.57,1066,3.416,1067,4.457,1068,4.457,1069,4.457,1070,5.132,1071,5.132,1072,3.681,1073,4.457,1074,4.013,1075,3.681,1076,4.457,1077,3.681,1078,4.457,1079,3.681,1080,4.457]],["title/modules/AuthenticationRoutingModule.html",[887,2.32,1063,2.636]],["body/modules/AuthenticationRoutingModule.html",[0,0.519,3,0.179,4,0.157,8,0.157,19,0.808,20,0.015,21,0.784,22,0.179,23,0.092,127,1.415,140,1.584,150,1.584,151,1.469,154,1.584,155,1.525,156,1.644,158,1.584,160,1.584,161,1.644,173,1.584,174,1.771,183,0.012,184,0.012,385,1.415,397,1.469,889,3.299,891,4.039,894,3.748,907,4.039,910,4.87,1001,4.891,1002,5.897,1003,4.851,1009,6.834,1063,4.519,1065,5.897,1066,3.748,1067,4.891,1068,4.891,1069,4.891,1072,4.039,1073,4.891,1075,4.039,1076,4.891,1077,4.039,1078,4.891,1079,4.039,1080,4.891,1081,5.632,1082,2.343,1083,2.246,1084,5.632,1085,3.117,1086,5.632,1087,5.632,1088,5.632]],["title/injectables/AuthenticationService.html",[258,1.456,469,1.246]],["body/injectables/AuthenticationService.html",[3,0.07,4,0.097,8,0.061,19,0.699,20,0.015,21,0.305,22,0.07,23,0.057,29,1.517,35,0.953,37,1.677,39,1.434,41,1.183,47,1.684,49,1.652,58,1.517,66,1.561,70,1.664,77,2.323,85,1.241,87,1.517,102,0.877,104,0.618,155,1.295,156,0.845,183,0.006,184,0.006,190,0.959,191,1.742,192,0.896,195,1.393,199,2.252,204,1.463,213,1.682,219,0.115,220,0.349,224,1.536,226,0.305,228,0.822,232,0.938,234,1.044,235,0.392,236,1.044,244,3.474,258,1.283,260,1.214,262,1.342,263,1.452,266,1.832,268,1.832,271,3.032,275,3.308,276,0.784,283,3.555,289,3.032,291,1.46,292,3.299,293,1.831,295,2.323,300,1.523,302,1.141,303,1.283,304,1.295,305,1.392,307,1.494,308,4.132,309,2.323,310,2.323,311,4.409,331,3.19,338,2.458,339,3.614,344,2.504,349,3.19,350,2.504,352,1.932,353,2.051,354,1.884,356,3.299,373,3.032,384,1.151,385,0.551,386,0.64,387,2.737,389,1.365,390,1.573,393,1.285,394,1.214,395,0.616,396,1.794,397,1.293,398,3.299,399,2.504,400,2.504,401,2.298,402,1.46,406,3.119,407,1.502,411,1.46,412,1.7,428,1.151,469,1.368,478,0.845,480,2.045,491,2.744,502,2.502,518,3.294,534,1.141,535,1.141,537,0.996,575,2.173,655,1.586,673,2.744,703,1.285,798,2.73,802,3.882,810,4.134,851,3.086,869,3.032,870,1.151,877,1.285,1082,3.106,1083,3.012,1085,1.214,1089,1.905,1090,3.491,1091,2.173,1092,4.938,1093,4.582,1094,5.383,1095,4.409,1096,4.348,1097,3.836,1098,3.491,1099,4.957,1100,4.957,1101,3.491,1102,4.134,1103,3.491,1104,3.032,1105,3.836,1106,3.491,1107,3.491,1108,3.491,1109,2.193,1110,3.491,1111,4.753,1112,3.491,1113,2.193,1114,3.491,1115,3.032,1116,3.032,1117,2.323,1118,3.491,1119,2.193,1120,4.938,1121,2.73,1122,4.957,1123,4.957,1124,3.172,1125,3.299,1126,2.504,1127,2.193,1128,2.504,1129,4.957,1130,2.193,1131,4.957,1132,3.491,1133,2.73,1134,3.491,1135,2.193,1136,3.491,1137,3.491,1138,1.832,1139,2.173,1140,2.045,1141,3.491,1142,2.193,1143,4.5,1144,4.507,1145,3.491,1146,3.491,1147,3.032,1148,3.032,1149,2.282,1150,3.92,1151,1.932,1152,3.491,1153,3.491,1154,3.299,1155,2.193,1156,4.5,1157,4.5,1158,3.491,1159,5.006,1160,5.764,1161,3.01,1162,2.904,1163,4.957,1164,4.305,1165,4.305,1166,2.744,1167,3.555,1168,4.305,1169,2.73,1170,2.193,1171,3.491,1172,2.73,1173,3.491,1174,3.491,1175,2.193,1176,3.876,1177,3.491,1178,2.193,1179,3.876,1180,3.491,1181,3.299,1182,2.193,1183,2.173,1184,2.73,1185,2.504,1186,3.491,1187,2.193,1188,3.491,1189,3.299,1190,3.491,1191,4.305,1192,3.491,1193,2.193,1194,1.661,1195,3.491,1196,2.193,1197,3.491,1198,3.491,1199,2.504,1200,3.032,1201,3.491,1202,3.491,1203,3.491,1204,2.193,1205,2.193,1206,2.193,1207,1.214,1208,2.193,1209,1.905,1210,1.905,1211,1.905,1212,1.905,1213,2.193,1214,1.365,1215,2.193,1216,1.715,1217,2.193,1218,3.491,1219,2.193,1220,2.193,1221,2.193,1222,4.348,1223,3.777,1224,4.957,1225,2.193,1226,3.491,1227,2.193,1228,2.193,1229,1.715,1230,2.193,1231,2.193,1232,2.193,1233,2.193,1234,3.491,1235,2.193,1236,2.193,1237,3.032,1238,1.365,1239,1.573,1240,2.193,1241,3.491,1242,3.491,1243,2.193,1244,3.032,1245,2.193,1246,1.715,1247,2.193,1248,2.193,1249,2.193]],["title/injectables/AuthorizationGuard.html",[258,1.456,1004,2.84]],["body/injectables/AuthorizationGuard.html",[3,0.179,4,0.157,8,0.157,19,0.774,20,0.015,21,0.784,22,0.179,23,0.092,104,0.61,183,0.012,184,0.012,219,0.296,226,0.784,232,0.865,234,1.03,235,0.387,236,1.03,258,2.496,260,3.117,276,1.525,293,2.448,307,1.087,308,4.035,385,1.415,386,1.643,387,2.576,388,4.039,393,3.299,394,3.117,395,1.583,396,1.525,401,2.294,468,2.496,469,2.381,544,2.558,590,2.246,703,3.299,715,2.156,1004,4.87,1016,6.331,1124,2.447,1223,4.891,1250,4.891,1251,3.117,1252,5.632,1253,5.632,1254,7.568,1255,6.331,1256,7.568,1257,5.632,1258,5.632,1259,5.632,1260,5.632,1261,5.632,1262,5.632,1263,4.404,1264,4.891,1265,5.632]],["title/components/BlockedAccountComponent.html",[0,0.261,121,0.959]],["body/components/BlockedAccountComponent.html",[0,0.46,1,1.187,2,1.727,3,0.162,4,0.142,5,1.43,6,1.43,7,1.43,8,0.142,12,1.43,13,2.029,14,1.953,15,1.544,17,1.932,19,0.509,20,0.014,21,0.708,22,0.162,23,0.083,98,1.278,99,1.792,100,1.792,101,1.43,102,1.836,103,1.43,104,0.573,105,1.43,106,1.232,107,1.43,108,1.187,109,1.327,110,1.792,111,1.143,112,1.143,113,1.792,114,1.143,115,1.488,116,1.232,117,1.43,118,1.232,119,1.278,120,1.43,121,1.769,122,2.109,123,1.43,124,1.232,125,1.43,126,1.187,127,1.278,128,1.43,129,1.232,130,1.43,131,1.792,132,1.232,133,1.43,134,1.187,135,1.43,136,1.143,137,1.43,138,1.232,139,1.43,140,1.187,141,1.43,142,1.232,143,1.232,144,1.958,145,1.232,146,1.377,147,1.43,148,1.232,149,1.43,150,1.187,151,1.327,152,1.43,153,1.187,154,1.187,155,1.143,156,1.232,157,1.43,158,1.187,159,1.43,160,1.187,161,1.232,162,1.43,163,1.187,164,1.43,165,1.232,166,1.377,167,1.43,168,1.187,169,1.664,170,1.187,171,1.232,172,1.43,173,1.187,174,1.327,175,1.43,176,1.232,177,1.232,178,1.187,179,1.377,180,1.886,181,1.43,182,1.43,183,0.011,184,0.011,354,2.085,714,2.654,1074,3.978,1117,4.245,1149,3.348,1266,4.419,1267,3.978,1268,5.54,1269,5.54,1270,4.987,1271,6.378]],["title/interfaces/ChatWithMessages.html",[705,0.794,1272,3.096]],["body/interfaces/ChatWithMessages.html",[3,0.181,4,0.158,8,0.158,19,0.567,20,0.015,22,0.181,35,0.933,183,0.012,184,0.012,190,0.79,192,0.83,204,1.354,212,3.404,219,0.299,220,0.682,224,2.681,228,0.915,235,0.417,300,1.464,302,2.577,303,2.789,304,1.532,475,3.404,494,5.924,510,3.098,673,3.775,705,1.138,829,4.54,1027,4.449,1140,3.995,1151,4.199,1272,5.333,1273,2.263,1274,4.928,1275,6.821,1276,6.068,1277,5.049,1278,6.821,1279,5.924,1280,5.441]],["title/components/ConfirmDialogComponent.html",[0,0.261,126,0.924]],["body/components/ConfirmDialogComponent.html",[0,0.389,1,0.848,2,1.381,3,0.116,4,0.101,5,1.022,6,1.022,7,1.022,8,0.101,12,1.022,13,1.99,14,1.915,15,1.235,17,1.545,19,0.51,20,0.015,21,0.506,22,0.116,23,0.06,30,2.035,35,0.923,37,1.435,39,1.382,41,0.742,58,2.216,98,0.914,99,1.434,100,1.434,101,1.022,102,1.606,103,1.022,104,0.458,105,1.022,106,0.88,107,1.022,108,0.848,109,0.948,110,1.434,111,0.817,112,0.817,113,1.434,114,0.817,115,1.19,116,0.88,117,1.022,118,0.88,119,0.914,120,1.022,121,0.88,122,0.984,123,1.022,124,0.88,125,1.022,126,1.49,127,1.8,128,1.022,129,0.88,130,1.022,131,1.434,132,0.88,133,1.022,134,0.848,135,1.022,136,0.817,137,1.022,138,0.88,139,1.022,140,0.848,141,1.022,142,0.88,143,0.88,144,1.656,145,0.88,146,0.984,147,1.022,148,0.88,149,1.022,150,0.848,151,0.948,152,1.022,153,0.848,154,0.848,155,0.817,156,0.88,157,1.022,158,0.848,159,1.022,160,0.848,161,0.88,162,1.022,163,0.848,164,1.022,165,0.88,166,0.984,167,1.022,168,0.848,169,1.331,170,0.848,171,0.88,172,1.022,173,0.848,174,0.948,175,1.022,176,0.88,177,0.88,178,0.848,179,0.984,180,0.984,181,1.022,182,1.022,183,0.009,184,0.009,190,0.506,192,0.777,204,0.91,207,2.216,213,1.488,219,0.191,226,0.821,228,0.892,232,0.947,235,0.408,276,1.146,302,2.281,307,0.701,309,3.395,352,2.824,379,3.659,397,0.948,407,1.545,472,1.953,478,1.235,525,3.176,534,2.2,535,2.2,547,2.565,655,2.317,657,3.176,680,2.035,716,3.758,784,3.989,963,5.888,970,2.843,971,2.843,972,4.826,1044,3.659,1048,4.431,1054,5.119,1056,5.139,1057,4.431,1093,5.246,1172,3.989,1239,5.591,1281,5.888,1282,3.158,1283,6.059,1284,5.549,1285,5.102,1286,6.351,1287,4.431,1288,5.102,1289,5.102,1290,6.389,1291,5.893,1292,5.893,1293,5.893,1294,5.893,1295,6.729,1296,5.893,1297,6.729,1298,5.102,1299,3.636,1300,4.583,1301,4.643,1302,5.401,1303,3.636,1304,5.102,1305,5.102,1306,5.102,1307,3.636,1308,6.389,1309,6.389,1310,6.389,1311,6.389,1312,4.583,1313,3.636,1314,2.988,1315,3.636,1316,4.996,1317,3.636,1318,4.996,1319,5.102,1320,4.431,1321,3.636,1322,4.431,1323,3.395,1324,5.102,1325,5.102,1326,3.636,1327,3.636,1328,3.636,1329,3.636,1330,3.636,1331,3.636,1332,3.636,1333,3.636,1334,3.636,1335,3.636,1336,3.636,1337,3.636,1338,3.636,1339,3.636,1340,2.843,1341,3.636,1342,3.636,1343,3.636,1344,3.636,1345,3.636]],["title/interfaces/ConfirmEmail.html",[705,0.794,1097,2.636]],["body/interfaces/ConfirmEmail.html",[3,0.196,4,0.172,8,0.172,20,0.014,22,0.196,35,0.831,41,0.895,49,1.436,183,0.013,184,0.013,190,0.858,192,0.871,204,1.099,219,0.324,220,0.716,228,0.932,235,0.408,300,1.188,338,3.539,502,2.176,518,3.233,705,1.435,1083,3.164,1097,4.765,1239,4.417,1273,2.457,1346,5.349,1347,3.233,1348,4.417]],["title/injectables/DialogService.html",[258,1.456,901,2.636]],["body/injectables/DialogService.html",[3,0.169,4,0.148,8,0.148,19,0.709,20,0.015,21,0.737,22,0.169,23,0.087,35,0.9,39,1.414,41,1.077,58,3.218,70,2.502,104,0.475,126,1.654,127,1.33,183,0.012,184,0.012,190,0.91,192,0.943,219,0.279,226,0.737,232,0.833,234,0.803,235,0.302,236,0.803,258,2.403,260,2.929,262,2.149,263,2.72,276,1.468,300,1.261,302,2.137,305,2.607,307,1.021,345,5.111,352,3.618,355,2.31,393,3.1,394,2.929,395,1.487,412,1.33,471,2.403,478,1.281,547,2.403,590,2.111,901,4.351,962,4.596,964,4.596,1093,5.16,1281,5.546,1283,6.434,1287,6.16,1349,4.596,1350,3.829,1351,7.752,1352,7.408,1353,3.829,1354,8.052,1355,7.408,1356,5.292,1357,5.292,1358,6.537,1359,5.292,1360,6.537,1361,5.677,1362,6.537,1363,6.537,1364,4.688,1365,6.537,1366,5.292,1367,3.295,1368,4.596,1369,5.292]],["title/classes/FavoriteActor.html",[23,0.065,1370,3.096]],["body/classes/FavoriteActor.html",[3,0.176,4,0.154,8,0.154,20,0.015,22,0.176,23,0.09,104,0.496,183,0.012,184,0.012,186,2.296,219,0.291,220,0.671,226,0.934,228,0.945,231,2.766,232,0.981,234,0.837,235,0.47,236,0.837,249,5.617,252,6.276,254,6.276,303,2.879,620,4.232,1370,5.245,1371,6.801,1372,4.794,1373,7.926,1374,7.831,1375,4.316,1376,5.617,1377,7.516,1378,6.708,1379,5.52,1380,5.52,1381,5.52,1382,4.316,1383,5.52,1384,5.52,1385,5.52,1386,5.52,1387,5.52,1388,5.52]],["title/classes/FollowNotificationModel.html",[23,0.065,1389,2.84]],["body/classes/FollowNotificationModel.html",[3,0.159,4,0.139,8,0.139,19,0.499,20,0.015,22,0.159,23,0.082,35,0.842,37,1.415,39,1.569,41,1.054,85,1.243,104,0.448,183,0.011,184,0.011,186,2.074,188,3.926,189,2.921,190,0.694,191,3.62,192,0.766,193,3.144,198,4.192,199,2.861,200,4.596,202,2.996,204,1.4,205,4.248,207,2.736,209,2.996,212,3.144,213,1.838,214,3.921,217,4.192,218,4.119,219,0.262,220,0.63,221,4.474,222,4.474,223,4.474,224,2.699,225,4.248,226,0.877,227,3.104,228,0.961,229,3.45,230,2.562,232,1,233,4.925,234,0.756,235,0.447,236,0.756,237,3.899,238,4.978,239,3.319,240,3.319,241,3.319,242,3.319,243,3.319,244,2.372,245,3.319,268,3.306,799,3.689,1389,4.517,1390,6.299,1391,4.517,1392,5.671,1393,4.827,1394,6.192,1395,6.192,1396,3.899,1397,3.899]],["title/classes/FollowerProfile.html",[23,0.065,1398,2.636]],["body/classes/FollowerProfile.html",[3,0.185,4,0.162,8,0.162,20,0.014,22,0.185,23,0.095,24,3.041,29,2.517,35,0.887,41,0.842,104,0.52,183,0.012,184,0.012,186,2.41,190,0.807,191,2.891,192,0.898,204,1.316,205,3.393,207,2.517,212,2.891,213,2.015,214,3.607,219,0.305,220,0.691,226,0.807,228,0.947,232,0.94,234,0.879,235,0.421,236,0.879,300,1.118,303,2.911,304,1.301,352,3.207,475,2.891,510,3.351,1161,2.631,1277,5.369,1347,3.041,1375,5.399,1382,4.53,1398,4.596,1399,6.635,1400,5.031,1401,5.031,1402,5.031,1403,5.031,1404,5.031,1405,5.793,1406,4.53,1407,6.906,1408,5.793,1409,5.031]],["title/components/FooterComponent.html",[0,0.261,132,0.959]],["body/components/FooterComponent.html",[0,0.458,1,1.177,2,1.718,3,0.161,4,0.141,5,1.419,6,1.419,7,1.419,8,0.141,12,1.419,13,2.028,14,1.952,15,1.537,17,1.923,19,0.505,20,0.014,21,0.703,22,0.161,23,0.083,24,3.332,25,5.513,79,4.963,98,1.269,99,1.784,100,1.784,101,1.419,102,1.831,103,1.419,104,0.57,105,1.419,106,1.222,107,1.419,108,1.177,109,1.317,110,1.784,111,1.134,112,1.134,113,1.784,114,1.134,115,1.48,116,1.222,117,1.419,118,1.222,119,1.269,120,1.419,121,1.222,122,1.367,123,1.419,124,1.222,125,1.419,126,1.177,127,1.269,128,1.419,129,1.222,130,1.419,131,1.784,132,1.764,133,1.419,134,1.177,135,1.419,136,1.134,137,1.419,138,1.222,139,1.419,140,1.177,141,1.419,142,1.222,143,1.222,144,1.951,145,1.222,146,1.367,147,1.419,148,1.222,149,1.419,150,1.177,151,1.317,152,1.419,153,1.177,154,1.177,155,1.134,156,1.222,157,1.419,158,1.177,159,1.419,160,1.177,161,1.222,162,1.419,163,1.177,164,1.419,165,1.222,166,1.367,167,1.419,168,1.177,169,1.656,170,1.177,171,1.222,172,1.419,173,1.177,174,1.317,175,1.419,176,1.222,177,1.222,178,1.177,179,1.367,180,1.367,181,1.419,182,1.419,183,0.011,184,0.011,262,1.718,880,4.963,1410,4.385,1411,6.348,1412,6.348,1413,6.348,1414,6.348,1415,6.348,1416,6.348,1417,6.348,1418,5.048,1419,5.513,1420,5.048,1421,6.348,1422,6.348,1423,5.048,1424,5.048]],["title/components/GamificationComponent.html",[0,0.261,134,0.924]],["body/components/GamificationComponent.html",[0,0.389,1,0.848,2,1.381,3,0.116,4,0.101,5,1.022,6,1.022,7,1.022,8,0.101,12,1.022,13,1.99,14,1.915,15,1.235,17,1.545,19,0.639,20,0.015,21,0.506,22,0.116,23,0.06,28,2.824,29,2.216,35,0.81,37,1.692,39,1.509,41,1.146,49,1.19,58,3.031,66,1.381,70,1.953,76,5.004,85,0.875,87,2.216,98,0.914,99,1.434,100,1.434,101,1.022,102,1.606,103,1.022,104,0.529,105,1.022,106,0.88,107,1.022,108,0.848,109,0.948,110,1.434,111,0.817,112,0.817,113,1.434,114,0.817,115,1.19,116,0.88,117,1.022,118,0.88,119,0.914,120,1.022,121,0.88,122,0.984,123,1.022,124,0.88,125,1.022,126,0.848,127,0.914,128,1.022,129,0.88,130,1.022,131,1.434,132,0.88,133,1.022,134,1.49,135,1.022,136,0.817,137,1.022,138,0.88,139,1.022,140,0.848,141,1.022,142,0.88,143,0.88,144,1.656,145,0.88,146,0.984,147,1.022,148,0.88,149,1.022,150,0.848,151,0.948,152,1.022,153,0.848,154,0.848,155,0.817,156,0.88,157,1.022,158,0.848,159,1.022,160,0.848,161,0.88,162,1.022,163,0.848,164,1.022,165,0.88,166,0.984,167,1.022,168,0.848,169,1.331,170,0.848,171,0.88,172,1.022,173,0.848,174,0.948,175,1.022,176,0.88,177,0.88,178,0.848,179,0.984,180,0.984,181,1.022,182,1.022,183,0.009,184,0.009,190,0.506,192,0.89,194,3.989,197,5.188,204,1.371,219,0.191,220,0.51,226,0.506,228,0.684,232,0.913,234,0.551,235,0.364,236,0.551,262,1.73,263,2.122,268,2.678,275,2.546,276,1.146,293,1.785,304,1.146,307,1.137,349,3.537,355,1.803,359,2.427,385,0.914,395,1.022,396,0.984,463,2.01,478,1.689,481,3.659,515,3.176,534,1.668,535,1.668,537,2.317,545,2.843,547,2.565,554,1.876,571,1.953,579,3.176,655,3.169,865,2.216,866,3.093,1121,3.989,1139,3.978,1172,3.989,1214,3.176,1425,3.158,1426,5.004,1427,5.455,1428,6.059,1429,3.989,1430,5.102,1431,5.102,1432,5.102,1433,5.102,1434,3.989,1435,5.102,1436,4.431,1437,5.102,1438,5.102,1439,5.102,1440,5.119,1441,5.893,1442,5.893,1443,5.549,1444,5.549,1445,3.636,1446,4.643,1447,3.039,1448,5.102,1449,3.636,1450,5.549,1451,5.549,1452,5.549,1453,3.636,1454,2.988,1455,3.636,1456,5.102,1457,2.824,1458,2.824,1459,5.102,1460,5.102,1461,4.479,1462,3.636,1463,3.636,1464,3.636,1465,3.158,1466,3.636,1467,4.431,1468,5.119,1469,3.636,1470,3.636,1471,3.158,1472,5.455,1473,3.636,1474,4.996,1475,3.989,1476,4.431,1477,4.431,1478,3.636,1479,3.636,1480,6.389,1481,6.389]],["title/injectables/GamificationService.html",[258,1.456,1446,2.636]],["body/injectables/GamificationService.html",[3,0.113,4,0.099,8,0.099,19,0.712,20,0.015,21,0.495,22,0.113,23,0.058,24,2.634,29,2.18,30,2.121,35,0.92,37,1.556,39,1.621,41,1.152,49,1.171,58,2.747,66,1.359,70,1.921,76,3.6,85,0.861,104,0.568,119,0.893,183,0.009,184,0.009,190,0.881,192,0.843,195,1.41,196,3.924,197,5.374,203,5.414,204,1.386,213,1.464,219,0.187,226,0.495,228,0.888,232,0.907,234,0.959,235,0.38,236,0.959,258,1.845,260,1.966,262,1.359,263,2.088,264,3.924,265,3.34,266,2.634,272,4.359,275,2.505,276,1.127,282,4.945,283,4.536,291,2.364,292,4.209,293,1.076,295,4.209,300,1.516,302,1.641,303,2.617,304,1.633,305,2.523,307,1.476,308,4.369,309,4.838,335,3.924,336,4.359,337,4.359,338,3.504,339,4.048,340,4.209,341,3.6,342,2.325,343,3.34,344,4.536,345,3.924,346,3.125,347,3.34,349,2.778,350,3.6,351,4.359,352,2.778,353,1.641,354,1.641,355,1.773,356,3.34,357,4.359,359,3.294,384,1.865,385,0.893,386,1.036,387,2.056,388,2.548,389,2.212,390,2.548,393,2.081,394,1.966,395,0.998,397,1.856,398,3.34,399,2.548,400,2.548,401,2.239,402,2.364,403,2.778,404,2.212,405,3.085,406,5.302,407,1.076,408,1.966,409,2.778,410,2.548,411,2.364,412,1.589,413,4.55,491,2.778,519,3.125,524,4.609,708,3.833,1091,3.125,1138,2.634,1140,4.258,1161,2.28,1162,3.704,1199,4.536,1426,3.6,1427,5.684,1428,6.314,1443,4.359,1444,4.359,1446,3.34,1447,1.69,1461,4.737,1465,3.085,1472,2.778,1482,3.085,1483,5.019,1484,6.324,1485,5.019,1486,6.324,1487,3.552,1488,5.019,1489,6.671,1490,3.552,1491,4.359,1492,4.359,1493,6.324,1494,4.359,1495,3.552,1496,3.552,1497,4.359,1498,3.552,1499,5.019,1500,3.552,1501,6.324,1502,5.493,1503,5.019,1504,3.552,1505,3.552,1506,5.019,1507,3.552,1508,3.552,1509,3.552]],["title/components/HomeComponent.html",[0,0.261,136,0.89]],["body/components/HomeComponent.html",[0,0.283,1,0.5,2,0.929,3,0.068,4,0.06,5,0.603,6,0.603,7,0.603,8,0.06,12,0.603,13,1.902,14,1.828,15,0.831,19,0.599,20,0.015,21,0.299,22,0.068,23,0.035,30,1.428,35,0.878,37,1.51,39,0.464,41,1.123,47,1.456,49,1.452,58,0.932,66,1.685,70,1.313,77,2.283,85,1.309,98,0.539,99,0.964,100,0.964,101,0.603,102,1.345,103,0.603,104,0.658,105,0.603,106,0.52,107,0.603,108,0.5,109,0.56,110,0.964,111,0.482,112,0.482,113,0.964,114,0.482,115,0.8,116,0.52,117,0.603,118,0.52,119,0.539,120,0.603,121,0.52,122,0.581,123,0.603,124,0.52,125,0.603,126,0.5,127,0.539,128,0.603,129,0.52,130,0.603,131,0.964,132,0.52,133,0.603,134,0.5,135,0.603,136,1.1,137,0.603,138,0.52,139,0.603,140,0.5,141,0.603,142,0.52,143,1.594,144,1.204,145,0.52,146,0.929,147,0.603,148,0.52,149,0.603,150,0.5,151,0.56,152,0.603,153,0.5,154,0.5,155,0.482,156,0.52,157,0.603,158,0.5,159,0.603,160,0.5,161,0.52,162,0.603,163,0.5,164,0.603,165,0.52,166,0.581,167,0.603,168,0.5,169,0.895,170,0.5,171,0.52,172,0.603,173,0.5,174,0.56,175,0.603,176,0.52,177,0.52,178,0.5,179,0.581,180,0.581,181,0.603,182,0.603,183,0.012,184,0.006,190,0.682,192,0.857,195,0.964,204,1.069,213,1.001,219,0.181,220,0.343,224,1.212,226,0.299,228,0.851,231,1.456,232,0.898,234,0.812,235,0.366,236,0.812,262,1.325,276,0.771,293,1.816,300,1.156,302,1.601,304,1.479,307,1.297,331,1.188,342,1.261,347,2.283,354,2.099,359,2.329,385,0.539,396,1.449,397,1.674,401,1.348,408,2.372,412,1.23,426,2.372,440,2.136,463,1.541,468,1.8,469,1.684,475,1.071,478,1.554,481,2.46,485,2.682,502,1.212,504,1.49,518,1.126,519,2.136,521,2.283,530,3.201,531,1.071,534,1.401,535,1.401,537,1.947,544,0.975,546,3.074,549,1.126,554,1.968,555,1.558,560,2.037,571,0.821,593,3.317,597,2.039,620,1.257,621,1.947,629,1.712,635,1.071,638,2.51,639,3.048,641,2.682,642,2.682,644,3.048,645,2.682,646,2.682,649,2.039,650,2.037,655,1.558,662,2.136,664,3.554,665,3.554,666,4.63,667,3.446,668,4.262,669,2.136,671,3.455,680,1.368,681,3.16,682,2.136,686,2.136,688,2.136,690,1.899,695,1.947,698,0.932,699,0.975,705,0.43,706,3.938,710,1.336,712,1.257,713,1.257,714,3.148,716,1.712,717,1.336,718,1.539,719,1.336,721,1.539,722,1.539,723,1.428,724,1.336,725,1.257,726,1.428,727,1.539,728,1.539,729,1.539,730,1.539,731,1.539,732,1.539,733,1.539,734,1.257,735,1.257,736,1.257,737,1.188,764,2.283,769,3.876,770,3.048,771,3.048,772,1.336,773,3.333,774,3.048,775,2.136,776,1.712,777,1.712,778,3.333,779,1.336,812,2.009,819,2.283,823,2.283,838,1.539,861,2.283,862,1.336,863,2.51,870,3.146,875,1.257,876,1.188,877,1.257,885,1.539,941,1.257,1011,2.682,1027,2.71,1040,3.074,1047,3.511,1082,1.427,1102,4.722,1138,1.801,1143,2.46,1162,1.257,1169,1.678,1179,2.682,1194,1.632,1216,2.682,1251,1.188,1284,1.864,1300,3.074,1301,2.852,1314,3.856,1340,1.678,1353,2.009,1367,3.333,1510,1.428,1511,1.678,1512,2.136,1513,3.722,1514,2.979,1515,3.722,1516,3.722,1517,4.252,1518,4.686,1519,3.431,1520,2.146,1521,2.979,1522,2.979,1523,2.979,1524,2.46,1525,2.682,1526,2.146,1527,2.146,1528,2.146,1529,2.146,1530,2.682,1531,2.146,1532,2.46,1533,2.146,1534,2.146,1535,2.146,1536,3.259,1537,3.351,1538,2.979,1539,2.979,1540,2.979,1541,2.682,1542,2.979,1543,1.632,1544,2.852,1545,2.979,1546,2.46,1547,2.146,1548,2.146,1549,2.146,1550,1.864,1551,5.257,1552,1.864,1553,1.864,1554,2.979,1555,1.864,1556,2.979,1557,1.678,1558,1.678,1559,1.678,1560,1.678,1561,1.864,1562,1.864,1563,1.864,1564,1.864,1565,1.864,1566,1.678,1567,1.864,1568,1.864,1569,1.864,1570,1.864,1571,2.979,1572,3.431,1573,2.979,1574,2.979,1575,3.431,1576,3.431,1577,3.431,1578,3.431,1579,3.839,1580,3.511,1581,3.511,1582,4.382,1583,4.556,1584,2.146,1585,2.979,1586,1.864,1587,4.896,1588,3.563,1589,2.283,1590,1.428,1591,3.731,1592,4.273,1593,3.563,1594,3.259,1595,3.554,1596,1.864,1597,2.979,1598,2.283,1599,2.146,1600,2.146,1601,2.682,1602,2.146,1603,2.146,1604,4.144,1605,1.864,1606,2.979,1607,3.511,1608,2.46,1609,1.864,1610,3.431,1611,2.146,1612,2.146,1613,1.864,1614,1.539,1615,3.074,1616,1.864,1617,2.682,1618,2.682,1619,3.563,1620,2.46,1621,2.46,1622,3.722,1623,2.146,1624,3.722,1625,2.146,1626,3.431,1627,2.146,1628,2.146,1629,2.146,1630,2.146,1631,1.864,1632,2.146,1633,2.146,1634,3.722,1635,1.864,1636,1.539,1637,1.539,1638,2.146,1639,1.864,1640,1.864,1641,2.146,1642,1.864,1643,1.864,1644,1.678,1645,3.048,1646,2.146,1647,3.351,1648,1.864,1649,2.146,1650,2.146,1651,7.046,1652,3.431,1653,3.431,1654,2.146,1655,2.146,1656,2.979,1657,3.431,1658,2.146,1659,4.896,1660,1.864,1661,2.146,1662,2.146,1663,1.864,1664,1.864,1665,3.431,1666,2.979,1667,2.146,1668,1.864,1669,2.146,1670,1.864,1671,2.146,1672,2.146,1673,2.146,1674,3.074,1675,1.678,1676,2.146,1677,2.146,1678,2.146,1679,2.146,1680,2.146,1681,2.146,1682,1.864,1683,2.146,1684,2.146,1685,2.682,1686,3.431,1687,3.431,1688,3.722,1689,2.682,1690,1.539,1691,1.428,1692,1.257,1693,1.188,1694,3.074,1695,2.979,1696,2.46,1697,2.146,1698,1.678,1699,2.146,1700,1.864,1701,1.864,1702,2.146,1703,1.864,1704,2.146,1705,2.146,1706,1.864,1707,1.678,1708,5.709,1709,4.286,1710,1.678,1711,1.864,1712,2.146,1713,1.864,1714,4.286,1715,1.864,1716,2.146,1717,3.431,1718,2.146,1719,2.146,1720,2.146,1721,2.146,1722,2.146,1723,2.146,1724,2.146,1725,2.146,1726,2.146,1727,2.146,1728,1.678,1729,1.864,1730,2.146,1731,2.146,1732,1.864,1733,1.864,1734,2.146,1735,2.146,1736,3.431,1737,1.678]],["title/interceptors/JwtInterceptor.html",[902,2.636,1738,3.096]],["body/interceptors/JwtInterceptor.html",[3,0.182,4,0.159,8,0.159,19,0.76,20,0.015,21,0.794,22,0.182,23,0.093,41,0.829,85,0.978,104,0.614,183,0.012,184,0.012,219,0.3,226,0.794,232,0.872,234,1.038,235,0.39,236,1.038,258,2.516,276,1.537,302,1.865,307,1.101,308,4.057,384,2.995,386,1.664,387,2.418,395,1.603,401,1.795,402,3.797,410,4.092,411,3.797,468,2.516,469,2.391,544,2.592,554,2.794,807,4.092,865,2.478,902,4.554,1251,3.158,1739,4.955,1740,4.955,1741,5.943,1742,5.705,1743,5.943,1744,6.601,1745,6.601,1746,5.705,1747,5.943,1748,4.955,1749,5.943,1750,3.342,1751,3.552,1752,5.705,1753,5.705,1754,5.705,1755,4.955,1756,5.705,1757,5.705,1758,5.705]],["title/components/LoadingComponent.html",[0,0.261,138,0.959]],["body/components/LoadingComponent.html",[0,0.434,1,1.051,2,1.598,3,0.144,4,0.126,5,1.267,6,1.267,7,1.267,8,0.126,12,1.267,13,2.016,14,1.941,15,1.429,19,0.658,20,0.015,21,0.628,22,0.144,23,0.074,98,1.133,99,1.659,100,1.659,101,1.267,102,1.755,103,1.267,104,0.591,105,1.267,106,1.091,107,1.267,108,1.051,109,1.176,110,1.659,111,1.013,112,1.013,113,1.659,114,1.013,115,1.377,116,1.091,117,1.267,118,1.091,119,1.133,120,1.267,121,1.091,122,1.22,123,1.267,124,1.091,125,1.267,126,1.051,127,1.133,128,1.267,129,1.091,130,1.267,131,1.659,132,1.091,133,1.267,134,1.051,135,1.267,136,1.013,137,1.267,138,1.691,139,1.267,140,1.051,141,1.267,142,1.091,143,1.091,144,1.85,145,1.091,146,1.22,147,1.267,148,1.091,149,1.267,150,1.051,151,1.176,152,1.267,153,1.051,154,1.051,155,1.013,156,1.091,157,1.267,158,1.051,159,1.267,160,1.051,161,1.091,162,1.267,163,1.051,164,1.267,165,1.091,166,1.22,167,1.267,168,1.051,169,1.54,170,1.051,171,1.091,172,1.267,173,1.051,174,1.176,175,1.267,176,1.091,177,1.091,178,1.051,179,1.22,180,1.22,181,1.267,182,1.267,183,0.01,184,0.01,219,0.311,220,0.59,226,0.628,232,0.838,234,0.684,235,0.336,236,0.684,276,1.326,307,0.87,308,3.643,386,1.315,395,1.267,408,2.495,463,2.197,478,1.429,597,3.322,714,2.905,865,2.564,866,3.454,1367,3.675,1510,3,1512,3.675,1582,3,1583,3,1588,4.38,1589,3,1590,3.929,1591,2.806,1592,3,1593,3,1594,3,1595,3.675,1598,3,1604,3.929,1605,5.126,1622,6.065,1647,4.615,1682,6.065,1694,3.233,1698,3.525,1737,3.525,1759,3.915,1760,5.716,1761,6.581,1762,5.903,1763,6.581,1764,3.915,1765,4.949,1766,5.903,1767,4.508,1768,3.915,1769,4.508,1770,4.508,1771,3.915,1772,4.508,1773,4.508,1774,4.508,1775,4.508,1776,4.508,1777,3.929,1778,4.508,1779,4.508,1780,5.126,1781,6.983,1782,5.903,1783,5.903,1784,5.903,1785,5.903,1786,5.903,1787,5.903]],["title/interceptors/LoadingInterceptor.html",[903,2.636,1738,3.096]],["body/interceptors/LoadingInterceptor.html",[3,0.183,4,0.16,8,0.16,19,0.778,20,0.015,21,0.798,22,0.183,23,0.094,104,0.616,183,0.012,184,0.012,219,0.302,226,0.798,232,0.874,234,1.04,235,0.391,236,1.04,258,2.522,276,1.541,307,1.105,308,4.065,384,3.008,386,1.672,395,1.61,401,1.803,554,2.7,865,2.489,903,4.566,1739,4.977,1741,5.958,1743,5.958,1744,6.611,1745,6.611,1747,4.977,1748,4.977,1749,5.958,1764,4.977,1765,5.258,1768,4.977,1788,6.378,1789,4.977,1790,5.73,1791,5.73,1792,6.861,1793,6.861,1794,4.11,1795,5.73,1796,5.73,1797,5.73,1798,5.73,1799,5.73,1800,4.977,1801,4.977,1802,6.861]],["title/injectables/LoadingService.html",[258,1.456,1765,2.636]],["body/injectables/LoadingService.html",[3,0.188,4,0.165,8,0.165,19,0.698,20,0.015,21,0.821,22,0.188,23,0.097,183,0.012,184,0.012,219,0.31,220,0.698,232,0.979,258,2.566,260,3.264,276,1.568,307,1.346,386,1.72,393,3.454,394,3.264,396,2.012,407,2.114,478,1.69,534,2.281,535,2.281,1760,6.456,1765,4.645,1803,6.811,1804,5.122,1805,7.433,1806,7.684,1807,7.684,1808,5.897,1809,5.897,1810,6.979,1811,5.897,1812,6.979,1813,5.897,1814,5.122,1815,5.897,1816,5.897]],["title/interfaces/Login.html",[705,0.794,1082,1.648]],["body/interfaces/Login.html",[3,0.197,4,0.172,8,0.172,20,0.014,22,0.197,35,0.717,41,0.897,49,1.44,183,0.013,184,0.013,190,0.86,192,0.872,204,1.101,219,0.325,220,0.717,228,0.932,235,0.409,275,3.081,300,1.191,502,2.181,518,3.24,705,1.437,1082,3.152,1083,3.11,1085,4.316,1273,2.462,1347,3.24,1817,5.362]],["title/components/LoginComponent.html",[0,0.261,140,0.924]],["body/components/LoginComponent.html",[0,0.327,1,0.511,2,0.945,3,0.07,4,0.061,5,0.616,6,1.521,7,0.616,8,0.061,12,0.616,13,1.907,14,1.832,15,0.845,17,1.057,19,0.676,20,0.015,21,0.305,22,0.07,23,0.036,35,0.933,37,1.64,39,0.474,41,1.15,47,1.684,49,1.156,58,1.516,66,1.75,70,2.206,85,0.988,98,0.551,99,0.981,100,0.981,101,0.616,102,1.245,103,0.616,104,0.486,105,0.616,106,0.531,107,0.616,108,0.511,109,0.572,110,0.981,111,0.493,112,0.493,113,0.981,114,0.493,115,0.814,116,0.531,117,0.616,118,0.531,119,0.551,120,0.616,121,0.531,122,0.594,123,0.616,124,0.531,125,0.616,126,0.511,127,0.551,128,0.616,129,0.531,130,0.616,131,0.981,132,0.531,133,0.616,134,0.511,135,0.616,136,0.493,137,0.616,138,0.531,139,0.616,140,1.156,141,0.616,142,0.531,143,0.531,144,1.222,145,0.531,146,0.594,147,0.616,148,0.531,149,0.616,150,0.511,151,0.572,152,0.616,153,0.511,154,0.511,155,0.493,156,0.531,157,0.616,158,0.511,159,0.616,160,0.511,161,0.531,162,0.616,163,0.511,164,0.616,165,0.531,166,0.594,167,0.616,168,0.511,169,0.91,170,0.511,171,0.531,172,0.616,173,0.511,174,0.572,175,0.616,176,0.531,177,0.531,178,0.511,179,0.594,180,0.594,181,0.616,182,0.616,183,0.006,184,0.006,190,0.69,192,0.948,195,1.521,210,1.365,213,1.446,219,0.115,220,0.349,224,1.233,226,0.486,228,0.702,230,1.233,232,0.93,234,0.659,235,0.368,236,0.659,262,1.864,263,2.062,264,2.729,266,1.832,268,1.832,276,0.784,293,2.007,300,0.839,302,1.62,304,0.784,305,1.392,307,1.278,331,1.214,339,1.151,353,2.25,354,2.25,355,1.912,380,2.601,385,0.551,386,0.64,387,2.136,396,2.021,397,1.134,401,1.098,407,1.501,412,1.665,417,1.714,418,1.904,426,1.214,428,2.84,438,3.554,463,1.559,468,1.598,469,1.559,471,1.822,472,0.839,474,1.832,478,1.604,486,4.231,501,2.503,504,0.952,525,3.085,534,1.976,535,1.976,547,1.989,554,1.822,555,1.585,560,1.452,571,2.314,590,2.299,653,1.151,655,2.251,680,1.977,705,0.7,715,1.664,777,1.742,803,1.742,821,2.474,863,2.044,870,3.478,877,1.284,881,1.904,884,1.572,930,1.043,978,2.282,1027,2.743,1066,1.459,1082,3.173,1083,2.158,1085,1.214,1117,2.323,1124,2.351,1149,3.025,1151,1.932,1154,1.459,1157,2.503,1159,3.031,1166,1.932,1167,3.554,1183,4.583,1200,3.031,1207,1.214,1211,1.904,1214,2.173,1237,1.904,1238,1.365,1239,1.572,1246,1.714,1251,1.214,1255,1.904,1264,3.775,1270,2.729,1276,1.714,1301,4.176,1350,2.903,1353,2.044,1361,3.031,1404,3.031,1447,2.985,1457,1.932,1458,2.743,1530,2.729,1543,2.358,1591,1.365,1595,1.365,1645,1.365,1692,2.903,1750,1.284,1751,1.365,1794,4.335,1818,1.904,1819,3.554,1820,3.49,1821,2.503,1822,2.503,1823,3.49,1824,3.49,1825,4.304,1826,2.706,1827,3.775,1828,4.347,1829,2.893,1830,2.893,1831,4.956,1832,3.399,1833,3.031,1834,3.085,1835,4.304,1836,2.323,1837,3.875,1838,3.554,1839,3.675,1840,4.304,1841,4.304,1842,4.906,1843,4.304,1844,4.304,1845,3.49,1846,2.173,1847,4.304,1848,2.903,1849,2.044,1850,2.044,1851,3.49,1852,3.031,1853,3.031,1854,2.503,1855,2.729,1856,3.49,1857,3.49,1858,3.49,1859,3.031,1860,3.031,1861,2.192,1862,3.031,1863,2.503,1864,2.323,1865,3.49,1866,3.49,1867,3.49,1868,3.031,1869,4.304,1870,2.192,1871,3.49,1872,3.49,1873,3.49,1874,4.726,1875,2.192,1876,4.032,1877,2.323,1878,2.192,1879,2.729,1880,3.031,1881,3.49,1882,2.729,1883,2.729,1884,2.323,1885,2.192,1886,3.588,1887,3.298,1888,2.173,1889,2.323,1890,2.173,1891,2.323,1892,2.323,1893,2.323,1894,2.044,1895,2.192,1896,2.729,1897,2.192,1898,3.031,1899,2.192,1900,3.49,1901,3.49,1902,2.192,1903,2.503,1904,2.323,1905,2.503,1906,3.49,1907,3.49,1908,2.503,1909,3.49,1910,2.729,1911,3.031,1912,3.49,1913,3.49,1914,2.729,1915,2.323,1916,2.192,1917,3.881,1918,1.572,1919,3.031,1920,3.031,1921,2.192,1922,3.169,1923,2.192,1924,2.192,1925,2.192,1926,2.192,1927,1.904,1928,1.714,1929,1.365,1930,1.365,1931,1.904,1932,1.714,1933,1.365,1934,1.365,1935,2.192,1936,1.714,1937,1.904,1938,1.714,1939,2.503,1940,4.347,1941,2.192,1942,1.904,1943,1.365,1944,2.192,1945,1.365,1946,2.323,1947,3.031,1948,1.904,1949,1.904,1950,1.904,1951,1.904,1952,1.904,1953,1.904,1954,1.459,1955,2.173,1956,2.729,1957,2.192,1958,2.192,1959,1.904,1960,3.49,1961,4.956,1962,1.572,1963,4.699,1964,3.031,1965,3.49,1966,3.49,1967,3.49,1968,2.729,1969,3.031,1970,3.775,1971,3.031,1972,3.554,1973,2.503,1974,3.118,1975,1.904,1976,1.904,1977,3.031,1978,3.031,1979,1.904,1980,1.904,1981,1.904,1982,1.904,1983,1.904,1984,1.904,1985,1.904,1986,1.904,1987,1.904,1988,1.904,1989,1.904,1990,1.904,1991,2.192,1992,1.904,1993,2.192,1994,3.031,1995,3.031,1996,2.192,1997,2.192,1998,2.192,1999,2.192,2000,2.729,2001,1.904,2002,1.904,2003,2.192,2004,2.192,2005,2.192,2006,2.192,2007,1.714,2008,2.192,2009,2.192,2010,3.775,2011,3.49,2012,2.192,2013,2.192,2014,2.192,2015,2.192,2016,2.192,2017,2.192,2018,2.192,2019,1.904,2020,2.192,2021,1.904,2022,1.904,2023,1.904,2024,3.49,2025,2.192,2026,2.192,2027,2.192,2028,2.192,2029,2.192,2030,1.459,2031,1.714,2032,2.192,2033,2.192,2034,2.192,2035,2.503,2036,1.714,2037,1.714,2038,3.554,2039,3.554,2040,2.729,2041,1.714,2042,3.49,2043,2.323,2044,3.49,2045,1.714,2046,1.714,2047,1.714]],["title/classes/LoginWithExternal.html",[23,0.065,1154,2.636]],["body/classes/LoginWithExternal.html",[3,0.164,4,0.143,8,0.143,20,0.015,22,0.164,23,0.084,35,0.924,41,1.147,66,1.737,87,2.788,104,0.461,183,0.011,184,0.011,186,2.137,190,0.894,192,0.892,204,1.346,209,3.053,219,0.27,220,0.642,226,0.715,228,0.96,232,0.961,234,0.779,235,0.43,236,0.779,262,2.137,300,1.35,304,1.442,338,2.915,343,4.271,353,2.098,380,3.368,412,1.842,471,2.359,472,1.966,502,2.267,821,3.203,1083,3.197,1111,3.684,1144,4.017,1149,3.368,1154,4.879,1156,4.603,1157,5.66,1161,2.333,1183,3.995,1184,5.018,1280,4.603,1348,4.603,1822,3.684,2048,4.462,2049,4.462,2050,3.198,2051,5.137,2052,4.462,2053,6.684,2054,6.171,2055,6.171,2056,6.417,2057,6.417,2058,5.573,2059,5.573,2060,3.552,2061,5.573,2062,5.573,2063,5.137,2064,5.137,2065,5.137,2066,4.462,2067,4.017,2068,4.017,2069,3.684]],["title/interfaces/MedalsDto.html",[705,0.794,1461,2.636]],["body/interfaces/MedalsDto.html",[3,0.173,4,0.151,8,0.151,20,0.014,22,0.173,24,3.485,28,3.675,29,2.885,30,2.093,35,0.868,37,1.492,39,1.436,41,1.114,79,4.245,85,1.281,104,0.688,183,0.012,184,0.012,190,1.086,192,0.949,195,1.526,197,4.419,202,3.647,203,6.282,204,0.969,207,2.358,209,2.582,212,2.709,213,2.093,214,3.38,219,0.286,220,0.664,228,0.933,231,2.437,235,0.426,265,3.613,275,3.314,300,1.281,304,1.492,305,2.165,331,3.005,352,3.675,379,3.893,475,2.709,502,1.918,515,3.38,705,1.331,829,4.419,1161,3.016,1214,3.38,1273,2.648,1312,3.893,1316,4.245,1403,4.715,1426,3.893,1461,4.419,1689,5.994,2007,4.245,2060,3.005,2070,4.715,2071,4.762,2072,5.429,2073,5.429,2074,5.429,2075,4.715,2076,5.429,2077,5.429,2078,4.715,2079,5.429,2080,5.429,2081,5.429,2082,5.429,2083,4.245,2084,5.429,2085,4.715,2086,3.613,2087,5.429,2088,5.429,2089,4.715,2090,5.429,2091,5.429,2092,5.429]],["title/classes/MediaNotificationModel.html",[23,0.065,827,2.465]],["body/classes/MediaNotificationModel.html",[3,0.149,4,0.13,8,0.13,19,0.467,20,0.015,22,0.149,23,0.076,35,0.822,41,0.878,85,1.371,104,0.419,183,0.011,184,0.011,186,1.942,188,4.01,189,2.734,190,0.65,191,3.532,192,0.861,193,3.014,195,1.697,198,4.019,199,2.743,200,4.397,201,4.721,205,3.537,207,2.623,209,3.366,210,4.82,212,3.014,213,2.065,214,3.759,217,4.019,218,4.064,219,0.246,220,0.604,221,4.397,222,4.397,223,4.397,224,2.653,225,4.145,226,0.841,227,2.906,228,0.956,229,3.366,230,2.5,231,2.681,232,1.005,234,0.708,235,0.45,236,0.708,238,4.878,239,3.107,240,3.107,241,3.107,242,3.107,243,3.107,244,2.22,245,3.107,304,1.356,530,2.743,531,3.014,799,3.537,800,4.019,827,3.759,1091,3.759,1161,2.743,1376,5.612,1888,3.759,2060,3.342,2093,6.52,2094,5.252,2095,4.331,2096,6.796,2097,6.796,2098,6.796,2099,3.759,2100,4.721,2101,4.054,2102,4.054,2103,3.65,2104,4.054,2105,4.668,2106,4.668,2107,4.668]],["title/interfaces/Message.html",[224,1.399,705,0.794]],["body/interfaces/Message.html",[3,0.172,4,0.151,8,0.151,20,0.015,22,0.172,30,1.579,35,0.832,37,1.677,39,1.615,47,2.537,85,1.336,87,2.879,183,0.012,184,0.012,190,0.754,192,0.659,204,1.182,209,3.153,219,0.285,220,0.663,224,2.342,228,0.932,229,3.708,235,0.437,300,1.044,304,1.489,426,4.132,504,2.351,537,3.648,600,4.373,705,1.085,1027,2.995,1214,3.369,1273,2.159,1300,4.753,1314,4.756,1537,5.182,1543,3.551,1544,4.969,1557,5.837,1558,5.837,1559,5.837,1560,5.837,2060,3.668,2071,3.881,2108,4.7,2109,6.484,2110,5.182,2111,6.627]],["title/classes/MessageNotificationModel.html",[23,0.065,2112,2.84]],["body/classes/MessageNotificationModel.html",[3,0.16,4,0.14,8,0.14,19,0.501,20,0.015,22,0.16,23,0.082,35,0.844,37,1.42,39,1.572,41,0.919,85,1.084,104,0.45,183,0.011,184,0.011,186,2.086,188,3.932,189,2.937,190,0.698,191,3.627,192,0.769,193,3.155,195,1.776,198,4.207,199,2.871,200,4.601,202,3.007,204,1.402,205,4.257,207,3.157,209,3.007,217,4.207,218,4.123,219,0.264,220,0.632,221,4.48,222,4.48,223,4.48,224,2.703,225,4.257,226,0.88,227,3.122,228,0.961,229,3.457,230,2.568,232,1.001,233,4.942,234,0.76,235,0.448,236,0.76,237,3.921,238,4.986,239,3.338,240,3.338,241,3.338,242,3.338,243,3.338,244,2.386,245,3.338,268,3.318,1151,3.499,1392,5.682,1393,4.837,1394,6.198,1395,6.198,1396,3.921,1397,3.921,2095,4.533,2112,4.533,2113,6.312]],["title/interfaces/MovieCategory.html",[695,1.799,705,0.794]],["body/interfaces/MovieCategory.html",[0,0.336,3,0.116,4,0.101,8,0.101,13,0.878,14,0.846,15,0.878,19,0.716,20,0.015,21,0.505,22,0.116,23,0.059,30,1.486,35,0.899,37,1.51,41,1.106,47,1.731,49,1.489,66,1.728,77,2.415,85,1.291,102,0.912,104,0.7,136,0.815,143,1.798,183,0.014,184,0.009,192,0.848,195,1.02,204,1.139,213,1.059,219,0.268,220,0.509,224,1.8,228,0.892,231,2.169,235,0.364,262,1.379,293,1.783,300,1.136,302,1.186,304,1.51,307,0.983,342,1.873,354,2.087,359,2.423,385,0.912,396,1.82,397,1.937,401,1.852,412,1.604,426,2.008,463,1.142,468,1.334,469,1.603,478,1.233,481,2.602,485,2.837,502,1.282,504,1.576,518,1.904,519,2.259,521,2.415,530,3.456,531,1.811,537,2.674,544,1.648,546,2.602,549,1.904,555,1.648,560,2.119,571,1.389,593,3.258,629,2.543,638,2.125,639,2.259,644,2.259,649,1.726,650,2.119,655,1.648,662,2.259,664,3.665,665,3.665,666,4.686,667,3.533,668,4.55,669,2.259,671,3.529,680,1.447,681,3.258,682,2.259,686,3.171,688,2.259,690,2.008,695,2.674,698,1.576,699,1.648,705,0.727,706,4.564,710,2.259,712,2.125,713,2.125,714,3.22,716,1.811,717,2.259,718,2.602,719,2.259,721,2.602,722,2.602,723,2.415,724,2.259,725,2.125,726,2.415,727,2.602,728,2.602,729,2.602,730,2.602,731,2.602,732,2.602,733,2.602,734,2.125,735,2.125,736,2.125,737,2.008,769,4.55,770,3.974,771,3.974,772,2.259,773,4.186,774,3.974,775,3.171,776,2.543,777,2.543,778,4.186,779,2.259,812,2.125,819,2.415,823,2.415,838,2.602,861,2.415,862,2.259,863,2.984,870,3.09,875,2.125,876,2.008,877,2.125,885,2.602,941,2.125,1011,2.837,1027,2.82,1102,3.654,1138,1.904,1143,2.602,1162,2.125,1179,2.837,1273,1.447,1314,4.084,1353,2.125,1511,2.837,1512,2.259,1513,3.151,1514,3.151,1515,3.151,1516,3.151,1517,3.151,1518,4.603,1521,3.151,1522,3.151,1523,3.151,1524,2.602,1525,2.837,1530,2.837,1532,2.602,1536,3.39,1537,3.983,1538,3.151,1539,3.151,1540,3.151,1541,2.837,1542,3.151,1543,1.726,1544,3.39,1545,3.151,1546,2.602,1550,3.151,1551,6.093,1552,3.151,1553,3.151,1554,4.424,1555,3.151,1556,4.424,1557,2.837,1558,2.837,1559,2.837,1560,2.837,1561,3.151,1562,3.151,1563,3.151,1564,3.151,1565,3.151,1566,2.837,1567,3.151,1568,3.151,1569,3.151,1570,3.151]],["title/interfaces/MovieCategory-1.html",[621,1.5,695,1.5,705,0.662]],["body/interfaces/MovieCategory-1.html",[0,0.151,3,0.042,4,0.037,8,0.037,13,0.32,14,0.308,15,0.32,17,0.4,19,0.637,20,0.015,21,0.184,22,0.042,23,0.022,29,2.551,30,1.305,35,0.911,37,1.647,39,0.968,41,1.079,42,3.137,43,2.63,47,1.029,49,1.37,58,1.316,66,1.59,70,1.159,77,3.194,85,0.948,87,2.085,102,0.332,104,0.367,112,0.297,115,0.706,143,0.989,153,0.534,171,1.422,183,0.008,184,0.004,192,0.92,195,0.851,197,2.404,199,0.6,202,0.629,204,1.385,207,0.574,213,1.4,216,1.148,219,0.121,220,0.229,224,0.467,228,0.825,229,1.441,230,2.541,231,1.94,232,0.168,235,0.206,259,2.404,262,1.44,263,0.55,265,2.404,268,1.896,275,0.66,299,1.148,300,0.98,301,1.148,302,2.083,303,2.578,304,1.352,305,1.784,306,2.368,307,0.788,310,0.88,322,1.034,323,2.368,340,1.524,342,1.328,349,0.732,352,1.267,353,0.748,354,1.807,355,0.809,356,0.88,359,2.415,361,0.948,367,2.824,379,0.948,381,2.368,385,0.332,386,0.386,387,2.251,391,3.972,395,0.371,396,1.44,397,1.913,401,1.739,407,1.454,412,1.749,417,1.79,428,0.694,433,0.948,437,2.172,438,1.642,439,3.814,440,1.425,463,0.416,468,0.842,469,0.72,471,0.486,474,0.694,475,0.66,478,1.796,480,2.62,491,0.732,501,2.172,502,1.58,504,0.995,507,1.148,510,3.137,515,0.823,518,0.694,519,1.886,521,0.88,530,2.032,531,2.232,537,2.667,543,1.148,544,0.6,545,1.034,547,1.328,549,1.202,551,2.368,552,3.814,554,1.764,555,1.376,556,0.823,560,2.299,562,1.148,571,2.994,572,4.8,573,4.321,574,3.546,575,0.823,579,1.886,590,2.541,593,0.732,600,1.774,620,3.237,621,2.306,635,1.143,638,0.774,649,1.089,650,0.953,651,2.115,653,1.202,655,1.855,657,0.823,671,1.202,678,2.016,680,1.208,681,0.732,684,1.425,690,0.732,695,1.376,698,0.574,699,0.6,702,0.88,703,0.774,705,0.265,706,2.392,708,0.732,712,0.774,713,0.774,714,1.699,715,2.794,725,0.774,726,0.88,734,0.774,735,0.774,736,0.774,737,0.732,765,1.034,776,2.534,792,0.774,802,3.237,803,2.395,812,2.974,816,1.79,826,0.948,830,0.948,833,0.823,858,2.172,861,0.88,862,3.746,863,0.774,865,0.574,866,1.202,870,1.896,875,0.774,876,0.732,877,0.774,930,0.629,941,0.774,972,1.642,1027,1.267,1082,0.55,1120,2.172,1124,2.481,1125,1.524,1126,0.948,1128,0.948,1139,0.823,1140,3.44,1150,1.676,1151,1.267,1166,1.676,1167,0.948,1194,0.629,1199,2.172,1207,0.732,1216,1.034,1238,2.248,1273,0.527,1277,0.88,1286,1.148,1302,0.948,1322,1.989,1353,0.774,1391,2.59,1398,2.977,1402,2.63,1406,2.368,1419,1.148,1426,2.172,1427,1.034,1429,1.034,1434,2.368,1440,2.63,1446,2.404,1447,1.089,1450,1.148,1451,1.148,1452,1.148,1454,2.62,1458,1.267,1467,1.989,1468,5.226,1471,1.148,1472,2.824,1474,1.79,1475,2.368,1476,1.148,1491,1.989,1492,1.148,1524,3.814,1525,1.034,1532,2.172,1536,1.524,1543,0.629,1546,0.948,1551,3.193,1645,2.784,1693,0.732,1715,2.63,1755,2.63,1801,1.989,1821,0.948,1826,0.823,1832,3.193,1834,0.823,1839,2.115,1848,0.774,1849,1.341,1850,0.774,1854,2.172,1862,1.148,1876,2.115,1879,1.034,1882,1.79,1894,1.341,1910,2.824,1911,1.989,1922,1.774,1929,0.823,1936,1.034,1943,0.823,1945,0.823,1955,1.425,1968,2.824,2019,1.148,2050,0.823,2083,1.034,2094,2.977,2095,0.948,2099,0.823,2114,1.148,2115,1.322,2116,1.322,2117,1.989,2118,1.322,2119,1.322,2120,1.322,2121,1.148,2122,1.322,2123,1.322,2124,1.642,2125,1.322,2126,2.29,2127,1.322,2128,1.322,2129,3.029,2130,1.322,2131,1.322,2132,1.148,2133,4.473,2134,1.322,2135,1.322,2136,1.322,2137,1.148,2138,1.322,2139,1.322,2140,1.322,2141,2.29,2142,1.322,2143,1.322,2144,3.029,2145,1.322,2146,1.322,2147,1.322,2148,1.322,2149,1.322,2150,1.322,2151,1.322,2152,1.322,2153,1.322,2154,1.322,2155,1.322,2156,1.322,2157,1.322,2158,1.322,2159,1.322,2160,1.322,2161,1.322,2162,1.322,2163,1.322,2164,1.322,2165,1.989,2166,1.989,2167,1.322,2168,1.322,2169,1.322,2170,1.322,2171,1.322,2172,1.322,2173,1.322,2174,1.322,2175,1.322,2176,1.322,2177,1.322,2178,1.322,2179,3.137,2180,1.322,2181,2.63,2182,1.322,2183,1.322,2184,2.29,2185,2.29,2186,2.29,2187,2.29,2188,2.29,2189,2.29,2190,2.29,2191,1.322,2192,1.322,2193,1.322,2194,1.524,2195,1.322,2196,1.322,2197,2.29,2198,1.322,2199,1.322,2200,1.322,2201,1.322,2202,1.322,2203,5.1,2204,1.322,2205,1.322,2206,1.322,2207,1.322,2208,1.322,2209,1.322,2210,1.322,2211,1.322,2212,1.322,2213,1.322,2214,1.322,2215,1.322,2216,1.322,2217,2.29,2218,5.317,2219,3.612,2220,2.29,2221,2.29,2222,2.29,2223,3.612,2224,1.322,2225,1.322,2226,1.322,2227,2.29,2228,1.322,2229,1.148,2230,1.322,2231,1.322,2232,1.322,2233,1.322,2234,1.322,2235,1.322,2236,1.322,2237,1.322,2238,1.322,2239,1.322,2240,1.322,2241,1.322,2242,5.317,2243,1.322,2244,2.824,2245,2.63,2246,1.322,2247,4.8,2248,1.322,2249,4.799,2250,1.322,2251,3.029,2252,1.322,2253,1.322,2254,1.322,2255,1.322,2256,1.322,2257,3.029,2258,3.029,2259,1.322,2260,2.29,2261,2.29,2262,2.29,2263,2.29,2264,2.29,2265,2.29,2266,1.322,2267,1.322,2268,3.029,2269,2.29,2270,1.322,2271,3.612,2272,1.322,2273,1.322,2274,1.322,2275,1.322,2276,1.989,2277,1.322,2278,2.29,2279,1.989,2280,1.322,2281,2.29,2282,1.989,2283,3.546,2284,1.322,2285,1.322,2286,1.322,2287,2.29,2288,1.322,2289,2.29,2290,2.29,2291,1.322,2292,2.29,2293,1.322,2294,1.322,2295,1.322,2296,1.322,2297,1.322,2298,1.322,2299,1.322,2300,1.322,2301,1.322,2302,2.29,2303,1.322,2304,1.148,2305,1.322,2306,1.322,2307,1.322,2308,1.322,2309,1.322,2310,1.322,2311,1.148,2312,1.322,2313,1.322,2314,1.322,2315,2.29,2316,1.322,2317,1.322,2318,1.322,2319,3.612,2320,1.322,2321,1.322,2322,1.322,2323,3.029,2324,4.168,2325,1.322,2326,1.322,2327,1.322,2328,1.322,2329,1.322,2330,1.322,2331,2.29,2332,1.322,2333,1.322,2334,2.29,2335,2.29,2336,1.322,2337,1.322,2338,1.148,2339,1.322,2340,2.29,2341,2.29,2342,3.029,2343,1.989,2344,1.322,2345,2.29,2346,2.29,2347,1.322,2348,2.29,2349,2.29,2350,2.29,2351,3.612,2352,3.612,2353,2.29,2354,1.322,2355,1.322,2356,1.148,2357,1.322,2358,1.322,2359,1.322,2360,1.322,2361,1.148,2362,1.322,2363,1.322,2364,1.034,2365,1.322,2366,1.322,2367,1.322,2368,1.322,2369,1.322,2370,2.29,2371,5.078,2372,1.989,2373,3.8,2374,4.083,2375,4.083,2376,1.322,2377,5.526,2378,1.322,2379,5.71,2380,1.322,2381,2.29,2382,2.29,2383,4.473,2384,2.29,2385,3.029,2386,3.029,2387,5.317,2388,2.172,2389,1.322,2390,3.029,2391,3.029,2392,1.886,2393,1.322,2394,3.029,2395,1.322,2396,2.29,2397,1.322,2398,1.322,2399,2.29,2400,3.612,2401,2.29,2402,2.29,2403,2.29,2404,1.322,2405,2.29,2406,1.322,2407,2.29,2408,4.473,2409,1.322,2410,1.322,2411,1.322,2412,2.29,2413,2.29,2414,1.322,2415,1.322,2416,1.322,2417,2.29,2418,1.322,2419,2.29,2420,1.322,2421,2.29,2422,1.322,2423,2.29,2424,4.473,2425,4.473,2426,4.473,2427,4.473,2428,4.473,2429,4.473,2430,4.799,2431,1.322,2432,1.322,2433,2.29,2434,1.322,2435,2.29,2436,1.322,2437,2.29,2438,4.473,2439,1.322,2440,2.29,2441,1.322,2442,2.29,2443,1.322,2444,2.29,2445,1.322,2446,1.322,2447,2.29,2448,1.322,2449,2.29,2450,1.322,2451,2.29,2452,1.322,2453,2.29,2454,1.322,2455,2.29,2456,1.322,2457,2.29,2458,1.322,2459,2.29,2460,1.322,2461,2.29,2462,1.322,2463,2.29,2464,1.322,2465,1.322,2466,2.29,2467,1.322,2468,2.29,2469,1.322,2470,2.29,2471,1.322,2472,1.322,2473,2.29,2474,1.322,2475,2.29,2476,1.322,2477,1.322,2478,1.322,2479,1.322,2480,1.148,2481,1.148,2482,3.546,2483,1.989,2484,1.148,2485,1.322,2486,1.322,2487,1.322,2488,1.322,2489,2.29,2490,1.322,2491,1.322,2492,1.322,2493,1.322,2494,2.29,2495,1.322,2496,1.322,2497,3.029,2498,3.612,2499,2.29,2500,3.029,2501,2.29,2502,1.322,2503,1.322,2504,2.29,2505,1.322,2506,2.29,2507,1.322,2508,1.322,2509,1.322,2510,1.322,2511,1.322,2512,1.322,2513,1.322,2514,1.322,2515,1.322,2516,1.322,2517,2.63,2518,1.322,2519,2.29,2520,2.29,2521,1.322,2522,1.148,2523,1.322,2524,1.322,2525,3.137,2526,1.322,2527,1.322,2528,1.322,2529,1.322,2530,1.322,2531,1.322,2532,2.29,2533,3.029,2534,1.322,2535,1.322,2536,1.322,2537,1.322,2538,1.322,2539,1.322,2540,1.322,2541,1.322,2542,1.322,2543,1.148,2544,1.322,2545,1.322,2546,1.322,2547,1.322,2548,1.322,2549,0.948,2550,3.029,2551,1.322,2552,3.029,2553,1.322,2554,3.029,2555,1.322,2556,1.322,2557,1.322,2558,1.322,2559,2.29,2560,1.322,2561,3.612,2562,4.083,2563,2.29,2564,1.322,2565,2.29,2566,1.989,2567,1.148,2568,1.322,2569,1.322,2570,1.322,2571,1.148,2572,1.322,2573,1.322,2574,1.322,2575,1.148,2576,1.322,2577,1.322,2578,1.322]],["title/interfaces/MovieCategory-2.html",[695,1.5,705,0.662,1707,2.583]],["body/interfaces/MovieCategory-2.html",[0,0.329,3,0.112,4,0.098,8,0.098,13,0.854,14,0.822,15,0.854,17,1.068,19,0.691,20,0.015,21,0.491,22,0.112,23,0.058,30,1.941,35,0.929,41,1.111,47,1.696,49,1.352,66,0.955,70,1.35,85,1.298,104,0.692,111,0.792,112,1.552,143,1.209,183,0.014,184,0.009,192,0.608,199,1.602,204,0.891,219,0.263,220,0.499,228,0.825,230,2.048,231,2.142,235,0.359,262,1.706,263,1.467,293,1.513,304,1.416,307,1.118,342,2.131,353,1.153,359,2.375,385,0.886,386,1.029,395,0.991,396,1.569,397,2.036,401,1.983,404,2.195,407,1.068,412,1.854,463,1.11,468,1.835,469,1.571,471,1.296,472,1.35,473,2.195,478,1.209,480,2.065,510,1.602,515,2.195,530,3.598,544,1.602,547,2.131,548,2.347,549,1.851,597,1.677,621,1.602,629,2.893,632,2.757,633,2.065,634,2.347,635,1.76,636,2.529,637,2.529,638,2.065,639,2.195,640,3.063,644,2.195,649,2.375,650,2.077,651,3.692,653,2.621,655,2.268,656,3.323,657,3.108,658,4.336,660,3.063,661,3.063,662,2.195,664,3.108,665,3.108,666,4.658,667,3.489,668,4.594,669,2.195,671,3.308,672,5.778,673,2.763,674,2.529,676,3.063,677,3.581,678,2.347,680,1.407,681,2.763,682,2.195,684,3.108,685,2.529,686,3.924,688,2.195,690,1.952,695,2.633,697,2.347,698,1.532,699,1.602,700,2.347,701,3.063,702,2.347,703,2.065,704,2.529,705,0.707,706,4.512,707,5.525,708,1.952,709,2.529,710,2.195,711,3.063,712,2.065,713,2.065,714,3.179,715,2.825,716,1.76,717,2.195,718,2.529,719,2.195,720,3.063,721,2.529,722,2.529,723,2.347,724,2.195,725,2.065,726,2.347,727,2.529,728,2.529,729,2.529,730,2.529,731,2.529,732,2.529,733,2.529,734,2.065,735,2.065,736,2.065,737,1.952,738,2.529,739,2.529,740,2.529,741,2.529,742,2.529,743,2.529,744,2.529,745,2.529,746,2.529,747,3.063,748,2.529,749,2.529,750,2.529,751,2.529,752,2.529,753,2.529,754,2.529,755,2.529,756,2.529,757,2.529,758,2.529,759,2.529,760,2.529,761,2.529,762,3.581,763,2.529,764,2.347,765,3.904,766,3.581,767,3.581,768,2.529,769,4.594,770,3.924,771,4.142,772,2.195,773,4.142,774,3.924,775,3.108,776,2.492,777,2.492,778,4.142,779,2.195,780,3.581,781,2.529,1273,1.407]],["title/interfaces/MovieCategory-3.html",[695,1.5,705,0.662,2579,2.869]],["body/interfaces/MovieCategory-3.html",[0,0.315,3,0.106,4,0.093,8,0.093,13,0.804,14,0.774,15,0.804,17,1.006,19,0.714,20,0.015,21,0.462,22,0.106,23,0.054,30,0.968,35,0.903,37,1.378,39,0.718,41,1.143,47,1.904,49,1.43,66,1.295,85,1.307,104,0.671,112,0.746,114,1.259,115,1.665,143,0.804,183,0.013,184,0.008,188,1.742,192,0.849,193,2.387,204,0.853,219,0.252,220,0.478,228,0.81,229,1.579,230,1.98,231,2.084,235,0.35,244,1.579,262,1.76,293,1.449,300,1.081,302,1.563,304,1.378,307,1.081,342,2.061,349,2.647,353,1.085,385,0.834,386,0.968,395,0.933,396,1.66,397,2.04,401,2.045,404,2.067,407,1.858,412,1.856,463,1.044,468,1.758,469,1.505,471,1.22,472,1.83,473,2.067,478,1.158,510,1.508,530,3.075,531,3.732,544,1.508,547,1.758,548,2.209,549,1.742,554,1.22,560,1.381,571,2.145,575,2.067,597,1.579,621,1.508,629,3.061,633,1.944,634,2.209,635,1.657,636,2.381,637,2.381,638,1.944,639,2.067,644,2.067,649,2.275,650,1.989,651,3.592,653,2.51,655,1.508,656,2.209,662,2.067,664,2.977,665,2.977,666,4.746,667,3.394,668,4.529,669,2.067,671,3.412,673,2.647,674,2.381,677,3.43,678,3.73,680,1.324,681,1.837,682,2.067,685,2.381,686,3.818,688,2.067,690,1.837,695,2.546,697,2.209,698,1.442,699,1.508,700,2.209,702,3.183,703,1.944,704,2.381,705,0.666,706,4.379,707,5.362,708,1.837,709,3.43,710,2.067,712,1.944,713,1.944,714,3.072,715,2.734,716,1.657,717,2.067,719,2.067,724,2.067,725,1.944,734,1.944,735,1.944,736,1.944,737,1.837,738,2.381,739,2.381,740,2.381,741,2.381,742,2.381,743,2.381,744,2.381,745,3.43,746,2.381,748,2.381,749,2.381,750,2.381,751,2.381,752,2.381,753,2.381,754,2.381,755,2.381,756,2.381,757,2.381,758,2.381,759,2.381,760,2.381,761,2.381,762,3.43,763,2.381,764,2.209,766,3.43,767,3.43,768,2.381,769,4.529,770,3.818,771,4.047,772,2.067,773,4.047,774,3.818,775,2.977,776,2.387,777,2.387,778,4.047,779,2.067,780,3.43,781,2.381,789,2.595,791,2.883,792,3.592,799,2.801,800,3.183,802,1.944,803,1.657,804,2.883,806,2.883,807,2.381,808,4.868,810,3.43,812,3.283,814,2.883,816,2.595,817,2.883,819,2.209,821,1.657,823,2.209,826,2.381,827,2.977,828,2.883,829,2.209,830,2.381,831,2.883,832,2.883,833,2.067,834,2.883,835,2.883,836,2.595,837,2.883,838,2.381,839,2.883,840,2.883,841,2.883,842,2.883,843,2.883,844,2.883,845,2.883,846,2.883,847,2.883,848,2.883,849,2.883,850,2.883,851,2.067,852,2.381,853,4.153,854,2.883,855,2.883,856,2.883,857,2.883,858,2.381,859,2.883,860,2.883,861,2.209,862,2.067,863,1.944,1273,1.324]],["title/components/NavMenuComponent.html",[0,0.261,145,0.959]],["body/components/NavMenuComponent.html",[0,0.311,1,0.58,2,1.043,3,0.079,4,0.069,5,0.699,6,0.699,7,0.699,8,0.069,12,0.699,13,1.931,14,1.856,15,0.933,17,1.168,19,0.673,20,0.015,21,0.346,22,0.079,23,0.041,30,1.124,35,0.948,36,3.347,37,1.596,39,1.021,41,1.128,47,1.309,58,1.674,66,1.438,74,3.81,85,1.123,98,0.625,99,1.083,100,1.083,101,0.699,102,1.335,103,0.699,104,0.569,105,0.699,106,0.602,107,0.699,108,0.58,109,1.005,110,1.083,111,0.559,112,0.559,113,1.083,114,0.559,115,0.899,116,0.602,117,0.699,118,0.602,119,0.625,120,0.699,121,0.602,122,0.674,123,0.699,124,0.602,125,0.699,126,0.58,127,0.625,128,0.699,129,0.602,130,0.699,131,1.083,132,0.602,133,0.699,134,0.58,135,0.699,136,0.559,137,0.699,138,0.602,139,0.699,140,0.58,141,0.699,142,0.602,143,0.602,144,1.326,145,1.286,146,1.717,147,0.699,148,0.602,149,0.699,150,0.58,151,1.005,152,0.699,153,0.58,154,0.58,155,0.559,156,0.602,157,0.699,158,0.58,159,0.699,160,0.58,161,0.602,162,0.699,163,0.58,164,0.699,165,0.933,166,0.674,167,0.699,168,0.58,169,1.005,170,0.58,171,0.602,172,0.699,173,0.58,174,0.649,175,0.699,176,0.602,177,0.602,178,0.58,179,0.674,180,0.674,181,0.699,182,0.699,183,0.007,184,0.007,190,0.8,192,0.797,193,3.43,195,1.083,199,1.751,204,1.366,207,1.674,219,0.131,220,0.385,226,0.346,228,0.706,230,1.877,232,0.976,234,0.872,235,0.405,236,0.872,265,2.565,270,3.013,276,0.866,293,2.082,300,0.91,303,1.734,304,0.866,307,1.326,322,4.154,342,1.417,353,1.737,354,1.879,355,2.148,385,0.625,386,0.726,387,1.362,391,1.457,395,0.699,396,1.043,398,1.656,407,1.168,412,1.185,428,1.306,433,1.784,437,1.784,439,2.764,440,3.785,463,1.672,468,2.113,469,1.808,474,3.859,478,1.72,501,3.81,510,1.751,530,2.413,531,2.651,534,2.073,535,1.987,544,1.13,547,1.417,549,1.306,551,1.945,554,1.417,555,2.761,557,2.161,559,2.565,560,2.21,571,2.427,573,3.013,590,1.537,593,1.377,620,2.257,650,1.035,651,3.561,653,1.306,657,2.937,671,2.023,680,1.537,684,3.307,693,3.013,694,3.14,698,1.081,699,1.751,700,1.656,714,2.638,715,2.508,792,3.714,802,3.112,803,2.354,826,1.784,829,2.565,858,2.764,874,2.161,885,1.784,926,6.017,941,1.457,950,2.161,951,1.656,1082,1.603,1102,4.36,1120,4.699,1124,2.308,1139,2.937,1140,2.257,1143,2.764,1150,2.133,1151,2.133,1263,1.945,1318,4.958,1353,1.457,1364,3.383,1368,2.161,1398,3.536,1406,4.753,1434,3.688,1457,1.377,1474,1.945,1475,3.013,1497,5.691,1573,3.347,1574,3.347,1728,1.945,1800,5.691,1886,2.399,1896,3.013,1908,1.784,1917,3.81,1918,1.784,1963,2.161,1964,3.347,2075,3.347,2110,3.013,2117,4.992,2121,2.161,2132,4.097,2137,4.097,2203,4.097,2244,3.013,2276,2.161,2304,2.161,2543,4.097,2549,4.824,2575,3.347,2580,6.683,2581,2.161,2582,7.729,2583,3.854,2584,6.552,2585,3.854,2586,3.854,2587,5.507,2588,4.717,2589,4.717,2590,4.097,2591,4.717,2592,5.312,2593,3.854,2594,5.312,2595,5.312,2596,3.854,2597,5.312,2598,5.312,2599,3.854,2600,3.854,2601,3.854,2602,2.488,2603,4.717,2604,3.854,2605,2.488,2606,2.488,2607,6.341,2608,3.854,2609,4.717,2610,6.873,2611,5.747,2612,6.552,2613,4.717,2614,4.717,2615,2.488,2616,3.854,2617,4.753,2618,3.854,2619,3.854,2620,3.854,2621,2.488,2622,2.488,2623,2.488,2624,3.854,2625,2.488,2626,3.347,2627,3.854,2628,2.488,2629,2.488,2630,3.854,2631,3.854,2632,2.488,2633,3.854,2634,2.488,2635,3.347,2636,3.854,2637,3.854,2638,2.488,2639,2.488,2640,2.488,2641,2.488,2642,2.488,2643,2.488,2644,2.488,2645,2.488,2646,2.488,2647,2.488,2648,2.488,2649,2.488,2650,2.488,2651,2.488,2652,2.488,2653,2.488,2654,2.488,2655,2.488,2656,5.747,2657,6.079,2658,4.717,2659,5.312,2660,2.488,2661,3.854,2662,2.488,2663,2.488,2664,2.488,2665,2.488,2666,2.488,2667,2.488,2668,3.854,2669,2.488,2670,2.488,2671,2.488,2672,2.488,2673,3.854,2674,2.488,2675,3.854,2676,3.013,2677,3.854,2678,3.854]],["title/classes/NotificationModel.html",[23,0.065,218,2.079]],["body/classes/NotificationModel.html",[3,0.168,4,0.148,8,0.148,20,0.015,22,0.168,23,0.087,35,0.823,37,1.468,39,1.534,74,3.792,85,1.305,104,0.475,183,0.012,184,0.012,186,2.199,189,3.097,190,0.736,191,2.639,192,0.643,193,3.261,199,2.401,200,4.601,204,1.166,207,2.297,209,2.515,218,3.429,219,0.278,220,0.653,221,4.648,222,4.648,223,4.648,224,2.804,225,4.601,226,0.91,227,3.291,228,0.953,229,3.619,230,2.688,232,0.987,234,0.802,235,0.442,236,0.802,268,2.775,346,4.067,354,1.728,502,1.868,504,2.297,600,3.826,708,2.926,803,2.639,1150,2.926,1314,3.826,1318,5.108,1347,2.775,1393,4.719,1454,3.097,1543,2.515,1849,3.826,1894,3.097,2071,3.792,2100,4.134,2101,4.592,2102,4.592,2103,4.134,2109,4.592,2110,4.134,2245,4.592,2679,6.822,2680,5.287,2681,5.287,2682,5.674,2683,5.287,2684,5.287,2685,5.287,2686,5.287,2687,5.287]],["title/injectables/NotificationService.html",[258,1.456,792,2.32]],["body/injectables/NotificationService.html",[3,0.076,4,0.066,8,0.066,19,0.691,20,0.015,21,0.331,22,0.076,23,0.039,24,1.951,29,2.25,30,1.084,35,0.948,37,0.835,39,1.121,41,1.154,49,0.867,66,1.006,70,1.423,85,1.236,104,0.647,183,0.007,184,0.007,185,3.284,188,3.271,190,1.004,192,0.946,193,4.006,194,4.051,195,2.026,196,2.906,200,3.493,202,1.768,204,1.45,213,1.084,215,3.228,218,1.246,219,0.125,221,1.391,222,1.391,223,1.391,224,0.839,225,1.391,226,0.331,228,0.925,232,0.937,234,1.093,235,0.415,236,1.093,244,2.837,258,1.366,260,1.314,262,1.006,263,1.546,266,1.951,268,1.951,276,0.835,282,4.051,283,3.715,291,1.58,292,3.448,295,3.448,300,1.585,303,2.781,304,1.732,305,1.482,307,1.517,308,4.51,309,2.473,310,4.798,311,4.488,335,2.906,338,2.709,339,3.481,340,2.473,341,3.715,343,2.473,344,3.715,349,2.057,350,2.665,353,1.215,354,1.949,355,1.83,359,3.227,364,2.665,384,1.246,386,0.693,387,1.618,388,1.703,389,1.478,390,1.703,393,1.391,394,1.314,395,0.667,397,1.948,398,2.473,399,1.703,400,1.703,401,2.313,402,1.58,403,1.857,406,5.609,407,1.126,408,1.314,409,1.857,410,1.703,411,1.58,412,1.79,413,5.569,509,3.228,555,1.688,575,2.314,579,2.314,673,2.057,708,3.99,792,2.177,798,2.906,799,2.177,810,2.665,812,3.973,827,3.713,851,3.225,852,2.665,1091,2.314,1120,5.039,1125,3.448,1126,3.715,1138,3.859,1151,2.867,1162,2.177,1176,2.906,1185,2.665,1194,1.768,1199,3.715,1314,2.177,1323,4.293,1350,2.177,1389,3.284,1391,2.665,1393,2.473,1401,3.228,1502,3.228,1544,2.473,2043,2.473,2094,4.515,2096,2.062,2097,2.062,2098,2.062,2112,3.284,2229,3.228,2283,3.228,2373,2.473,2392,2.314,2483,3.228,2484,3.228,2522,3.228,2587,3.228,2617,5.749,2626,3.228,2688,2.062,2689,3.716,2690,3.716,2691,3.716,2692,3.716,2693,3.716,2694,3.716,2695,3.716,2696,3.716,2697,3.716,2698,3.716,2699,3.716,2700,3.716,2701,3.716,2702,3.716,2703,2.374,2704,3.716,2705,2.374,2706,3.716,2707,3.716,2708,2.374,2709,6.784,2710,3.716,2711,2.374,2712,5.18,2713,2.374,2714,3.716,2715,5.18,2716,2.374,2717,3.228,2718,3.716,2719,2.374,2720,3.716,2721,2.374,2722,3.716,2723,2.374,2724,4.499,2725,3.284,2726,3.716,2727,2.374,2728,3.228,2729,3.716,2730,2.374,2731,6.784,2732,3.716,2733,2.374,2734,3.716,2735,2.374,2736,3.716,2737,2.374,2738,3.716,2739,2.374,2740,3.716,2741,2.374,2742,2.374,2743,2.374,2744,2.374,2745,2.374,2746,2.374,2747,2.374,2748,2.374,2749,2.374,2750,2.374,2751,2.374,2752,2.374,2753,5.623,2754,2.374,2755,2.374,2756,2.374,2757,2.374,2758,2.374,2759,3.716,2760,2.374,2761,2.374,2762,2.374,2763,2.374,2764,2.374,2765,2.374,2766,2.374,2767,2.374,2768,2.374,2769,2.374,2770,2.374,2771,2.374]],["title/components/PendingVerificationComponent.html",[0,0.261,150,0.924]],["body/components/PendingVerificationComponent.html",[0,0.415,1,0.819,2,1.348,3,0.112,4,0.098,5,1.399,6,0.987,7,0.987,8,0.098,12,0.987,13,1.986,14,1.91,15,1.205,17,1.508,19,0.69,20,0.015,21,0.489,22,0.112,23,0.058,28,2.756,35,0.923,37,1.699,39,0.76,41,1.072,49,1.161,58,2.163,59,4.324,66,1.348,70,1.906,76,4.513,85,1.079,98,0.883,99,1.625,100,1.399,101,0.987,102,1.581,103,0.987,104,0.519,105,0.987,106,0.85,107,0.987,108,0.819,109,0.916,110,1.399,111,0.789,112,0.789,113,1.399,114,0.789,115,1.161,116,0.85,117,0.987,118,0.85,119,0.883,120,0.987,121,0.85,122,0.951,123,0.987,124,0.85,125,0.987,126,0.819,127,0.883,128,0.987,129,0.85,130,0.987,131,1.399,132,0.85,133,0.987,134,0.819,135,0.987,136,0.789,137,0.987,138,0.85,139,0.987,140,0.819,141,0.987,142,0.85,143,0.85,144,1.625,145,0.85,146,0.951,147,0.987,148,0.85,149,0.987,150,1.467,151,1.85,152,0.987,153,0.819,154,0.819,155,0.789,156,0.85,157,0.987,158,0.819,159,0.987,160,0.819,161,0.85,162,0.987,163,0.819,164,0.987,165,0.85,166,0.951,167,0.987,168,0.819,169,1.299,170,0.819,171,0.85,172,0.987,173,0.819,174,0.916,175,0.987,176,0.85,177,0.85,178,0.819,179,0.951,180,0.951,181,0.987,182,0.987,183,0.009,184,0.009,190,0.693,192,0.943,195,0.987,219,0.185,220,0.498,226,0.489,232,0.846,234,0.533,235,0.2,236,0.533,262,1.868,266,2.613,276,1.118,293,2.265,300,0.678,307,1.116,310,3.314,338,1.595,353,2.057,354,2.369,380,2.613,385,0.883,386,1.025,387,2.223,395,0.987,396,1.348,397,0.916,412,1.453,428,1.843,463,1.98,468,2.126,469,1.98,471,1.83,472,1.344,474,2.613,478,1.523,491,2.756,504,1.526,534,1.148,535,1.148,537,2.261,547,2.608,554,2.126,555,2.261,559,4.592,560,2.618,571,2.408,590,1.986,680,1.986,715,2.214,821,2.485,865,2.163,866,3.036,978,3.036,981,5.023,1072,4.948,1082,3.016,1083,2.51,1091,3.099,1093,4.592,1097,3.849,1104,5.465,1117,4.188,1124,1.526,1148,4.324,1149,3.621,1150,2.756,1162,2.916,1189,3.849,1191,4.324,1194,2.368,1207,1.944,1209,3.05,1229,2.746,1251,1.944,1270,3.893,1320,4.324,1350,2.916,1447,2.993,1454,2.916,1457,2.756,1458,2.756,1543,2.993,1571,4.324,1693,2.756,1750,2.057,1751,2.187,1819,3.571,1846,3.099,1864,4.592,1910,3.893,1930,2.187,1933,2.187,1934,2.187,1939,2.519,1962,2.519,2086,3.314,2194,3.314,2772,5.992,2773,3.05,2774,4.324,2775,4.978,2776,4.978,2777,4.978,2778,4.978,2779,3.893,2780,5.992,2781,4.978,2782,4.978,2783,4.978,2784,4.978,2785,6.292,2786,4.978,2787,3.314,2788,3.512,2789,3.512,2790,3.893,2791,4.978,2792,3.512,2793,2.519,2794,2.519,2795,2.338,2796,3.512,2797,3.05,2798,2.746,2799,3.512,2800,3.512,2801,5.783,2802,3.512,2803,3.571,2804,4.324,2805,3.512,2806,3.512,2807,4.324]],["title/classes/Profile.html",[23,0.065,391,2.32]],["body/classes/Profile.html",[3,0.14,4,0.123,8,0.123,20,0.015,22,0.14,23,0.072,29,1.909,35,0.92,37,0.987,39,1.256,41,1.045,58,2.522,74,3.152,87,1.909,104,0.395,183,0.01,184,0.01,186,1.828,190,1.077,191,2.897,192,0.791,195,1.235,204,1.44,205,3.4,207,1.909,212,2.897,213,2.017,214,3.614,219,0.231,220,0.58,226,0.808,228,0.959,229,3.68,230,2.443,231,2.653,232,1.02,234,0.666,235,0.456,236,0.666,300,1.12,303,2.542,304,0.987,305,2.315,306,3.436,323,3.436,354,2.35,355,1.553,360,3.4,391,3.4,484,3.817,510,3.265,537,3.472,556,2.736,600,3.807,618,3.817,803,3.244,1124,3.393,1128,3.152,1150,2.433,1161,1.996,1238,3.614,1277,5.088,1347,2.307,1391,3.152,1409,3.817,1436,5.042,1613,3.817,2043,2.925,2060,2.433,2083,3.436,2086,3.864,2165,6.639,2166,6.639,2179,6.005,2181,6.005,2279,6.639,2282,3.817,2324,3.817,2356,3.817,2361,3.817,2480,3.817,2481,3.817,2482,5.042,2635,3.817,2808,3.817,2809,3.436,2810,4.395,2811,4.395,2812,7.531,2813,4.395,2814,4.395,2815,4.395,2816,4.395,2817,4.395,2818,4.395,2819,4.395,2820,7.644,2821,7.644,2822,4.395,2823,4.395,2824,6.914,2825,5.805,2826,6.914,2827,5.805,2828,4.395,2829,4.395,2830,5.805,2831,4.395,2832,4.395,2833,4.395,2834,4.395,2835,4.395,2836,4.395,2837,4.395,2838,4.395,2839,4.395,2840,4.395,2841,4.395,2842,4.395,2843,4.395,2844,4.395,2845,4.395,2846,4.395,2847,4.395]],["title/interfaces/ProfileChat.html",[705,0.794,2124,2.84]],["body/interfaces/ProfileChat.html",[3,0.172,4,0.15,8,0.15,19,0.538,20,0.015,22,0.172,35,0.937,85,1.133,183,0.012,184,0.012,190,0.75,192,0.804,204,1.33,210,4.113,212,3.297,213,1.927,219,0.283,220,0.661,224,2.786,228,0.904,235,0.425,300,1.275,302,2.16,303,2.74,304,1.484,355,2.334,504,2.87,510,3.536,537,3.536,705,1.433,803,3.297,1027,4.51,1124,3.105,1140,3.87,1151,3.657,1161,3.001,1273,2.148,1276,4.21,1277,4.96,1279,5.738,1314,3.87,1544,4.397,1914,5.166,2071,4.738,2124,4.738,2338,6.473,2617,5.166,2848,4.676,2849,6.606,2850,6.606,2851,7.452,2852,6.606,2853,6.606]],["title/interfaces/Register.html",[155,0.89,705,0.794]],["body/interfaces/Register.html",[3,0.195,4,0.171,8,0.171,20,0.014,22,0.195,49,1.426,155,1.602,183,0.013,184,0.013,190,0.852,192,0.868,204,1.091,219,0.322,220,0.713,228,0.95,235,0.43,275,3.053,300,1.18,303,2.858,502,2.161,518,3.21,705,1.43,851,3.808,1083,3.101,1085,4.303,1273,2.44,1347,3.21,2779,4.782,2854,5.312]],["title/classes/RegisterWithExternal.html",[23,0.065,1181,2.636]],["body/classes/RegisterWithExternal.html",[3,0.155,4,0.136,8,0.136,20,0.015,22,0.155,23,0.08,35,0.937,41,1.155,49,1.445,66,1.677,87,3.296,104,0.436,183,0.011,184,0.011,186,2.021,190,0.863,192,0.903,195,1.365,204,1.376,209,2.947,219,0.256,220,0.619,226,0.676,228,0.962,232,0.967,234,0.737,235,0.432,236,0.737,262,2.113,300,1.195,303,2.789,304,1.614,338,2.814,342,2.277,343,4.123,353,1.588,380,3.251,412,1.865,471,2.277,472,1.859,502,2.189,821,3.092,1083,3.144,1092,3.484,1111,3.484,1149,3.251,1156,5.441,1157,5.697,1161,2.206,1165,4.219,1181,4.781,1183,4.246,1184,5.333,1185,3.484,1280,4.443,1348,4.443,1375,4.843,1382,3.798,1541,4.843,1693,3.429,1821,3.484,1822,4.443,2049,4.219,2052,4.219,2053,6.779,2054,6.103,2055,6.103,2058,5.38,2059,6.238,2060,3.429,2061,5.923,2062,5.38,2066,4.219,2067,3.798,2068,3.798,2069,3.484,2373,3.233,2855,4.219,2856,4.857,2857,6.194,2858,6.194,2859,4.857,2860,4.857,2861,4.857,2862,4.857,2863,4.857]],["title/components/RegisterWithThirdPartyComponent.html",[0,0.261,154,0.924]],["body/components/RegisterWithThirdPartyComponent.html",[0,0.362,1,0.619,2,1.096,3,0.085,4,0.074,5,1.138,6,0.745,7,0.745,8,0.074,12,0.745,13,1.942,14,1.868,15,0.98,17,1.226,19,0.649,20,0.015,21,0.369,22,0.085,23,0.043,28,3.041,30,1.181,35,0.943,37,1.329,39,0.574,41,1.124,47,2.119,49,1.281,51,3.516,66,1.688,85,0.694,98,0.666,99,1.38,100,1.138,101,0.745,102,1.381,103,0.745,104,0.493,105,0.745,106,0.642,107,0.745,108,0.619,109,0.692,110,1.138,111,0.596,112,0.596,113,1.138,114,0.596,115,0.944,116,0.642,117,0.745,118,0.642,119,0.666,120,0.745,121,0.642,122,0.718,123,0.745,124,0.642,125,0.745,126,0.619,127,0.666,128,0.745,129,0.642,130,0.745,131,1.138,132,0.642,133,0.745,134,0.619,135,0.745,136,0.596,137,0.745,138,0.642,139,0.745,140,0.619,141,0.745,142,0.642,143,0.642,144,1.38,145,0.642,146,0.718,147,0.745,148,0.642,149,0.745,150,0.619,151,0.692,152,0.745,153,0.619,154,1.281,155,1.597,156,1.958,157,0.745,158,0.619,159,0.745,160,0.619,161,0.642,162,0.745,163,0.619,164,0.745,165,0.642,166,0.718,167,0.745,168,0.619,169,1.056,170,0.619,171,0.642,172,0.745,173,0.619,174,0.692,175,0.745,176,0.642,177,0.642,178,0.619,179,0.718,180,0.718,181,0.745,182,0.745,183,0.007,184,0.007,190,0.684,192,0.945,195,1.38,204,0.98,213,1.603,219,0.14,220,0.405,226,0.369,228,0.825,230,0.937,232,0.948,234,0.614,235,0.391,236,0.614,244,1.262,262,1.893,266,2.125,276,0.909,293,2.118,300,1.251,302,1.323,303,1.488,304,1.401,305,1.615,307,1.251,353,2.039,354,2.187,355,1.43,380,2.125,385,0.666,386,0.774,387,1.941,395,0.745,396,1.756,397,1.056,401,0.834,407,1.487,412,1.567,463,1.729,469,1.729,471,2.02,472,1.015,474,2.125,475,2.02,478,1.571,502,1.43,504,1.152,525,2.52,534,2.187,535,2.187,547,2.175,554,1.805,555,1.839,556,2.52,560,1.684,571,1.549,590,1.058,629,2.02,680,1.615,684,2.52,715,1.549,716,2.02,777,2.02,821,2.02,865,1.759,866,2.577,884,1.902,930,1.262,978,3.106,1079,5.382,1082,1.684,1083,1.958,1092,5.29,1095,2.52,1111,3.94,1124,3.284,1125,3.657,1138,2.125,1144,3.165,1149,2.125,1150,2.241,1156,2.903,1166,2.241,1181,1.765,1183,3.056,1194,1.926,1207,1.468,1212,2.303,1244,3.516,1364,2.903,1429,3.165,1447,3.182,1454,2.371,1457,2.241,1458,2.241,1543,2.613,1546,2.903,1690,2.903,1692,2.371,1750,1.553,1819,2.903,1826,3.056,1829,3.268,1830,3.268,1834,3.42,1836,2.694,1838,3.94,1839,3.918,1842,5.23,1846,2.52,1848,3.218,1849,2.371,1850,2.371,1855,3.165,1863,2.903,1864,2.694,1876,4.096,1877,2.694,1883,3.165,1884,2.694,1886,3.883,1887,3.657,1888,2.52,1889,2.694,1890,2.52,1891,2.694,1892,2.694,1893,2.694,1894,2.371,1903,2.903,1904,2.694,1905,2.903,1915,2.694,1922,3.466,1929,1.651,1930,1.651,1933,1.651,1934,1.651,1938,2.074,1939,1.902,1943,1.651,1945,1.651,1946,1.765,1954,1.765,1955,1.651,1956,2.074,1972,1.902,1973,1.902,1974,1.902,2000,2.074,2001,3.516,2030,1.765,2035,2.903,2037,2.074,2043,2.694,2046,2.074,2050,2.52,2054,3.839,2055,3.839,2067,4.296,2068,4.626,2069,3.94,2194,2.694,2779,3.165,2787,2.694,2790,3.165,2793,1.902,2794,1.902,2795,1.765,2798,2.074,2864,6.518,2865,2.303,2866,6.689,2867,4.048,2868,4.048,2869,4.048,2870,4.048,2871,4.048,2872,4.048,2873,4.048,2874,4.909,2875,4.909,2876,5.494,2877,2.652,2878,4.048,2879,4.909,2880,2.652,2881,2.652,2882,2.652,2883,2.652,2884,2.903,2885,2.903,2886,2.652,2887,4.048,2888,4.048,2889,4.048,2890,2.652,2891,3.165,2892,3.165,2893,4.048,2894,2.652,2895,2.652,2896,2.652,2897,2.652,2898,2.652,2899,2.652,2900,2.652,2901,2.652,2902,2.652,2903,5.494,2904,2.652,2905,2.652,2906,4.048,2907,2.652,2908,2.303,2909,2.303,2910,2.652,2911,2.652,2912,2.652,2913,2.652,2914,2.652,2915,2.303,2916,2.652,2917,3.165,2918,3.165,2919,2.303,2920,3.165,2921,2.303]],["title/components/RegistrationComponent.html",[0,0.261,158,0.924]],["body/components/RegistrationComponent.html",[0,0.329,1,0.518,2,0.955,3,0.071,4,0.062,5,0.991,6,1.53,7,0.624,8,0.062,12,0.624,13,1.909,14,1.835,15,0.854,19,0.649,20,0.015,21,0.309,22,0.071,23,0.036,30,1.457,35,0.925,37,1.691,39,0.481,41,1.151,47,1.198,49,1.164,66,1.474,85,0.381,87,2.169,98,0.558,99,1.232,100,0.991,101,0.624,102,1.255,103,0.624,104,0.489,105,0.624,106,0.538,107,0.624,108,0.518,109,0.579,110,0.991,111,0.499,112,0.499,113,0.991,114,0.499,115,0.822,116,0.538,117,0.624,118,0.538,119,0.886,120,0.624,121,0.538,122,0.601,123,0.624,124,0.538,125,0.624,126,0.518,127,0.558,128,0.624,129,0.538,130,0.624,131,0.991,132,0.538,133,0.624,134,0.518,135,0.624,136,0.499,137,0.624,138,0.538,139,0.624,140,0.518,141,0.624,142,0.538,143,0.538,144,1.232,145,0.538,146,0.601,147,0.624,148,0.538,149,0.624,150,0.518,151,0.579,152,0.624,153,0.518,154,0.518,155,1.645,156,0.538,157,0.624,158,1.164,159,0.624,160,0.518,161,0.538,162,0.624,163,0.518,164,0.624,165,0.538,166,0.601,167,0.624,168,0.518,169,0.92,170,0.518,171,0.538,172,0.624,173,0.518,174,0.579,175,0.624,176,0.538,177,0.538,178,0.518,179,0.601,180,0.601,181,0.624,182,0.624,183,0.006,184,0.006,190,0.695,192,0.95,195,1.232,204,0.891,213,1.029,219,0.117,220,0.353,224,0.785,226,0.491,228,0.509,230,0.785,232,0.905,234,0.665,235,0.346,236,0.665,262,1.706,263,1.467,266,1.851,275,1.76,276,0.792,293,2.015,300,1.051,302,1.632,303,1.612,304,1.302,305,1.406,307,1.253,331,1.229,338,1.602,339,1.166,353,2.322,354,1.78,355,1.246,360,2.065,380,1.851,385,0.558,386,0.648,387,1.764,396,1.945,397,0.92,401,0.699,407,1.512,408,3.014,412,1.584,426,1.229,428,2.301,463,1.571,468,1.612,469,1.571,471,1.835,472,0.85,474,1.851,475,2.893,478,1.526,486,4.258,502,1.246,504,1.905,505,3.062,525,2.195,534,1.78,535,1.78,547,2.002,554,1.296,555,1.602,556,3.108,560,1.467,571,2.219,590,2.312,597,2.59,621,1.009,629,1.76,680,1.406,714,1.467,715,1.678,776,1.109,777,1.76,785,2.347,799,2.065,803,1.76,821,1.76,865,1.532,866,2.301,930,1.057,978,2.301,1040,1.593,1044,1.593,1047,3.145,1056,3.581,1066,1.478,1082,1.467,1083,2.514,1085,2.427,1092,5.204,1095,2.195,1124,0.965,1138,1.851,1147,3.062,1149,1.851,1166,1.952,1167,2.529,1168,4.336,1183,4.365,1189,3.624,1194,1.677,1207,1.229,1238,2.195,1246,1.737,1251,1.229,1301,3.323,1350,2.065,1353,2.065,1364,2.529,1367,4.227,1454,2.065,1510,1.478,1512,2.195,1536,2.347,1543,2.375,1579,3.581,1580,3.145,1581,2.529,1582,2.918,1583,4.428,1588,3.624,1589,2.347,1590,3.323,1591,3.782,1592,4.597,1593,3.624,1594,3.624,1595,4.042,1598,3.624,1601,1.737,1604,2.918,1607,4.521,1608,4.157,1614,4.357,1615,2.529,1617,1.737,1618,1.737,1619,3.323,1620,1.593,1621,1.593,1636,2.529,1637,2.529,1644,1.737,1645,3.108,1674,2.529,1675,1.737,1685,2.757,1690,2.529,1691,2.347,1692,2.065,1693,1.952,1694,1.593,1696,3.145,1710,3.428,1750,1.301,1751,1.383,1777,1.478,1794,1.593,1819,3.581,1821,2.529,1822,2.529,1826,2.73,1827,3.808,1829,2.918,1830,2.918,1832,3.428,1833,3.062,1834,3.108,1835,4.336,1836,2.347,1837,3.904,1838,3.581,1839,3.692,1840,4.336,1841,4.336,1842,4.928,1843,4.336,1844,4.336,1846,2.195,1847,3.062,1848,2.924,1849,2.065,1850,2.065,1852,3.062,1853,3.062,1854,2.529,1855,2.757,1859,3.062,1860,3.062,1863,3.581,1868,3.062,1869,4.336,1874,1.737,1876,3.896,1877,2.347,1880,3.062,1883,3.904,1884,2.347,1886,3.608,1887,3.323,1888,2.195,1889,2.347,1890,2.195,1891,2.347,1892,2.347,1893,2.347,1894,2.065,1903,2.529,1904,2.347,1905,2.529,1915,2.347,1917,3.905,1918,1.593,1919,3.062,1920,3.062,1922,3.189,1927,1.929,1928,1.737,1929,1.383,1930,1.383,1931,1.929,1932,1.737,1933,1.383,1934,1.383,1936,1.737,1937,1.929,1942,1.929,1943,1.383,1945,1.383,1946,2.918,1947,3.062,1948,1.929,1949,1.929,1950,1.929,1951,1.929,1952,1.929,1953,1.929,1954,1.478,1955,1.383,1956,1.737,1959,1.929,1968,1.737,1969,1.929,1970,3.062,1971,1.929,1972,2.529,1973,1.593,1974,1.593,1975,1.929,1976,1.929,1977,3.062,1978,3.062,1979,1.929,1980,1.929,1981,1.929,1982,1.929,1983,1.929,1984,1.929,1985,1.929,1986,1.929,1987,1.929,1988,1.929,1989,1.929,1990,1.929,1992,1.929,1994,1.929,1995,1.929,2000,1.737,2022,1.929,2023,1.929,2030,1.478,2031,1.737,2035,3.581,2036,1.737,2037,1.737,2038,3.581,2039,3.581,2040,2.757,2041,1.737,2043,2.347,2045,1.737,2046,1.737,2047,1.737,2050,2.195,2676,1.737,2728,1.929,2795,1.478,2809,2.757,2884,2.529,2885,2.529,2891,2.757,2892,2.757,2908,1.929,2909,1.929,2915,1.929,2917,3.904,2918,3.904,2919,1.929,2920,2.757,2921,1.929,2922,1.929,2923,3.526,2924,3.526,2925,4.385,2926,3.526,2927,4.385,2928,3.526,2929,2.221,2930,3.526,2931,2.221,2932,2.221,2933,3.526,2934,2.221,2935,2.221,2936,2.221,2937,2.221,2938,2.221,2939,2.221,2940,2.221,2941,2.221,2942,2.221,2943,2.221,2944,2.221,2945,1.929,2946,1.929,2947,1.929,2948,1.929,2949,1.929,2950,1.929,2951,2.221,2952,2.221,2953,2.221,2954,2.221,2955,2.221,2956,2.221,2957,3.062,2958,3.062,2959,2.757,2960,2.757,2961,3.062,2962,4.336,2963,3.062,2964,3.062,2965,1.929,2966,5.276,2967,1.737,2968,2.757,2969,3.526,2970,3.808,2971,1.737,2972,2.221,2973,1.929,2974,1.929,2975,1.929,2976,1.593,2977,2.221,2978,2.221,2979,2.757,2980,1.929,2981,1.929,2982,3.904,2983,1.929,2984,1.929,2985,1.929,2986,1.593,2987,1.929,2988,1.929,2989,1.929,2990,2.221,2991,2.221,2992,2.221,2993,1.929,2994,2.221,2995,2.221]],["title/classes/ReplyNotificationModel.html",[23,0.065,2725,2.84]],["body/classes/ReplyNotificationModel.html",[3,0.143,4,0.125,8,0.125,19,0.448,20,0.015,22,0.143,23,0.073,35,0.809,37,1.322,39,1.508,41,0.855,70,2.252,85,1.344,104,0.403,183,0.01,184,0.01,186,1.866,188,4.03,189,2.627,190,0.624,191,3.478,192,0.716,193,2.936,195,1.653,198,3.915,199,2.672,200,4.655,202,3.533,204,1.37,205,4.082,207,3.028,209,3.533,210,3.662,217,3.915,218,4.03,219,0.236,220,0.588,221,4.35,222,4.35,223,4.35,224,2.624,225,4.082,226,0.819,227,2.792,228,0.96,229,3.315,230,2.462,231,2.663,232,1.006,234,0.68,235,0.45,236,0.68,238,4.816,239,2.985,240,2.985,241,2.985,242,2.985,243,2.985,244,2.133,245,2.985,346,4.339,364,4.219,1133,4.6,1280,4.219,1376,5.57,1392,5.449,1393,4.638,1394,6.072,1395,6.072,1396,3.507,1397,3.507,2094,5.11,2095,4.219,2100,3.507,2103,3.507,2104,3.895,2388,4.219,2392,3.662,2682,3.895,2724,5.109,2725,4.219,2996,6.573,2997,5.883,2998,6.969,2999,7.765,3000,7.765,3001,5.883,3002,4.485,3003,4.485,3004,4.485]],["title/interfaces/ResetPassword.html",[705,0.794,1105,2.636]],["body/interfaces/ResetPassword.html",[3,0.195,4,0.17,8,0.17,20,0.014,22,0.195,35,0.827,49,1.425,183,0.013,184,0.013,190,0.851,192,0.867,219,0.322,220,0.713,228,0.95,235,0.43,311,3.803,338,3.53,502,2.159,518,3.207,705,1.429,1083,3.1,1094,4.777,1095,3.803,1105,4.742,1273,2.437,1347,3.207,2787,4.066,3005,5.306,3006,6.75]],["title/components/ResetPasswordComponent.html",[0,0.261,160,0.924]],["body/components/ResetPasswordComponent.html",[0,0.381,1,0.683,2,1.181,3,0.093,4,0.082,5,1.226,6,0.823,7,0.823,8,0.082,12,0.823,13,1.959,14,1.884,15,1.056,17,1.322,19,0.671,20,0.015,21,0.408,22,0.093,23,0.048,28,2.415,30,1.686,35,0.922,37,1.635,39,0.634,41,1.083,47,1.483,49,1.018,66,1.181,85,0.748,87,1.896,98,0.736,99,1.465,100,1.226,101,0.823,102,1.452,103,0.823,104,0.519,105,0.823,106,0.709,107,0.823,108,0.683,109,0.764,110,1.226,111,0.658,112,0.658,113,1.226,114,0.658,115,1.018,116,0.709,117,0.823,118,0.709,119,0.736,120,0.823,121,0.709,122,0.793,123,0.823,124,0.709,125,0.823,126,0.683,127,0.736,128,0.823,129,0.709,130,0.823,131,1.226,132,0.709,133,0.823,134,0.683,135,0.823,136,0.658,137,0.823,138,0.709,139,0.823,140,0.683,141,0.823,142,0.709,143,0.709,144,1.465,145,0.709,146,0.793,147,0.823,148,0.709,149,0.823,150,0.683,151,0.764,152,0.823,153,0.683,154,0.683,155,0.658,156,0.709,157,0.823,158,0.683,159,0.823,160,1.347,161,1.624,162,0.823,163,0.683,164,0.823,165,0.709,166,0.793,167,0.823,168,0.683,169,1.138,170,0.683,171,0.709,172,0.823,173,0.683,174,0.764,175,0.823,176,0.709,177,0.709,178,0.683,179,0.793,180,0.793,181,0.823,182,0.823,183,0.008,184,0.008,190,0.726,192,0.949,195,0.823,213,1.273,219,0.154,220,0.436,226,0.408,228,0.845,230,1.035,232,0.958,234,0.662,235,0.402,236,0.662,244,1.394,262,1.754,276,0.98,293,2.173,300,1.294,302,1.889,304,0.98,305,1.74,307,1.25,311,2.717,338,2.624,353,1.889,354,2.117,355,1.542,360,2.556,380,2.29,385,0.736,386,0.855,387,2.041,395,0.823,396,1.412,397,0.764,401,0.922,407,1.322,412,1.552,428,1.538,463,1.818,468,1.917,469,1.818,471,2.124,472,1.121,474,2.29,475,2.884,478,1.496,502,1.542,504,2.265,525,2.717,534,2.02,535,2.02,537,2.942,547,2.271,554,1.917,555,1.982,556,2.717,559,2.904,560,1.815,561,3.79,571,1.67,590,1.169,667,2.415,680,1.74,715,1.67,716,2.178,785,2.904,821,2.178,930,1.394,978,2.737,1077,5.435,1083,2.304,1085,2.415,1094,5.391,1095,4.588,1105,4.311,1116,3.79,1117,2.904,1124,1.273,1138,2.29,1150,2.415,1166,2.415,1176,3.412,1194,2.076,1207,1.622,1210,2.544,1251,1.622,1323,4.589,1447,3.28,1457,2.415,1458,2.415,1536,2.904,1543,2.748,1692,2.556,1750,1.716,1751,1.824,1826,3.246,1829,3.47,1830,3.47,1834,3.597,1836,2.904,1839,4.038,1846,2.717,1848,3.384,1849,2.556,1850,2.556,1864,4.589,1876,4.201,1877,2.904,1884,2.904,1886,4.032,1887,3.845,1888,2.717,1889,2.904,1890,2.717,1891,2.904,1892,2.904,1893,2.904,1894,2.556,1915,2.904,1922,3.619,1929,1.824,1930,1.824,1933,1.824,1934,1.824,1938,2.291,1939,2.101,1943,1.824,1945,1.824,1946,1.95,1954,1.95,1955,1.824,1962,3.13,2007,3.412,2030,1.95,2038,4.645,2039,4.645,2040,3.412,2041,2.291,2047,2.291,2050,2.717,2069,4.144,2194,2.904,2787,2.904,2790,3.412,2793,2.101,2794,2.101,2795,1.95,2797,2.544,2798,2.291,2803,2.101,2804,2.544,2884,3.13,2885,3.13,2917,3.412,2918,3.412,2946,2.544,2947,2.544,2948,2.544,2949,2.544,2950,2.544,2959,3.412,2960,3.412,2961,3.79,2962,5.018,2963,3.79,2964,3.79,3006,3.79,3007,6.582,3008,2.544,3009,4.363,3010,4.363,3011,4.363,3012,4.363,3013,4.529,3014,5.214,3015,5.214,3016,5.018,3017,4.363,3018,2.93,3019,3.79,3020,2.93,3021,2.93,3022,2.93,3023,2.93,3024,2.93,3025,2.93,3026,2.93,3027,2.93,3028,2.93,3029,2.93,3030,2.93,3031,5.777,3032,2.93,3033,2.93,3034,2.93,3035,2.93,3036,2.93,3037,2.93,3038,3.79]],["title/components/SearchComponent.html",[0,0.261,163,0.924]],["body/components/SearchComponent.html",[0,0.254,1,0.428,2,0.818,3,0.058,4,0.051,5,0.515,6,0.515,7,0.515,8,0.051,12,0.515,13,1.868,14,1.794,15,0.731,17,0.915,19,0.531,20,0.015,21,0.255,22,0.058,23,0.03,28,2.131,29,1.312,30,1.302,35,0.911,37,1.365,39,1.148,41,1.156,49,1.622,66,1.736,70,1.474,83,1.315,85,1.285,87,1.673,98,0.461,99,1.254,100,0.849,101,0.515,102,1.122,103,0.515,104,0.733,105,0.515,106,0.444,107,0.515,108,0.428,109,0.478,110,0.849,111,0.412,112,0.412,113,0.849,114,0.412,115,1.041,116,0.444,117,0.515,118,0.444,119,0.461,120,0.515,121,0.444,122,0.497,123,0.515,124,0.444,125,0.515,126,0.428,127,0.461,128,0.515,129,0.444,130,0.515,131,0.849,132,0.444,133,0.515,134,0.428,135,0.515,136,0.412,137,0.515,138,0.444,139,0.515,140,0.428,141,0.515,142,0.444,143,1.285,144,1.082,145,0.444,146,0.497,147,0.515,148,0.444,149,0.515,150,0.428,151,0.478,152,0.515,153,0.428,154,0.428,155,0.412,156,0.444,157,0.515,158,0.428,159,0.515,160,0.428,161,0.444,162,0.515,163,1.238,164,0.515,165,1.195,166,1.208,167,0.515,168,0.428,169,0.788,170,0.428,171,0.444,172,0.515,173,0.428,174,0.478,175,0.515,176,0.444,177,0.444,178,0.428,179,0.497,180,0.497,181,0.515,182,0.515,183,0.005,184,0.005,190,0.687,192,0.864,195,0.849,199,1.372,201,1.434,202,3.869,204,0.539,212,2.927,213,1.123,219,0.097,220,0.302,226,0.255,228,0.447,231,2.065,232,0.934,234,0.805,235,0.42,236,0.805,262,1.806,263,0.763,276,0.678,293,1.777,300,0.743,304,0.678,305,2.117,307,1.264,331,1.015,342,1.641,346,3.305,354,1.613,355,0.648,359,2.123,360,3.287,361,2.761,385,0.461,395,0.515,396,1.437,397,1.585,401,0.95,407,1.984,412,1.612,463,1.404,471,1.641,472,1.156,473,2.779,476,4.611,478,1.703,480,1.074,491,1.672,521,1.221,524,2.01,530,2.242,531,0.915,534,1.735,535,1.735,547,0.674,552,3.807,558,1.593,560,2.858,590,1.205,593,3.75,621,3.029,635,3.329,649,1.831,650,1.857,653,2.343,655,1.372,656,2.01,657,3.072,671,3.728,673,1.015,681,1.672,684,1.142,690,2.131,694,3.284,697,1.221,698,0.797,699,1.372,714,1.256,715,1.889,723,2.01,737,1.015,777,0.915,785,1.221,788,1.434,799,1.074,802,3.287,803,1.922,812,2.255,819,2.01,823,2.01,833,1.88,836,3.49,851,1.142,865,1.312,866,2.021,875,1.074,876,1.015,884,1.315,930,0.872,951,1.221,1124,2.718,1125,2.01,1126,1.315,1128,1.315,1133,2.361,1139,2.397,1140,2.255,1164,1.593,1166,1.672,1169,3.49,1194,1.437,1263,2.361,1302,1.315,1316,2.361,1323,1.221,1447,2.123,1457,2.131,1458,1.015,1518,4.892,1532,2.166,1566,2.361,1691,2.01,1692,2.255,1693,1.672,1707,1.434,1780,3.876,1839,3.435,1848,1.769,1850,1.769,1876,3.665,1882,2.361,1890,3.072,1896,2.361,1904,2.97,1908,2.166,1922,2.614,2021,2.623,2078,1.593,2086,2.01,2244,1.434,2343,3.344,2364,1.434,2388,2.166,2517,1.593,2525,2.623,2549,5.374,2566,2.623,2567,3.876,2571,3.876,2579,2.623,2717,1.593,2787,1.221,2920,1.434,2960,2.361,2971,3.858,2976,2.166,2986,2.761,2993,2.623,3039,1.593,3040,3.02,3041,3.02,3042,3.85,3043,3.85,3044,3.85,3045,3.85,3046,3.85,3047,3.85,3048,3.85,3049,3.85,3050,3.85,3051,4.463,3052,3.02,3053,3.02,3054,4.463,3055,3.02,3056,3.02,3057,3.02,3058,3.02,3059,3.85,3060,3.85,3061,1.434,3062,4.463,3063,1.834,3064,3.02,3065,3.02,3066,3.02,3067,1.834,3068,3.85,3069,5.309,3070,3.02,3071,1.834,3072,3.02,3073,3.02,3074,1.834,3075,5.612,3076,6.076,3077,3.85,3078,1.834,3079,1.834,3080,1.834,3081,1.834,3082,3.02,3083,1.834,3084,2.361,3085,3.02,3086,1.834,3087,4.463,3088,4.463,3089,3.02,3090,1.834,3091,6.076,3092,1.834,3093,1.834,3094,2.623,3095,4.463,3096,4.463,3097,4.463,3098,4.463,3099,4.463,3100,3.876,3101,4.463,3102,4.463,3103,4.463,3104,4.463,3105,4.463,3106,4.463,3107,2.361,3108,4.463,3109,2.623,3110,3.02,3111,3.02,3112,3.02,3113,3.02,3114,3.02,3115,4.463,3116,4.463,3117,3.02,3118,3.02,3119,3.02,3120,3.02,3121,3.02,3122,3.02,3123,3.02,3124,3.02,3125,4.463,3126,4.463,3127,4.463,3128,1.834,3129,3.02,3130,3.02,3131,3.02,3132,3.02,3133,3.02,3134,3.02,3135,3.02,3136,3.02,3137,3.02,3138,3.02,3139,3.02,3140,3.02,3141,3.02,3142,3.02,3143,3.02,3144,3.02,3145,1.834,3146,1.834,3147,1.834,3148,4.463,3149,5.864,3150,3.02,3151,4.935,3152,1.834,3153,1.834,3154,1.834,3155,1.834,3156,1.834,3157,1.834,3158,1.834,3159,1.834,3160,1.834,3161,3.85,3162,3.02,3163,1.834,3164,1.834,3165,3.85,3166,1.834,3167,1.834,3168,1.834,3169,3.85,3170,1.834,3171,3.85,3172,1.834,3173,1.834,3174,4.463,3175,5.309,3176,4.463,3177,1.834,3178,3.02,3179,1.834,3180,1.834,3181,1.834,3182,1.834,3183,1.834,3184,1.834,3185,1.834,3186,1.834,3187,3.85,3188,1.834,3189,1.834,3190,1.834,3191,1.834,3192,1.834,3193,1.834,3194,4.935,3195,1.834,3196,1.834,3197,3.02,3198,1.834,3199,1.834,3200,1.834,3201,3.02,3202,1.834,3203,1.834,3204,1.834,3205,1.593,3206,1.834,3207,1.834,3208,1.834,3209,1.834,3210,1.834,3211,1.834,3212,1.834,3213,1.834,3214,1.834,3215,1.834,3216,1.834,3217,1.834,3218,1.834,3219,1.593,3220,1.834,3221,1.834,3222,3.02,3223,1.834,3224,1.834,3225,1.834,3226,1.834,3227,1.834,3228,1.834,3229,3.02,3230,1.834,3231,4.463,3232,3.02,3233,1.593,3234,1.834,3235,3.02,3236,3.02,3237,3.02,3238,3.02,3239,3.02,3240,3.02,3241,3.02,3242,3.02,3243,4.463,3244,3.02,3245,3.02,3246,4.463,3247,4.463,3248,3.02,3249,3.02,3250,3.02,3251,1.834]],["title/components/SearchServiceComponent.html",[0,0.261,165,0.959]],["body/components/SearchServiceComponent.html",[0,0.436,1,1.061,2,1.608,3,0.145,4,0.127,5,1.279,6,1.279,7,1.279,8,0.127,12,1.279,13,2.017,14,1.942,15,1.438,17,1.799,19,0.594,20,0.015,21,0.634,22,0.145,23,0.075,30,1.733,35,0.844,39,0.984,66,1.608,98,1.144,99,1.669,100,1.669,101,1.279,102,1.761,103,1.279,104,0.594,105,1.279,106,1.102,107,1.279,108,1.061,109,1.187,110,1.669,111,1.022,112,1.022,113,1.669,114,1.022,115,1.385,116,1.102,117,1.279,118,1.102,119,1.144,120,1.279,121,1.102,122,1.232,123,1.279,124,1.102,125,1.279,126,1.061,127,1.144,128,1.279,129,1.102,130,1.279,131,1.669,132,1.102,133,1.279,134,1.061,135,1.279,136,1.022,137,1.279,138,1.102,139,1.279,140,1.061,141,1.279,142,1.102,143,1.102,144,1.858,145,1.102,146,1.232,147,1.279,148,1.102,149,1.279,150,1.061,151,1.187,152,1.279,153,1.061,154,1.061,155,1.022,156,1.102,157,1.279,158,1.061,159,1.279,160,1.061,161,1.102,162,1.279,163,1.061,164,1.279,165,1.697,166,2.108,167,1.279,168,1.061,169,1.549,170,1.061,171,1.102,172,1.279,173,1.061,174,1.187,175,1.279,176,1.102,177,1.102,178,1.061,179,1.232,180,1.232,181,1.279,182,1.279,183,0.011,184,0.011,190,0.634,192,0.554,219,0.24,220,0.594,226,0.921,228,0.768,232,0.893,234,0.69,235,0.259,236,0.69,262,1.232,276,1.334,300,0.878,305,2.369,307,0.878,386,1.328,396,1.79,407,1.799,412,1.144,478,1.102,534,1.942,535,1.942,552,4.26,649,3.334,802,3.479,951,4.839,1139,4.642,1312,3.264,1323,4.665,1350,2.666,1814,5.742,2085,3.952,2549,5.214,2590,5.742,3252,6.314,3253,3.952,3254,5.939,3255,5.939,3256,6.612,3257,6.612,3258,5.939,3259,5.939,3260,5.939,3261,4.551,3262,5.939,3263,5.939,3264,4.551,3265,4.551,3266,4.551,3267,4.551,3268,4.551,3269,4.551,3270,4.551,3271,4.551,3272,5.939]],["title/components/SeasonDetailsComponent.html",[0,0.261,168,0.924]],["body/components/SeasonDetailsComponent.html",[0,0.296,1,0.537,2,0.982,3,0.203,4,0.064,5,0.647,6,0.647,7,0.647,8,0.064,12,0.647,13,1.916,14,1.842,15,0.878,19,0.449,20,0.015,21,0.32,22,0.073,23,0.038,29,2.212,30,1.309,35,0.796,37,1.144,39,1.101,41,1.028,47,1.232,49,1.187,85,1.195,98,0.578,99,1.019,100,1.261,101,0.647,102,1.279,103,0.647,104,0.457,105,0.647,106,0.557,107,0.647,108,0.537,109,0.6,110,1.019,111,0.517,112,0.517,113,1.019,114,0.517,115,1.531,116,0.557,117,0.647,118,0.557,119,0.578,120,0.647,121,0.557,122,0.623,123,0.647,124,0.557,125,0.647,126,0.537,127,0.578,128,0.647,129,0.557,130,0.647,131,1.019,132,0.557,133,0.647,134,0.537,135,0.647,136,0.517,137,0.647,138,0.557,139,0.647,140,0.537,141,0.647,142,0.557,143,1.086,144,1.261,145,0.557,146,0.623,147,0.647,148,0.557,149,0.647,150,0.537,151,0.6,152,0.647,153,0.537,154,0.537,155,0.517,156,0.557,157,0.647,158,0.537,159,0.647,160,0.537,161,0.557,162,0.647,163,0.537,164,0.647,165,0.557,166,0.623,167,0.647,168,1.187,169,1.984,170,0.537,171,1.341,172,0.647,173,0.537,174,0.6,175,0.647,176,0.557,177,0.557,178,0.537,179,0.623,180,0.623,181,0.647,182,0.647,183,0.006,184,0.006,190,0.32,192,0.86,195,0.647,202,2.422,219,0.121,220,0.363,226,0.505,232,0.785,234,0.55,235,0.29,236,0.772,276,0.814,300,0.444,302,1.664,307,0.982,342,1.333,347,1.531,354,0.752,355,1.281,360,2.982,385,0.578,396,0.982,397,1.328,408,2.007,412,0.578,426,3.257,463,1.602,475,2.765,478,1.491,491,1.273,502,0.813,520,1.998,546,1.65,579,3.834,590,0.918,593,1.273,597,2.134,600,2.982,616,2.835,620,1.348,621,1.045,635,1.81,649,1.725,650,2.118,653,2.355,698,1,699,1.045,714,3.09,776,2.239,800,3.389,807,1.65,830,1.65,833,2.257,865,1.575,941,1.348,953,4.577,1115,1.998,1189,2.986,1194,2.422,1214,1.432,1300,4.821,1301,3.389,1302,1.65,1312,3.652,1340,3.508,1367,3.663,1447,2.422,1454,1.348,1494,1.998,1510,1.531,1512,2.257,1579,4.821,1580,4.821,1581,4.22,1582,4.562,1583,4.943,1585,5.349,1586,4.422,1588,4.817,1589,4.706,1590,4.099,1591,3.834,1592,4.706,1593,4.562,1594,4.099,1595,4.268,1596,3.149,1597,3.149,1598,1.531,1601,4.331,1604,1.531,1606,1.998,1607,4.999,1608,4.999,1609,1.998,1614,4.22,1615,2.6,1616,5.349,1619,3.389,1620,1.65,1621,1.65,1624,1.998,1631,1.998,1634,3.149,1635,1.998,1636,2.6,1637,2.6,1639,3.897,1640,1.998,1642,3.897,1643,6.054,1644,2.835,1645,2.257,1647,4.331,1648,1.998,1660,1.998,1663,3.149,1664,1.998,1666,1.998,1668,1.998,1670,3.149,1674,4.821,1688,4.811,1689,4.331,1691,3.389,1693,2.818,1694,2.6,1695,1.998,1696,3.218,1698,1.799,1700,5.542,1701,3.149,1703,4.811,1706,5.111,1713,3.897,1728,1.799,1729,3.897,1732,4.422,1733,1.998,1771,1.998,1777,1.531,1837,3.981,1854,1.65,1879,1.799,1908,1.65,1914,1.799,1917,3.218,1918,1.65,1928,1.799,2086,1.531,2089,5.542,2247,4.422,2364,1.799,2373,3.687,2392,3.449,2774,1.998,2807,1.998,2968,2.835,2973,1.998,2979,4.815,2982,1.799,2986,1.65,2988,1.998,2989,1.998,3061,1.799,3084,1.799,3205,1.998,3219,1.998,3233,1.998,3273,4.99,3274,1.998,3275,4.487,3276,4.487,3277,3.626,3278,3.897,3279,4.487,3280,3.897,3281,5.091,3282,3.626,3283,3.149,3284,2.301,3285,2.301,3286,2.301,3287,2.301,3288,3.626,3289,2.301,3290,3.626,3291,3.149,3292,2.301,3293,1.998,3294,3.626,3295,2.301,3296,2.301,3297,2.301,3298,1.998,3299,2.301,3300,5.703,3301,2.301,3302,2.301,3303,2.301,3304,2.301,3305,2.301,3306,2.301,3307,2.301,3308,2.301,3309,2.301,3310,3.626,3311,2.301,3312,3.626,3313,2.301,3314,2.301,3315,2.301,3316,2.301,3317,2.301,3318,3.626,3319,3.149,3320,3.626,3321,5.091,3322,5.091,3323,5.091,3324,5.091,3325,5.542,3326,5.091,3327,5.091,3328,5.091,3329,5.091,3330,5.091,3331,5.091,3332,4.487,3333,5.091,3334,2.301,3335,2.301,3336,5.091,3337,3.626,3338,2.301,3339,5.884,3340,4.487,3341,6.158,3342,5.884,3343,3.626,3344,3.626,3345,2.301,3346,2.301,3347,2.301,3348,2.301,3349,2.301,3350,2.301,3351,2.301,3352,2.301,3353,2.301,3354,2.301,3355,3.626,3356,3.626,3357,2.301,3358,2.301,3359,2.301,3360,3.626,3361,2.301,3362,2.301,3363,2.301,3364,2.301,3365,5.884,3366,3.626,3367,4.487,3368,3.897,3369,4.487,3370,2.301,3371,4.487,3372,2.301,3373,2.301,3374,3.626,3375,2.301,3376,2.301,3377,2.301,3378,3.626,3379,3.626,3380,2.301,3381,2.301,3382,2.301,3383,4.487,3384,3.626,3385,2.301,3386,2.301,3387,2.301,3388,3.626,3389,2.301,3390,2.301,3391,2.301,3392,2.301,3393,2.301,3394,2.301,3395,2.301,3396,3.626,3397,2.301,3398,3.149,3399,2.301,3400,4.487,3401,2.301,3402,2.301,3403,3.626,3404,2.301,3405,2.301,3406,2.301,3407,2.301,3408,2.301,3409,2.301]],["title/components/SeasonDetailsInfoComponent.html",[0,0.261,170,0.924]],["body/components/SeasonDetailsInfoComponent.html",[0,0.403,1,0.908,2,1.448,3,0.195,4,0.109,5,1.094,6,1.094,7,1.094,8,0.109,12,1.094,13,1.999,14,1.924,15,1.295,17,1.62,19,0.611,20,0.015,21,0.542,22,0.124,23,0.064,30,1.919,35,0.827,41,1.036,49,1.534,85,1.294,98,0.978,99,1.503,100,1.503,101,1.094,102,1.653,103,1.094,104,0.619,105,1.094,106,0.942,107,1.094,108,0.908,109,1.015,110,1.503,111,0.874,112,0.874,113,1.503,114,0.874,115,1.247,116,0.942,117,1.094,118,0.942,119,0.978,120,1.094,121,0.942,122,1.053,123,1.094,124,0.942,125,1.094,126,0.908,127,0.978,128,1.094,129,0.942,130,1.094,131,1.503,132,0.942,133,1.094,134,0.908,135,1.094,136,0.874,137,1.094,138,0.942,139,1.094,140,0.908,141,1.094,142,0.942,143,0.942,144,1.717,145,0.942,146,1.053,147,1.094,148,0.942,149,1.094,150,0.908,151,1.015,152,1.094,153,0.908,154,0.908,155,0.874,156,0.942,157,1.094,158,0.908,159,1.094,160,0.908,161,0.942,162,1.094,163,0.908,164,1.094,165,0.942,166,1.053,167,1.094,168,0.908,169,1.939,170,1.534,171,1.958,172,1.094,173,0.908,174,1.015,175,1.094,176,0.942,177,0.942,178,0.908,179,1.053,180,1.053,181,1.094,182,1.094,183,0.009,184,0.009,190,0.745,202,3.537,219,0.205,220,0.535,226,0.542,232,0.908,234,0.927,235,0.393,236,0.927,276,1.201,293,1.851,302,1.272,307,1.179,342,1.966,355,1.89,359,3.13,360,3.132,385,0.978,395,1.094,396,1.053,397,1.395,412,1.535,463,2.07,478,1.593,524,3.559,554,1.431,571,2.339,600,3.854,616,4.181,649,2.544,650,2.737,694,3.559,698,1.69,699,1.768,800,3.559,833,2.423,852,3.836,862,2.423,941,2.279,954,5.235,1161,1.768,1447,3.13,1524,2.791,2373,4.743,2392,4.629,3061,3.043,3084,4.181,3273,5.707,3278,5.307,3280,4.645,3283,4.645,3291,4.645,3293,3.38,3298,3.38,3300,6.34,3319,4.645,3325,5.714,3410,3.38,3411,5.348,3412,5.348,3413,6.11,3414,5.348,3415,3.891,3416,5.348,3417,7.126,3418,3.891,3419,3.891,3420,3.891,3421,3.891,3422,3.891,3423,3.891,3424,3.891,3425,3.891,3426,3.891,3427,3.891,3428,3.891,3429,3.891,3430,3.891,3431,3.891,3432,3.891,3433,5.348,3434,6.579,3435,5.348,3436,5.348,3437,5.348,3438,5.348]],["title/components/SendEmailComponent.html",[0,0.261,173,0.924]],["body/components/SendEmailComponent.html",[0,0.378,1,0.672,2,1.167,3,0.092,4,0.08,5,1.212,6,0.81,7,0.81,8,0.08,12,0.81,13,1.956,14,1.881,15,1.044,17,1.306,19,0.644,20,0.015,21,0.401,22,0.092,23,0.047,28,2.387,35,0.92,37,1.721,39,0.624,41,1.145,47,1.465,49,1.337,66,1.167,70,1.65,85,1.104,87,1.873,98,0.724,99,1.451,100,1.212,101,0.81,102,1.44,103,0.81,104,0.515,105,0.81,106,0.698,107,0.81,108,0.672,109,0.752,110,1.212,111,0.648,112,0.648,113,1.212,114,0.648,115,1.006,116,0.698,117,0.81,118,0.698,119,0.724,120,0.81,121,0.698,122,0.781,123,0.81,124,0.698,125,0.81,126,0.672,127,0.724,128,0.81,129,0.698,130,0.81,131,1.212,132,0.698,133,0.81,134,0.672,135,0.81,136,0.648,137,0.81,138,0.698,139,0.81,140,0.672,141,0.81,142,0.698,143,0.698,144,1.451,145,0.698,146,0.781,147,0.81,148,0.698,149,0.81,150,0.672,151,0.752,152,0.81,153,0.672,154,0.672,155,0.648,156,0.698,157,0.81,158,0.672,159,0.81,160,0.672,161,0.698,162,0.81,163,0.672,164,0.81,165,0.698,166,0.781,167,0.81,168,0.672,169,1.125,170,0.672,171,0.698,172,0.81,173,1.337,174,1.741,175,0.81,176,0.698,177,0.698,178,0.672,179,0.781,180,0.781,181,0.81,182,0.81,183,0.008,184,0.008,190,0.719,192,0.955,195,0.81,213,1.672,219,0.152,220,0.431,226,0.401,228,0.775,230,1.019,232,0.946,234,0.654,235,0.38,236,0.654,262,1.743,263,1.794,270,3.371,276,0.969,293,2.164,300,0.996,302,1.41,304,0.969,305,1.72,307,1.288,311,3.568,331,3.173,353,1.41,354,1.874,355,1.523,380,2.263,385,0.724,386,0.841,387,2.025,395,0.81,396,1.743,397,0.752,401,0.907,407,1.306,412,1.542,428,2.263,463,1.803,468,1.899,469,1.803,471,2.107,472,1.104,474,2.263,478,1.616,502,1.523,504,2.244,534,2.006,535,2.006,537,1.959,547,2.256,554,1.899,555,1.959,559,2.87,560,1.794,571,2.194,579,2.684,590,1.15,667,2.387,680,1.72,715,1.65,716,2.152,821,2.152,863,3.357,865,1.873,866,2.711,930,1.371,978,1.513,1075,5.376,1082,1.794,1083,3.036,1085,1.596,1091,2.684,1093,3.815,1095,2.684,1121,3.371,1124,1.252,1138,2.263,1149,2.263,1166,2.387,1189,3.437,1207,1.596,1229,2.254,1238,3.568,1251,1.596,1350,2.525,1447,3.264,1457,3.173,1458,3.173,1543,2.727,1692,2.525,1750,1.689,1751,1.795,1826,3.215,1829,3.437,1830,3.437,1834,3.568,1836,2.87,1838,4.111,1839,4.019,1846,2.684,1848,3.357,1849,2.525,1850,2.525,1863,3.092,1864,2.87,1876,4.184,1877,2.87,1884,2.87,1886,4.009,1887,3.815,1888,2.684,1889,2.87,1890,2.684,1891,2.87,1892,2.87,1893,2.87,1894,2.525,1903,3.092,1904,2.87,1905,3.092,1915,2.87,1922,3.594,1929,1.795,1930,1.795,1933,1.795,1934,1.795,1943,1.795,1945,1.795,1946,1.919,1954,1.919,1955,1.795,1962,2.068,1972,3.092,1973,3.092,1974,3.092,2030,1.919,2031,2.254,2035,4.111,2036,3.371,2038,3.092,2039,3.092,2045,3.371,2050,2.684,2194,2.87,2311,3.745,2780,5.592,2793,2.068,2794,2.068,2795,1.919,2803,3.704,2884,3.092,2885,3.092,2891,3.371,2892,3.371,2945,2.504,2957,4.978,2958,4.978,3013,5.592,3016,4.978,3019,3.745,3038,4.978,3439,6.51,3440,2.504,3441,5.732,3442,4.312,3443,4.312,3444,4.312,3445,5.165,3446,5.165,3447,5.732,3448,4.312,3449,4.312,3450,2.883,3451,4.312,3452,2.883,3453,2.883,3454,2.883,3455,4.312,3456,5.732,3457,2.883,3458,2.883,3459,2.883,3460,2.883,3461,2.883,3462,2.883,3463,2.883,3464,2.883,3465,4.312,3466,2.883,3467,2.883,3468,4.312,3469,2.883,3470,2.883,3471,2.883,3472,2.883,3473,2.883,3474,2.883,3475,5.732,3476,4.312]],["title/components/SuspendedAccountComponent.html",[0,0.261,178,0.924]],["body/components/SuspendedAccountComponent.html",[0,0.414,1,0.957,2,1.501,3,0.131,4,0.115,5,1.153,6,1.153,7,1.153,8,0.115,12,1.153,13,2.005,14,1.93,15,1.342,19,0.554,20,0.015,21,0.571,22,0.131,23,0.067,41,0.597,85,0.704,98,1.031,99,1.558,100,1.558,101,1.153,102,1.69,103,1.153,104,0.564,105,1.153,106,0.993,107,1.153,108,0.957,109,1.07,110,1.558,111,0.922,112,0.922,113,1.558,114,0.922,115,1.293,116,0.993,117,1.153,118,0.993,119,1.393,120,1.153,121,0.993,122,1.111,123,1.153,124,0.993,125,1.153,126,0.957,127,1.031,128,1.153,129,0.993,130,1.153,131,1.558,132,0.993,133,1.153,134,0.957,135,1.153,136,0.922,137,1.153,138,0.993,139,1.153,140,0.957,141,1.153,142,0.993,143,0.993,144,1.765,145,0.993,146,1.111,147,1.153,148,0.993,149,1.153,150,0.957,151,1.07,152,1.153,153,0.957,154,0.957,155,0.922,156,0.993,157,1.153,158,0.957,159,1.153,160,0.957,161,0.993,162,1.153,163,0.957,164,1.153,165,0.993,166,1.111,167,1.153,168,0.957,169,1.446,170,0.957,171,0.993,172,1.153,173,0.957,174,1.07,175,1.153,176,0.993,177,0.993,178,1.569,179,2.122,180,2.004,181,1.153,182,1.153,183,0.01,184,0.01,219,0.216,220,0.554,226,0.571,228,0.644,232,0.8,234,0.622,235,0.316,236,0.622,276,1.246,293,2.193,307,0.792,385,1.031,395,1.153,397,1.07,408,3.476,478,0.993,534,1.342,535,1.342,597,2.988,621,1.864,776,2.048,1007,4.824,1040,2.943,1044,2.943,1047,4.504,1056,4.824,1194,1.952,1267,3.209,1268,4.816,1269,5.455,1367,4.687,1510,2.731,1512,3.452,1579,3.977,1580,4.504,1581,3.977,1582,3.691,1583,4.819,1588,4.477,1589,2.731,1590,4.18,1591,4.188,1592,5.01,1593,4.477,1594,4.477,1595,4.508,1598,4.18,1604,3.691,1607,4.504,1608,4.504,1614,4.824,1615,3.977,1617,3.209,1618,3.209,1619,4.477,1620,3.977,1621,3.977,1636,3.977,1637,3.977,1645,3.452,1674,3.977,1675,3.209,1685,4.336,1691,2.731,1693,2.271,1696,3.977,1710,4.336,1777,2.731,1825,6.102,2010,3.564,2676,3.209,2803,2.943,2965,3.564,2966,5.455,2967,3.209,2968,4.336,2970,4.816,2974,3.564,2975,3.564,2976,2.943,2979,3.209,2980,3.564,2981,3.564,2982,5.259,2983,3.564,2984,3.564,2985,3.564,2986,2.943,2987,3.564,3368,3.564,3477,5.842,3478,6.726,3479,4.104,3480,5.545,3481,4.104,3482,4.104,3483,4.104,3484,4.104,3485,4.104,3486,4.104,3487,4.104]],["title/classes/User.html",[23,0.065,387,1.399]],["body/classes/User.html",[3,0.17,4,0.149,8,0.149,20,0.015,22,0.17,23,0.087,35,0.902,39,1.154,41,1.172,85,1.126,104,0.479,183,0.012,184,0.012,186,2.22,190,0.915,192,0.904,204,1.418,219,0.281,220,0.657,226,0.915,228,0.945,232,0.946,234,0.809,235,0.423,236,0.809,275,2.663,300,1.029,303,2.856,304,1.599,338,3.528,339,4.205,340,4.738,341,5.105,342,2.617,353,2.327,387,2.625,412,1.789,440,4.987,471,2.415,472,2.725,491,2.953,1082,2.22,1083,3.171,1161,2.423,1162,3.125,1347,2.8,1348,5.105,2060,3.94,3488,4.633,3489,5.335,3490,5.335,3491,5.335,3492,5.335,3493,5.335,3494,5.335,3495,7.118,3496,7.118,3497,7.118,3498,5.335,3499,5.335,3500,5.335]],["title/interfaces/UserMedia.html",[705,0.794,2099,2.465]],["body/interfaces/UserMedia.html",[3,0.191,4,0.167,8,0.167,20,0.014,22,0.191,24,3.148,30,1.75,35,0.869,85,1.028,183,0.012,184,0.012,190,0.835,191,2.994,192,0.73,195,1.981,204,1.258,207,2.606,209,2.853,210,3.734,213,1.75,219,0.316,220,0.705,228,0.869,231,2.544,235,0.459,300,1.36,346,3.734,510,2.724,530,2.724,531,2.994,705,1.202,1161,2.724,1185,4.302,1273,2.392,1347,3.148,1376,5.65,2060,3.32,2094,5.142,2099,4.388,2372,5.209,2388,4.302,2392,3.734,2809,4.69,3501,5.209,3502,5.209,3503,5.998]],["title/interfaces/UserRatingMedia.html",[705,0.794,3504,3.096]],["body/interfaces/UserRatingMedia.html",[3,0.196,4,0.172,8,0.172,19,0.616,20,0.014,22,0.196,183,0.013,184,0.013,219,0.324,220,0.716,228,0.879,231,2.572,235,0.431,249,4.417,303,2.865,620,4.646,705,1.235,1273,2.457,2099,4.851,3504,5.598,3505,5.349,3506,7.792,3507,6.159]],["title/coverage.html",[3508,4.701]],["body/coverage.html",[0,0.544,1,0.922,8,0.11,9,3.433,10,2.835,11,3.433,20,0.015,23,0.128,106,0.957,108,0.922,111,0.888,112,1.488,114,0.888,115,1.545,116,0.957,118,0.957,121,0.957,124,0.957,126,0.922,129,0.957,132,0.957,134,0.922,136,0.888,138,0.957,140,0.922,142,0.957,145,0.957,148,0.957,150,0.922,153,0.922,154,0.922,155,0.888,156,1.309,158,0.922,160,0.922,163,0.922,165,0.957,168,0.922,170,0.922,171,1.309,173,0.922,176,0.957,177,0.957,178,0.922,183,0.01,184,0.01,185,2.835,187,3.433,188,3.64,189,4.194,218,2.075,224,1.397,235,0.225,248,3.091,249,4.418,250,3.433,258,2.815,259,2.631,261,3.433,342,1.987,387,1.397,389,3.365,391,2.315,407,1.197,442,3.433,443,2.835,444,3.433,469,1.244,597,3.299,632,4.227,633,3.879,634,4.408,650,1.644,651,2.315,695,3.008,698,1.717,705,1.582,714,3.361,789,4.227,792,2.315,827,2.461,864,3.433,870,2.075,901,2.631,902,2.631,903,2.631,926,3.091,935,3.091,944,3.091,947,3.091,951,2.631,953,2.835,954,2.835,963,3.091,1004,2.835,1007,2.835,1037,3.433,1038,3.091,1039,3.433,1072,2.835,1074,3.091,1075,2.835,1077,2.835,1079,2.835,1082,1.644,1089,3.433,1097,2.631,1105,2.631,1154,2.631,1181,2.631,1250,3.433,1266,3.433,1267,4.227,1272,3.091,1274,3.433,1281,4.227,1282,3.433,1346,3.433,1349,3.433,1370,3.091,1371,3.433,1372,3.433,1389,2.835,1390,3.433,1398,2.631,1399,3.433,1400,3.433,1410,3.433,1425,3.433,1446,2.631,1461,2.631,1482,3.433,1511,4.227,1690,3.877,1711,3.433,1737,4.227,1738,4.227,1740,3.433,1759,3.433,1765,2.631,1788,3.433,1789,3.433,1803,3.433,1804,3.433,1817,3.433,1818,3.433,2048,3.433,2070,3.433,2093,3.433,2099,2.461,2108,3.433,2112,2.835,2113,3.433,2114,4.695,2124,2.835,2580,3.433,2581,3.433,2679,3.433,2688,3.433,2725,2.835,2772,3.433,2773,3.433,2808,3.433,2848,3.433,2854,3.433,2855,3.433,2864,3.433,2865,3.433,2922,3.433,2959,3.091,2967,3.091,2996,3.433,3005,3.433,3007,3.433,3008,3.433,3039,3.433,3094,4.695,3100,3.433,3107,3.091,3252,3.433,3253,4.695,3273,4.227,3274,5.35,3410,3.433,3439,3.433,3440,3.433,3477,3.433,3488,3.433,3501,3.433,3502,3.433,3504,3.091,3505,3.433,3508,3.433,3509,3.953,3510,3.953,3511,3.953,3512,6.935,3513,3.953,3514,3.953,3515,3.953,3516,3.953,3517,3.953,3518,3.953,3519,3.953,3520,6.935,3521,3.953,3522,3.953,3523,3.953,3524,6.623,3525,6.16,3526,3.953,3527,6.623,3528,6.16,3529,5.405,3530,5.405,3531,3.953,3532,3.953,3533,3.953,3534,5.405,3535,3.953,3536,5.405,3537,5.405,3538,3.953,3539,3.953,3540,3.953,3541,3.953,3542,3.953,3543,3.953,3544,3.953,3545,3.953,3546,3.953,3547,3.953,3548,3.953,3549,3.953,3550,3.953,3551,3.953,3552,3.953,3553,3.953,3554,3.953,3555,3.953,3556,5.405,3557,6.16,3558,6.935,3559,3.953,3560,3.953,3561,3.953,3562,3.953,3563,3.953,3564,3.953,3565,3.953,3566,3.953,3567,3.953,3568,3.953,3569,3.953,3570,3.953,3571,3.953,3572,3.953,3573,3.953,3574,3.953,3575,6.16,3576,6.16,3577,3.953,3578,3.953,3579,3.953,3580,3.953,3581,3.953,3582,3.953,3583,3.953,3584,3.953,3585,3.953,3586,3.953,3587,3.953,3588,3.953,3589,3.953,3590,3.953,3591,3.953,3592,3.953,3593,3.953,3594,3.953,3595,3.953,3596,3.953,3597,3.953,3598,3.953,3599,3.433,3600,5.405,3601,3.433,3602,3.953,3603,3.953]],["title/dependencies.html",[890,3.171,3604,2.583]],["body/dependencies.html",[20,0.015,21,0.799,49,1.338,183,0.012,184,0.012,339,3.011,385,1.441,386,1.674,451,5.368,875,4.021,876,3.8,890,3.818,917,4.982,918,4.982,921,5.962,922,4.982,923,5.745,924,5.962,930,2.729,970,4.485,971,5.745,972,4.114,978,3.603,1066,3.818,1619,4.569,1777,3.818,1794,4.114,1874,4.485,1898,4.982,1932,4.485,3605,5.736,3606,8.054,3607,5.736,3608,5.736,3609,5.736,3610,5.736,3611,5.736,3612,5.736,3613,6.865,3614,5.736,3615,7.614,3616,5.736,3617,5.736,3618,5.736,3619,5.736,3620,5.736,3621,5.736,3622,5.736,3623,5.736,3624,6.865,3625,5.736,3626,5.736,3627,4.982,3628,5.736,3629,5.736,3630,4.982,3631,5.736,3632,5.736,3633,5.736,3634,5.736,3635,5.736]],["title/index.html",[219,0.174,3636,3.303,3637,3.303]],["body/index.html",[0,0.487,4,0.162,20,0.012,104,0.52,183,0.012,184,0.012,407,1.755,635,2.891,865,2.517,905,4.155,978,3.873,2002,5.031,2971,6.192,3398,6.951,3604,4.53,3630,6.779,3638,5.793,3639,6.906,3640,5.793,3641,7.378,3642,5.031,3643,5.793,3644,5.793,3645,6.906,3646,5.793,3647,5.793,3648,5.793,3649,5.793,3650,5.793,3651,5.793,3652,5.793,3653,5.793,3654,5.793,3655,5.793,3656,5.793,3657,7.378,3658,7.378,3659,5.793,3660,7.639,3661,5.793,3662,5.793,3663,5.793,3664,5.793,3665,6.906,3666,6.906,3667,7.639,3668,5.793,3669,6.906,3670,6.906,3671,5.793,3672,5.793,3673,5.793,3674,5.793,3675,6.906,3676,5.793,3677,5.793,3678,5.793,3679,5.793,3680,5.793,3681,5.793,3682,7.378,3683,5.793,3684,5.793,3685,4.53,3686,5.793]],["title/modules.html",[889,3.17]],["body/modules.html",[20,0.013,183,0.013,184,0.013,876,4.042,888,4.573,889,3.734,900,4.243,923,5.71,1059,4.573,1063,4.243,1477,6.343,3627,6.343,3687,7.876,3688,7.303]],["title/overview.html",[3685,4.232]],["body/overview.html",[1,1.583,2,1.302,20,0.015,98,1.208,106,1.643,108,1.583,111,1.525,114,1.525,116,1.862,118,1.732,121,1.643,124,1.643,126,1.583,129,1.643,132,1.643,134,1.583,136,1.525,138,1.643,140,1.583,142,1.643,145,1.643,148,1.643,150,1.583,153,1.583,154,1.583,158,1.583,160,1.583,161,1.164,163,1.583,165,1.643,168,1.583,170,1.583,173,1.583,176,1.643,177,1.643,178,1.583,183,0.011,184,0.011,186,2.001,260,2.662,629,2.4,650,2.977,870,3.563,887,2.817,888,6.058,889,2.817,890,3.2,891,3.449,892,3.76,893,3.76,894,3.2,895,4.176,896,4.176,897,4.176,898,4.176,899,4.176,900,4.763,901,4.518,902,4.518,903,4.518,904,4.812,905,3.449,1003,3.2,1059,5.938,1060,4.176,1061,4.176,1062,4.176,1063,4.518,1273,1.918,2976,3.449,3107,3.76,3109,4.176,3685,3.76,3689,4.809,3690,4.809]],["title/properties.html",[220,0.476,3604,2.583]],["body/properties.html",[20,0.014,183,0.013,184,0.013,220,0.649,3642,5.64,3691,6.493]],["title/routes.html",[1003,3.602]],["body/routes.html",[20,0.013,183,0.013,184,0.013,1003,4.338]],["title/miscellaneous/variables.html",[3692,2.869,3693,4.138]],["body/miscellaneous/variables.html",[20,0.015,183,0.013,184,0.013,219,0.327,235,0.41,389,4.863,534,2.352,535,2.352,590,2.477,715,2.377,880,4.856,1656,6.248,3599,5.393,3601,5.393,3692,5.393,3693,5.393,3694,6.21,3695,6.21,3696,7.193,3697,7.193,3698,6.21,3699,7.193,3700,7.193,3701,6.21,3702,6.21]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"components/AboutUsComponent.html":{},"classes/AchievementNotificationModel.html":{},"classes/Actor.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"components/BlockedAccountComponent.html":{},"interfaces/ChatWithMessages.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmEmail.html":{},"injectables/DialogService.html":{},"classes/FavoriteActor.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"interfaces/Message.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"interfaces/Register.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"interfaces/ResetPassword.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{},"interfaces/UserRatingMedia.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":714,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/BlockedAccountComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/RegistrationComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":3691,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":3355,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["0.14.1",{"_index":3612,"title":{},"body":{"dependencies.html":{}}}],["0.14.2",{"_index":3635,"title":{},"body":{"dependencies.html":{}}}],["0.2s",{"_index":3372,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["0.3s",{"_index":1625,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.8rem",{"_index":1646,"title":{},"body":{"components/HomeComponent.html":{}}}],["0/1",{"_index":3512,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3557,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3520,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3558,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3562,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3521,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":2985,"title":{},"body":{"components/RegistrationComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["004",{"_index":622,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["007bff",{"_index":3374,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["099",{"_index":623,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["0px",{"_index":1710,"title":{},"body":{"components/HomeComponent.html":{},"components/RegistrationComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["1",{"_index":621,"title":{"interfaces/MovieCategory-1.html":{}},"body":{"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/RegistrationComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["1)\">&lt",{"_index":3251,"title":{},"body":{"components/SearchComponent.html":{}}}],["1.2.6",{"_index":3620,"title":{},"body":{"dependencies.html":{}}}],["1/11",{"_index":3578,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":3580,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":3590,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":3525,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":3528,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":3556,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":3579,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":3576,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2976,"title":{},"body":{"components/RegistrationComponent.html":{},"components/SearchComponent.html":{},"components/SuspendedAccountComponent.html":{},"overview.html":{}}}],["10/21",{"_index":3514,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":597,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{}}}],["1004099",{"_index":605,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["100px",{"_index":1672,"title":{},"body":{"components/HomeComponent.html":{}}}],["10402",{"_index":3113,"title":{},"body":{"components/SearchComponent.html":{}}}],["10749",{"_index":3117,"title":{},"body":{"components/SearchComponent.html":{}}}],["10751",{"_index":3105,"title":{},"body":{"components/SearchComponent.html":{}}}],["10752",{"_index":3124,"title":{},"body":{"components/SearchComponent.html":{}}}],["10759",{"_index":3129,"title":{},"body":{"components/SearchComponent.html":{}}}],["10762",{"_index":3130,"title":{},"body":{"components/SearchComponent.html":{}}}],["10763",{"_index":3132,"title":{},"body":{"components/SearchComponent.html":{}}}],["10764",{"_index":3134,"title":{},"body":{"components/SearchComponent.html":{}}}],["10765",{"_index":3136,"title":{},"body":{"components/SearchComponent.html":{}}}],["10766",{"_index":3139,"title":{},"body":{"components/SearchComponent.html":{}}}],["10767",{"_index":3141,"title":{},"body":{"components/SearchComponent.html":{}}}],["10768",{"_index":3143,"title":{},"body":{"components/SearchComponent.html":{}}}],["10770",{"_index":3122,"title":{},"body":{"components/SearchComponent.html":{}}}],["10px",{"_index":1581,"title":{},"body":{"components/HomeComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["11",{"_index":3575,"title":{},"body":{"coverage.html":{}}}],["11.4.1",{"_index":3623,"title":{},"body":{"dependencies.html":{}}}],["11/14",{"_index":3564,"title":{},"body":{"coverage.html":{}}}],["11/18",{"_index":3523,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":2960,"title":{},"body":{"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{}}}],["12/15",{"_index":3570,"title":{},"body":{"coverage.html":{}}}],["12/22",{"_index":3574,"title":{},"body":{"coverage.html":{}}}],["12/53",{"_index":3598,"title":{},"body":{"coverage.html":{}}}],["120px",{"_index":3401,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["12px",{"_index":3370,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["13",{"_index":3690,"title":{},"body":{"overview.html":{}}}],["14",{"_index":3107,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["14px",{"_index":2991,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["15",{"_index":1702,"title":{},"body":{"components/HomeComponent.html":{}}}],["15/16",{"_index":3519,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":3487,"title":{},"body":{"components/SuspendedAccountComponent.html":{}}}],["15px",{"_index":1644,"title":{},"body":{"components/HomeComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["15s",{"_index":1716,"title":{},"body":{"components/HomeComponent.html":{}}}],["16",{"_index":3097,"title":{},"body":{"components/SearchComponent.html":{}}}],["16/17",{"_index":3585,"title":{},"body":{"coverage.html":{}}}],["16/19",{"_index":3541,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":2982,"title":{},"body":{"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["17.0.0",{"_index":3606,"title":{},"body":{"dependencies.html":{}}}],["17.0.9",{"_index":3643,"title":{},"body":{"index.html":{}}}],["17.12.0",{"_index":3629,"title":{},"body":{"dependencies.html":{}}}],["17.3.2",{"_index":3609,"title":{},"body":{"dependencies.html":{}}}],["170",{"_index":625,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["170368",{"_index":608,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["18",{"_index":3104,"title":{},"body":{"components/SearchComponent.html":{}}}],["18/32",{"_index":3583,"title":{},"body":{"coverage.html":{}}}],["19/37",{"_index":3517,"title":{},"body":{"coverage.html":{}}}],["1px",{"_index":2973,"title":{},"body":{"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["2",{"_index":1707,"title":{"interfaces/MovieCategory-2.html":{}},"body":{"components/HomeComponent.html":{},"components/SearchComponent.html":{}}}],["2.3.0",{"_index":3633,"title":{},"body":{"dependencies.html":{}}}],["2/6",{"_index":3526,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":3529,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":3595,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1690,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{}}}],["2024",{"_index":1422,"title":{},"body":{"components/FooterComponent.html":{}}}],["20px",{"_index":1608,"title":{},"body":{"components/HomeComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["21/54",{"_index":3589,"title":{},"body":{"coverage.html":{}}}],["22",{"_index":3597,"title":{},"body":{"coverage.html":{}}}],["24/27",{"_index":3549,"title":{},"body":{"coverage.html":{}}}],["24px",{"_index":3390,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["25",{"_index":3527,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":1368,"title":{},"body":{"injectables/DialogService.html":{},"components/NavMenuComponent.html":{}}}],["27",{"_index":3111,"title":{},"body":{"components/SearchComponent.html":{}}}],["28",{"_index":3094,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["28/29",{"_index":3594,"title":{},"body":{"coverage.html":{}}}],["28px",{"_index":1699,"title":{},"body":{"components/HomeComponent.html":{}}}],["290666772375",{"_index":1981,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["2f8ee5",{"_index":983,"title":{},"body":{"modules/AppModule.html":{}}}],["2px",{"_index":2979,"title":{},"body":{"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["2s",{"_index":1782,"title":{},"body":{"components/LoadingComponent.html":{}}}],["3",{"_index":2579,"title":{"interfaces/MovieCategory-3.html":{}},"body":{"components/SearchComponent.html":{}}}],["3.1.2",{"_index":3621,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":3611,"title":{},"body":{"dependencies.html":{}}}],["3.5em",{"_index":1684,"title":{},"body":{"components/HomeComponent.html":{}}}],["3/3",{"_index":3552,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2967,"title":{},"body":{"components/RegistrationComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{}}}],["300px",{"_index":1681,"title":{},"body":{"components/HomeComponent.html":{}}}],["30px",{"_index":1662,"title":{},"body":{"components/HomeComponent.html":{}}}],["32",{"_index":3689,"title":{},"body":{"overview.html":{}}}],["33",{"_index":3524,"title":{},"body":{"coverage.html":{}}}],["333",{"_index":3389,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["34/53",{"_index":3544,"title":{},"body":{"coverage.html":{}}}],["3498db",{"_index":1779,"title":{},"body":{"components/LoadingComponent.html":{}}}],["35",{"_index":3098,"title":{},"body":{"components/SearchComponent.html":{}}}],["36",{"_index":3109,"title":{},"body":{"components/SearchComponent.html":{},"overview.html":{}}}],["368",{"_index":626,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["37",{"_index":3126,"title":{},"body":{"components/SearchComponent.html":{}}}],["38",{"_index":3588,"title":{},"body":{"coverage.html":{}}}],["3caea3",{"_index":982,"title":{},"body":{"modules/AppModule.html":{}}}],["3ebb1a",{"_index":989,"title":{},"body":{"modules/AppModule.html":{}}}],["4",{"_index":629,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"overview.html":{}}}],["4.0.0",{"_index":3624,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":3622,"title":{},"body":{"dependencies.html":{}}}],["4.shadow",{"_index":3353,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["4/4",{"_index":3545,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":3555,"title":{},"body":{"coverage.html":{}}}],["40/130",{"_index":3591,"title":{},"body":{"coverage.html":{}}}],["40px",{"_index":2987,"title":{},"body":{"components/RegistrationComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["42",{"_index":3568,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":592,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["450ms",{"_index":1676,"title":{},"body":{"components/HomeComponent.html":{}}}],["46",{"_index":3536,"title":{},"body":{"coverage.html":{}}}],["47",{"_index":3513,"title":{},"body":{"coverage.html":{}}}],["493",{"_index":630,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["495057",{"_index":3381,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["4caefe",{"_index":3369,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["4px",{"_index":1616,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["4rem",{"_index":1735,"title":{},"body":{"components/HomeComponent.html":{}}}],["5",{"_index":1715,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["5/5",{"_index":3530,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":3532,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1737,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"coverage.html":{}}}],["50px",{"_index":1605,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingComponent.html":{}}}],["51",{"_index":3516,"title":{},"body":{"coverage.html":{}}}],["52/87",{"_index":3567,"title":{},"body":{"coverage.html":{}}}],["53",{"_index":3123,"title":{},"body":{"components/SearchComponent.html":{}}}],["53/88",{"_index":3572,"title":{},"body":{"coverage.html":{}}}],["54",{"_index":3573,"title":{},"body":{"coverage.html":{}}}],["56",{"_index":3582,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":3538,"title":{},"body":{"coverage.html":{}}}],["577",{"_index":631,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["59",{"_index":3566,"title":{},"body":{"coverage.html":{}}}],["5em",{"_index":1704,"title":{},"body":{"components/HomeComponent.html":{}}}],["5px",{"_index":1590,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["5s2b58vflc2ohpc01f7q1hguo9k5gpi7.apps.googleusercontent.com",{"_index":1982,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["6",{"_index":1711,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["6.5.1",{"_index":3615,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":3546,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":3534,"title":{},"body":{"coverage.html":{}}}],["60px",{"_index":3386,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["61",{"_index":3522,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":3543,"title":{},"body":{"coverage.html":{}}}],["64;watchers",{"_index":1420,"title":{},"body":{"components/FooterComponent.html":{}}}],["65/68",{"_index":3561,"title":{},"body":{"coverage.html":{}}}],["6em",{"_index":1697,"title":{},"body":{"components/HomeComponent.html":{}}}],["7.0.14",{"_index":3618,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":3631,"title":{},"body":{"dependencies.html":{}}}],["7/15",{"_index":3537,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":3554,"title":{},"body":{"coverage.html":{}}}],["700px",{"_index":1653,"title":{},"body":{"components/HomeComponent.html":{}}}],["75",{"_index":2970,"title":{},"body":{"components/RegistrationComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["768px",{"_index":1635,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["78",{"_index":3563,"title":{},"body":{"coverage.html":{}}}],["7px",{"_index":1677,"title":{},"body":{"components/HomeComponent.html":{}}}],["7rem",{"_index":1734,"title":{},"body":{"components/HomeComponent.html":{}}}],["8",{"_index":2959,"title":{},"body":{"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["8/14",{"_index":3539,"title":{},"body":{"coverage.html":{}}}],["8/16",{"_index":3533,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":3100,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["83",{"_index":3531,"title":{},"body":{"coverage.html":{}}}],["84",{"_index":3540,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":3553,"title":{},"body":{"coverage.html":{}}}],["878",{"_index":3119,"title":{},"body":{"components/SearchComponent.html":{}}}],["88",{"_index":3548,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":1643,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["9",{"_index":3577,"title":{},"body":{"coverage.html":{}}}],["9/10",{"_index":3551,"title":{},"body":{"coverage.html":{}}}],["9/15",{"_index":3535,"title":{},"body":{"coverage.html":{}}}],["9/21",{"_index":3569,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":3550,"title":{},"body":{"coverage.html":{}}}],["90px",{"_index":2975,"title":{},"body":{"components/RegistrationComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["93",{"_index":3518,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":3584,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":3560,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":3593,"title":{},"body":{"coverage.html":{}}}],["9648",{"_index":3115,"title":{},"body":{"components/SearchComponent.html":{}}}],["99",{"_index":3102,"title":{},"body":{"components/SearchComponent.html":{}}}],["999",{"_index":1775,"title":{},"body":{"components/LoadingComponent.html":{}}}],["_",{"_index":884,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/SearchComponent.html":{}}}],["_document",{"_index":1843,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["_eref",{"_index":2603,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["_renderer2",{"_index":1840,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["abaixo",{"_index":3380,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["aboutuscomponent",{"_index":1,"title":{"components/AboutUsComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["abre",{"_index":1360,"title":{},"body":{"injectables/DialogService.html":{}}}],["abrir",{"_index":1352,"title":{},"body":{"injectables/DialogService.html":{}}}],["absolute",{"_index":1695,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["access_token",{"_index":2874,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["accessors",{"_index":3058,"title":{},"body":{"components/SearchComponent.html":{}}}],["accesstoken",{"_index":2053,"title":{},"body":{"classes/LoginWithExternal.html":{},"classes/RegisterWithExternal.html":{}}}],["account",{"_index":180,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["account'},{'name",{"_index":123,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["account.component",{"_index":1008,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{}}}],["account.component.css",{"_index":1269,"title":{},"body":{"components/BlockedAccountComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["account.component.html",{"_index":1268,"title":{},"body":{"components/BlockedAccountComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["account.component.ts",{"_index":1267,"title":{},"body":{"components/BlockedAccountComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{}}}],["account.component.ts:10",{"_index":3480,"title":{},"body":{"components/SuspendedAccountComponent.html":{}}}],["account.component.ts:20",{"_index":3481,"title":{},"body":{"components/SuspendedAccountComponent.html":{}}}],["account/blocked",{"_index":1074,"title":{},"body":{"modules/AuthenticationModule.html":{},"components/BlockedAccountComponent.html":{},"coverage.html":{}}}],["account/suspended",{"_index":1007,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{}}}],["accountservice",{"_index":2879,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["aceder",{"_index":301,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/MovieCategory-1.html":{}}}],["acessar",{"_index":2858,"title":{},"body":{"classes/RegisterWithExternal.html":{}}}],["acessibilidade",{"_index":1415,"title":{},"body":{"components/FooterComponent.html":{}}}],["acesso",{"_index":380,"title":{},"body":{"injectables/AdminService.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"components/PendingVerificationComponent.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["achievementnotificationmodel",{"_index":185,"title":{"classes/AchievementNotificationModel.html":{}},"body":{"classes/AchievementNotificationModel.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["achievementphoto",{"_index":211,"title":{},"body":{"classes/AchievementNotificationModel.html":{}}}],["acima",{"_index":1648,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["acomodar",{"_index":1641,"title":{},"body":{"components/HomeComponent.html":{}}}],["acrescenta",{"_index":3336,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["action",{"_index":3095,"title":{},"body":{"components/SearchComponent.html":{}}}],["activatedroute",{"_index":1447,"title":{},"body":{"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{}}}],["activatedrouter",{"_index":2785,"title":{},"body":{"components/PendingVerificationComponent.html":{}}}],["activatedroutesnapshot",{"_index":1254,"title":{},"body":{"injectables/AuthorizationGuard.html":{}}}],["activeindex",{"_index":706,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["actor",{"_index":248,"title":{"classes/Actor.html":{}},"body":{"classes/Actor.html":{},"coverage.html":{}}}],["actor.ts",{"_index":1372,"title":{},"body":{"classes/FavoriteActor.html":{},"coverage.html":{}}}],["actor.ts:2",{"_index":1381,"title":{},"body":{"classes/FavoriteActor.html":{}}}],["actor.ts:3",{"_index":1379,"title":{},"body":{"classes/FavoriteActor.html":{}}}],["actor.ts:4",{"_index":1380,"title":{},"body":{"classes/FavoriteActor.html":{}}}],["actor.ts:5",{"_index":1378,"title":{},"body":{"classes/FavoriteActor.html":{}}}],["actorchoiceid",{"_index":1373,"title":{},"body":{"classes/FavoriteActor.html":{}}}],["actorid",{"_index":254,"title":{},"body":{"classes/Actor.html":{},"classes/FavoriteActor.html":{}}}],["actorname",{"_index":252,"title":{},"body":{"classes/Actor.html":{},"classes/FavoriteActor.html":{}}}],["actual_component",{"_index":182,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["add",{"_index":3678,"title":{},"body":{"index.html":{}}}],["adiciona",{"_index":807,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/MovieCategory-3.html":{},"components/SeasonDetailsComponent.html":{}}}],["adicionais",{"_index":2374,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["adicional",{"_index":1305,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["adicionando",{"_index":2997,"title":{},"body":{"classes/ReplyNotificationModel.html":{}}}],["adicione",{"_index":3269,"title":{},"body":{"components/SearchServiceComponent.html":{}}}],["admin",{"_index":109,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["admin'},{'name",{"_index":107,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["admin/admin.component",{"_index":952,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["admin/service/admin.service",{"_index":543,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["admincomponent",{"_index":106,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["administradores",{"_index":2196,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["administrativas",{"_index":267,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{}}}],["administração",{"_index":269,"title":{},"body":{"injectables/AdminService.html":{}}}],["adminservice",{"_index":259,"title":{"injectables/AdminService.html":{}},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"interfaces/MovieCategory-1.html":{},"coverage.html":{}}}],["adminstatisticscomponent",{"_index":108,"title":{"components/AdminStatisticsComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminstração",{"_index":617,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["adventure",{"_index":3096,"title":{},"body":{"components/SearchComponent.html":{}}}],["afterviewinit",{"_index":3275,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["agora",{"_index":3204,"title":{},"body":{"components/SearchComponent.html":{}}}],["agradecemos",{"_index":82,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["ainda",{"_index":76,"title":{},"body":{"components/AboutUsComponent.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/PendingVerificationComponent.html":{}}}],["airingseriestonotify",{"_index":846,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["airingseriestonotify.map((series",{"_index":849,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["ajuste",{"_index":1691,"title":{},"body":{"components/HomeComponent.html":{},"components/RegistrationComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["ajustes",{"_index":1632,"title":{},"body":{"components/HomeComponent.html":{}}}],["alcançar",{"_index":1432,"title":{},"body":{"components/GamificationComponent.html":{}}}],["alcançámos",{"_index":61,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["aleatória",{"_index":2341,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["aleatórios",{"_index":2346,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["alfabética",{"_index":2570,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["algo",{"_index":52,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["align",{"_index":1593,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["alinha",{"_index":1596,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["allmoviespagecomponent",{"_index":111,"title":{"components/AllMoviesPageComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-2.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["allseriespagecomponent",{"_index":114,"title":{"components/AllSeriesPageComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alpha",{"_index":591,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["altera",{"_index":321,"title":{},"body":{"injectables/AdminService.html":{}}}],["alterado",{"_index":325,"title":{},"body":{"injectables/AdminService.html":{}}}],["alteração",{"_index":270,"title":{},"body":{"injectables/AdminService.html":{},"components/NavMenuComponent.html":{},"components/SendEmailComponent.html":{}}}],["alterna",{"_index":693,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/NavMenuComponent.html":{}}}],["altura",{"_index":1606,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["alvo",{"_index":1392,"title":{},"body":{"classes/FollowNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/ReplyNotificationModel.html":{}}}],["always",{"_index":1015,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ambiente",{"_index":1901,"title":{},"body":{"components/LoginComponent.html":{}}}],["angular",{"_index":978,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":3605,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1066,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":384,"title":{},"body":{"injectables/AdminService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/GamificationService.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/NotificationService.html":{}}}],["angular/compiler",{"_index":3607,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":21,"title":{},"body":{"components/AboutUsComponent.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":930,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":3608,"title":{},"body":{"dependencies.html":{}}}],["angular/material/dialog",{"_index":962,"title":{},"body":{"modules/AppModule.html":{},"injectables/DialogService.html":{}}}],["angular/platform",{"_index":875,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"components/SearchComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":385,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":1780,"title":{},"body":{"components/LoadingComponent.html":{},"components/SearchComponent.html":{}}}],["animationin",{"_index":1335,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["animationout",{"_index":1337,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["animação",{"_index":719,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["animações",{"_index":1324,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["ano",{"_index":60,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["anos",{"_index":81,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["ansiosos",{"_index":69,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["anterior",{"_index":690,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/SearchComponent.html":{}}}],["antes",{"_index":521,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"components/SearchComponent.html":{}}}],["any).ongooglelibraryload",{"_index":1976,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["ao",{"_index":302,"title":{},"body":{"injectables/AdminService.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChatWithMessages.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-3.html":{},"interfaces/ProfileChat.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{}}}],["aos",{"_index":28,"title":{},"body":{"components/AboutUsComponent.html":{},"components/GamificationComponent.html":{},"interfaces/MedalsDto.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{}}}],["apaga",{"_index":330,"title":{},"body":{"injectables/AdminService.html":{}}}],["apagado",{"_index":332,"title":{},"body":{"injectables/AdminService.html":{}}}],["apagar",{"_index":333,"title":{},"body":{"injectables/AdminService.html":{}}}],["apenas",{"_index":1213,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["api",{"_index":342,"title":{},"body":{"injectables/AdminService.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"modules/AppModule.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"classes/RegisterWithExternal.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["api/movie",{"_index":697,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/SearchComponent.html":{}}}],["aplica",{"_index":3068,"title":{},"body":{"components/SearchComponent.html":{}}}],["aplicando",{"_index":2551,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["aplicar",{"_index":3345,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["aplicação",{"_index":74,"title":{},"body":{"components/AboutUsComponent.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"classes/Profile.html":{}}}],["aplicável",{"_index":2825,"title":{},"body":{"classes/Profile.html":{}}}],["aplique",{"_index":3196,"title":{},"body":{"components/SearchComponent.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["app.component",{"_index":915,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":868,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":867,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":116,"title":{"components/AppComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearanceanimation",{"_index":1328,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["appearanceanimation.none",{"_index":1336,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["append",{"_index":416,"title":{},"body":{"injectables/AdminService.html":{}}}],["application",{"_index":3650,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":409,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GamificationService.html":{},"injectables/NotificationService.html":{}}}],["applycurrentfilter",{"_index":3051,"title":{},"body":{"components/SearchComponent.html":{}}}],["appmodule",{"_index":888,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":900,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appurl",{"_index":3697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aprimorar",{"_index":72,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["aproximadamente",{"_index":627,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["após",{"_index":491,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/GamificationService.html":{},"interfaces/MovieCategory-1.html":{},"components/PendingVerificationComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"classes/User.html":{}}}],["aqui",{"_index":777,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/SearchComponent.html":{}}}],["arguments",{"_index":2605,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["armazena",{"_index":3489,"title":{},"body":{"classes/User.html":{}}}],["armazenado",{"_index":1131,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["armazenar",{"_index":2049,"title":{},"body":{"classes/LoginWithExternal.html":{},"classes/RegisterWithExternal.html":{}}}],["arquivo",{"_index":2794,"title":{},"body":{"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["arquivos",{"_index":2943,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["array",{"_index":812,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-3.html":{},"injectables/NotificationService.html":{},"components/SearchComponent.html":{}}}],["array.from",{"_index":3226,"title":{},"body":{"components/SearchComponent.html":{}}}],["arraycopy",{"_index":2348,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["arraycopy.length",{"_index":2349,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["arraycopy.slice(0",{"_index":2353,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["arraycopy[i",{"_index":2351,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["arraycopy[j",{"_index":2352,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["arredondadas",{"_index":3342,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["artifacts",{"_index":3661,"title":{},"body":{"index.html":{}}}],["assegura",{"_index":582,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["assistida",{"_index":2396,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["assistidas",{"_index":2394,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["associada",{"_index":210,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"components/LoginComponent.html":{},"classes/MediaNotificationModel.html":{},"interfaces/ProfileChat.html":{},"classes/ReplyNotificationModel.html":{},"interfaces/UserMedia.html":{}}}],["associado",{"_index":1280,"title":{},"body":{"interfaces/ChatWithMessages.html":{},"classes/LoginWithExternal.html":{},"classes/RegisterWithExternal.html":{},"classes/ReplyNotificationModel.html":{}}}],["associados",{"_index":1936,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/RegistrationComponent.html":{}}}],["associação",{"_index":3503,"title":{},"body":{"interfaces/UserMedia.html":{}}}],["assume",{"_index":2006,"title":{},"body":{"components/LoginComponent.html":{}}}],["async",{"_index":1832,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/RegistrationComponent.html":{}}}],["ativa",{"_index":2194,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["ativada",{"_index":1851,"title":{},"body":{"components/LoginComponent.html":{}}}],["ativado",{"_index":3064,"title":{},"body":{"components/SearchComponent.html":{}}}],["ativas",{"_index":2235,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["ativo",{"_index":665,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["através",{"_index":1353,"title":{},"body":{"injectables/DialogService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"components/RegistrationComponent.html":{}}}],["atribui",{"_index":1491,"title":{},"body":{"injectables/GamificationService.html":{},"interfaces/MovieCategory-1.html":{}}}],["atribuição",{"_index":1484,"title":{},"body":{"injectables/GamificationService.html":{}}}],["atribuída",{"_index":1493,"title":{},"body":{"injectables/GamificationService.html":{}}}],["atuais",{"_index":3087,"title":{},"body":{"components/SearchComponent.html":{}}}],["atual",{"_index":552,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{}}}],["atualiza",{"_index":802,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{}}}],["atualizada",{"_index":1494,"title":{},"body":{"injectables/GamificationService.html":{},"components/SeasonDetailsComponent.html":{}}}],["atualizadas",{"_index":1201,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["atualizado",{"_index":1164,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SearchComponent.html":{}}}],["atualizados",{"_index":3207,"title":{},"body":{"components/SearchComponent.html":{}}}],["atualizando",{"_index":1173,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["atualizar",{"_index":3163,"title":{},"body":{"components/SearchComponent.html":{}}}],["atualização",{"_index":1176,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/NotificationService.html":{},"components/ResetPasswordComponent.html":{}}}],["atualize",{"_index":3168,"title":{},"body":{"components/SearchComponent.html":{}}}],["atualmente",{"_index":1128,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/MovieCategory-1.html":{},"classes/Profile.html":{},"components/SearchComponent.html":{}}}],["aumentando",{"_index":1433,"title":{},"body":{"components/GamificationComponent.html":{}}}],["autenticadas",{"_index":2715,"title":{},"body":{"injectables/NotificationService.html":{}}}],["autenticado",{"_index":1120,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{}}}],["autenticar",{"_index":2051,"title":{},"body":{"classes/LoginWithExternal.html":{}}}],["autenticação",{"_index":353,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/GamificationService.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{},"classes/User.html":{}}}],["authenticatedusername",{"_index":2712,"title":{},"body":{"injectables/NotificationService.html":{}}}],["authentication",{"_index":119,"title":{},"body":{"components/AboutUsComponent.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["authentication/models/user",{"_index":388,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthorizationGuard.html":{},"injectables/GamificationService.html":{},"injectables/NotificationService.html":{}}}],["authentication/services/authentication.service",{"_index":544,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationGuard.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{}}}],["authentication/suspended",{"_index":1006,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authenticationbuttoncomponent",{"_index":118,"title":{"components/AuthenticationButtonComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authenticationmodule",{"_index":1059,"title":{"modules/AuthenticationModule.html":{}},"body":{"modules/AuthenticationModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticationroutingmodule",{"_index":1063,"title":{"modules/AuthenticationRoutingModule.html":{}},"body":{"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticationservice",{"_index":469,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{},"coverage.html":{}}}],["authorization",{"_index":410,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GamificationService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/NotificationService.html":{}}}],["authorizationguard",{"_index":1004,"title":{"injectables/AuthorizationGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthorizationGuard.html":{},"coverage.html":{}}}],["authservice",{"_index":468,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationGuard.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["auto",{"_index":1639,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["auto_select",{"_index":1984,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["automatically",{"_index":3651,"title":{},"body":{"index.html":{}}}],["automática",{"_index":1640,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["autorização",{"_index":1753,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["available",{"_index":1477,"title":{},"body":{"components/GamificationComponent.html":{},"modules.html":{}}}],["avança",{"_index":819,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-3.html":{},"components/SearchComponent.html":{}}}],["aventura",{"_index":717,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["await",{"_index":2379,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["awardmedal",{"_index":1485,"title":{},"body":{"injectables/GamificationService.html":{}}}],["awardmedal(username",{"_index":1488,"title":{},"body":{"injectables/GamificationService.html":{}}}],["awesome",{"_index":971,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmDialogComponent.html":{},"dependencies.html":{}}}],["azul",{"_index":3403,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["ação",{"_index":716,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["ações",{"_index":3449,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["b",{"_index":2578,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["b.original_title",{"_index":1576,"title":{},"body":{"components/HomeComponent.html":{}}}],["b.overview",{"_index":1577,"title":{},"body":{"components/HomeComponent.html":{}}}],["back",{"_index":3383,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["backdrop",{"_index":3400,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["backend",{"_index":2007,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MedalsDto.html":{},"components/ResetPasswordComponent.html":{}}}],["backend.azurewebsites.net",{"_index":3702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["background",{"_index":1582,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["ban",{"_index":417,"title":{},"body":{"injectables/AdminService.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["banduration",{"_index":2180,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["bandurationindays",{"_index":314,"title":{},"body":{"injectables/AdminService.html":{}}}],["bandurationmessage",{"_index":1825,"title":{},"body":{"components/LoginComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["banido",{"_index":306,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/MovieCategory-1.html":{},"classes/Profile.html":{}}}],["banidos",{"_index":495,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["banimento",{"_index":2482,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"classes/Profile.html":{}}}],["banned",{"_index":438,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["banner",{"_index":1564,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["banning",{"_index":2501,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["banperm(username",{"_index":2503,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["banuserpermanently",{"_index":277,"title":{},"body":{"injectables/AdminService.html":{}}}],["banuserpermanently(username",{"_index":296,"title":{},"body":{"injectables/AdminService.html":{}}}],["banusertemporarily",{"_index":278,"title":{},"body":{"injectables/AdminService.html":{}}}],["banusertemporarily(username",{"_index":313,"title":{},"body":{"injectables/AdminService.html":{}}}],["bars",{"_index":2677,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["base",{"_index":199,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"components/AllMoviesPageComponent.html":{},"injectables/AuthenticationService.html":{},"classes/FollowNotificationModel.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"classes/ReplyNotificationModel.html":{},"components/SearchComponent.html":{}}}],["baseada",{"_index":2244,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"components/SearchComponent.html":{}}}],["baseadas",{"_index":2325,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["baseando",{"_index":2543,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{}}}],["batchsize",{"_index":774,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["bd47fa",{"_index":991,"title":{},"body":{"modules/AppModule.html":{}}}],["bearer",{"_index":411,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/GamificationService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/NotificationService.html":{}}}],["behavior",{"_index":3316,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["behaviorsubject",{"_index":1814,"title":{},"body":{"injectables/LoadingService.html":{},"components/SearchServiceComponent.html":{}}}],["behaviorsubject(false",{"_index":1812,"title":{},"body":{"injectables/LoadingService.html":{}}}],["bem",{"_index":1159,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{}}}],["between",{"_index":1600,"title":{},"body":{"components/HomeComponent.html":{}}}],["biblioteca",{"_index":1880,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["biografia",{"_index":2814,"title":{},"body":{"classes/Profile.html":{}}}],["birthdate",{"_index":2812,"title":{},"body":{"classes/Profile.html":{}}}],["black",{"_index":3402,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["block",{"_index":1733,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["blocked",{"_index":122,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["blockedaccountcomponent",{"_index":121,"title":{"components/BlockedAccountComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bloqueada",{"_index":1271,"title":{},"body":{"components/BlockedAccountComponent.html":{}}}],["bloqueadas",{"_index":1428,"title":{},"body":{"components/GamificationComponent.html":{},"injectables/GamificationService.html":{}}}],["boas",{"_index":1602,"title":{},"body":{"components/HomeComponent.html":{}}}],["body",{"_index":2759,"title":{},"body":{"injectables/NotificationService.html":{}}}],["bold",{"_index":1621,"title":{},"body":{"components/HomeComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["boolean",{"_index":230,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"classes/FollowNotificationModel.html":{},"components/LoginComponent.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"classes/Profile.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["booleano",{"_index":1893,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["bootstrap",{"_index":892,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"overview.html":{}}}],["bordas",{"_index":3341,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["border",{"_index":1588,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["bottom",{"_index":1696,"title":{},"body":{"components/HomeComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["bottom:50px",{"_index":2965,"title":{},"body":{"components/RegistrationComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["botão",{"_index":1301,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["box",{"_index":1674,"title":{},"body":{"components/HomeComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["branco",{"_index":3343,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["brands",{"_index":922,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["brightness(0",{"_index":1719,"title":{},"body":{"components/HomeComponent.html":{}}}],["brightness(101",{"_index":1726,"title":{},"body":{"components/HomeComponent.html":{}}}],["browse",{"_index":3687,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":876,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"components/SearchComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":913,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":912,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":911,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":1706,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["build",{"_index":3660,"title":{},"body":{"index.html":{}}}],["busca",{"_index":480,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"components/SearchComponent.html":{}}}],["buscar",{"_index":1524,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["button",{"_index":1040,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/HomeComponent.html":{},"components/RegistrationComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["button'},{'name",{"_index":120,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["button.component",{"_index":1071,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["button.component.css",{"_index":1042,"title":{},"body":{"components/AuthenticationButtonComponent.html":{}}}],["button.component.html",{"_index":1041,"title":{},"body":{"components/AuthenticationButtonComponent.html":{}}}],["button.component.ts",{"_index":1039,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:10",{"_index":1052,"title":{},"body":{"components/AuthenticationButtonComponent.html":{}}}],["button.component.ts:11",{"_index":1053,"title":{},"body":{"components/AuthenticationButtonComponent.html":{}}}],["button.component.ts:12",{"_index":1050,"title":{},"body":{"components/AuthenticationButtonComponent.html":{}}}],["button.component.ts:16",{"_index":1055,"title":{},"body":{"components/AuthenticationButtonComponent.html":{}}}],["button.component.ts:9",{"_index":1051,"title":{},"body":{"components/AuthenticationButtonComponent.html":{}}}],["button/authentication",{"_index":1038,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{}}}],["button:hover",{"_index":1627,"title":{},"body":{"components/HomeComponent.html":{}}}],["buttonclick",{"_index":1049,"title":{},"body":{"components/AuthenticationButtonComponent.html":{}}}],["buttonposition",{"_index":1339,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["buttontext",{"_index":1045,"title":{},"body":{"components/AuthenticationButtonComponent.html":{}}}],["buttontype",{"_index":1046,"title":{},"body":{"components/AuthenticationButtonComponent.html":{}}}],["básicas",{"_index":1404,"title":{},"body":{"classes/FollowerProfile.html":{},"components/LoginComponent.html":{}}}],["c2959465852",{"_index":3408,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["c4128739590",{"_index":3399,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["cabeçalho",{"_index":2714,"title":{},"body":{"injectables/NotificationService.html":{}}}],["cabeçalhos",{"_index":336,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GamificationService.html":{}}}],["cada",{"_index":678,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["caixa",{"_index":1284,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/HomeComponent.html":{}}}],["callback",{"_index":486,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["called",{"_index":3268,"title":{},"body":{"components/SearchServiceComponent.html":{}}}],["caminho",{"_index":214,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"classes/Profile.html":{}}}],["campo",{"_index":1886,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["campos",{"_index":1911,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["canactivate",{"_index":1016,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthorizationGuard.html":{}}}],["canactivate(router",{"_index":1253,"title":{},"body":{"injectables/AuthorizationGuard.html":{}}}],["canactivatefn",{"_index":1258,"title":{},"body":{"injectables/AuthorizationGuard.html":{}}}],["cancel",{"_index":3016,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["cancel_on_tap_outside",{"_index":1985,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["cancela",{"_index":3019,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["cancelamento",{"_index":2889,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["cancelar",{"_index":1286,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["canceltextbutton",{"_index":1291,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["canviewdata",{"_index":2141,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["capa",{"_index":2282,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"classes/Profile.html":{}}}],["capabilities",{"_index":3680,"title":{},"body":{"index.html":{}}}],["caption",{"_index":1659,"title":{},"body":{"components/HomeComponent.html":{}}}],["caracteres",{"_index":2918,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["carousel",{"_index":1651,"title":{},"body":{"components/HomeComponent.html":{}}}],["carrega",{"_index":501,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{}}}],["carregados",{"_index":520,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["carregamento",{"_index":578,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["carregar",{"_index":1879,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/SeasonDetailsComponent.html":{}}}],["carreira",{"_index":93,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["case",{"_index":1964,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{}}}],["caso",{"_index":1125,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/MovieCategory-1.html":{},"injectables/NotificationService.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/SearchComponent.html":{}}}],["cat.name",{"_index":771,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["catch",{"_index":2387,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["catch(error",{"_index":1563,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["catcherror",{"_index":2118,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["catcherror(error",{"_index":2541,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["categoria",{"_index":666,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["categorias",{"_index":681,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/SearchComponent.html":{}}}],["categories",{"_index":638,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["category",{"_index":769,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["category.activeindex",{"_index":773,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["category.name",{"_index":764,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["category.results",{"_index":772,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["category.results.length",{"_index":779,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["category.showall",{"_index":780,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["category?.name",{"_index":782,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{}}}],["category?.showall",{"_index":783,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{}}}],["categoryname",{"_index":668,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["ccc",{"_index":3335,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["center",{"_index":1595,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["centraliza",{"_index":3360,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["centro",{"_index":3334,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["cenário",{"_index":55,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["certeza",{"_index":1309,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["certifica",{"_index":517,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["certifique",{"_index":3232,"title":{},"body":{"components/SearchComponent.html":{}}}],["chama",{"_index":481,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["chamada",{"_index":3219,"title":{},"body":{"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["chamado",{"_index":1322,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["chamar",{"_index":490,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["change",{"_index":3653,"title":{},"body":{"index.html":{}}}],["changeroletomoderator",{"_index":279,"title":{},"body":{"injectables/AdminService.html":{}}}],["changeroletomoderator(username",{"_index":319,"title":{},"body":{"injectables/AdminService.html":{}}}],["changeroletouser",{"_index":280,"title":{},"body":{"injectables/AdminService.html":{}}}],["changeroletouser(username",{"_index":326,"title":{},"body":{"injectables/AdminService.html":{}}}],["changesearchquery",{"_index":3258,"title":{},"body":{"components/SearchServiceComponent.html":{}}}],["changesearchquery(searchquery",{"_index":3260,"title":{},"body":{"components/SearchServiceComponent.html":{}}}],["changetype",{"_index":3052,"title":{},"body":{"components/SearchComponent.html":{}}}],["changetype(newtype",{"_index":3070,"title":{},"body":{"components/SearchComponent.html":{}}}],["chart",{"_index":586,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["chartbannedvsregistered",{"_index":448,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["chartprofiletypes",{"_index":449,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["chartstaticdata",{"_index":450,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["chat",{"_index":1027,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ChatWithMessages.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/Message.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/ProfileChat.html":{}}}],["chat'},{'name",{"_index":125,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["chat/:username",{"_index":1028,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["chat/chat.component",{"_index":956,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["chat/models/messages",{"_index":1550,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["chat/models/profilechat",{"_index":2125,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["chat/services/chat.service",{"_index":877,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{}}}],["chatcomponent",{"_index":124,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chatservice",{"_index":870,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"coverage.html":{},"overview.html":{}}}],["chatwithmessages",{"_index":1272,"title":{"interfaces/ChatWithMessages.html":{}},"body":{"interfaces/ChatWithMessages.html":{},"coverage.html":{}}}],["check",{"_index":2002,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["checkfollowingstatus(usernameauthenticated",{"_index":2316,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["checkforunreadnotifications",{"_index":2592,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["checkifuserisbanned(profile",{"_index":2485,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["cheia",{"_index":34,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["children",{"_index":1017,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["choice",{"_index":3674,"title":{},"body":{"index.html":{}}}],["científica",{"_index":722,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{}}}],["cinematográfica",{"_index":32,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["cinza",{"_index":3337,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["class",{"_index":23,"title":{"classes/AchievementNotificationModel.html":{},"classes/Actor.html":{},"classes/FavoriteActor.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"classes/LoginWithExternal.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/NotificationModel.html":{},"classes/Profile.html":{},"classes/RegisterWithExternal.html":{},"classes/ReplyNotificationModel.html":{},"classes/User.html":{}},"body":{"components/AboutUsComponent.html":{},"classes/AchievementNotificationModel.html":{},"classes/Actor.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"classes/FavoriteActor.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["class=\"fa",{"_index":2675,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["classcss",{"_index":1292,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["classe",{"_index":472,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/PendingVerificationComponent.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{},"classes/User.html":{}}}],["classes",{"_index":186,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/Actor.html":{},"classes/FavoriteActor.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"classes/LoginWithExternal.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/NotificationModel.html":{},"classes/Profile.html":{},"classes/RegisterWithExternal.html":{},"classes/ReplyNotificationModel.html":{},"classes/User.html":{},"overview.html":{}}}],["classificação",{"_index":3329,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["clearnotifications",{"_index":2691,"title":{},"body":{"injectables/NotificationService.html":{}}}],["clearnotifications(username",{"_index":2704,"title":{},"body":{"injectables/NotificationService.html":{}}}],["cli",{"_index":3641,"title":{},"body":{"index.html":{}}}],["clicar",{"_index":1363,"title":{},"body":{"injectables/DialogService.html":{}}}],["click)=\"updatesearch(currentpage",{"_index":3250,"title":{},"body":{"components/SearchComponent.html":{}}}],["clickout",{"_index":2593,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["clickout(event",{"_index":2619,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["client_id",{"_index":1980,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["cliente",{"_index":1414,"title":{},"body":{"components/FooterComponent.html":{}}}],["clique",{"_index":2612,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["closenav",{"_index":2594,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["cluster_appmodule",{"_index":895,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":897,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":898,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":896,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":899,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule",{"_index":1060,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_declarations",{"_index":1062,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_imports",{"_index":1061,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["code",{"_index":3655,"title":{},"body":{"index.html":{}}}],["coletar",{"_index":3010,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["coleção",{"_index":2574,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["collectionsize",{"_index":2190,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["color",{"_index":1583,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["colorlist",{"_index":980,"title":{},"body":{"modules/AppModule.html":{}}}],["column",{"_index":1637,"title":{},"body":{"components/HomeComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["coluna",{"_index":3377,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["com",{"_index":66,"title":{},"body":{"components/AboutUsComponent.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SendEmailComponent.html":{}}}],["comedy",{"_index":3099,"title":{},"body":{"components/SearchComponent.html":{}}}],["comentário",{"_index":2998,"title":{},"body":{"classes/ReplyNotificationModel.html":{}}}],["comentários",{"_index":364,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"injectables/NotificationService.html":{},"classes/ReplyNotificationModel.html":{}}}],["command",{"_index":3675,"title":{},"body":{"index.html":{}}}],["commentid",{"_index":3000,"title":{},"body":{"classes/ReplyNotificationModel.html":{}}}],["comments",{"_index":441,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{}}}],["commonmodule",{"_index":1065,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{}}}],["como",{"_index":195,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"components/AdminStatisticsComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SendEmailComponent.html":{},"interfaces/UserMedia.html":{}}}],["comparação",{"_index":516,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["comparações",{"_index":1906,"title":{},"body":{"components/LoginComponent.html":{}}}],["component",{"_index":0,"title":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationRoutingModule.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":103,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["componente",{"_index":547,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/GamificationComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"overview.html":{}}}],["components/authentication",{"_index":1070,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["comum",{"_index":2680,"title":{},"body":{"classes/NotificationModel.html":{}}}],["comunicada",{"_index":2662,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["comédia",{"_index":718,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{}}}],["conclusão",{"_index":492,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["cone",{"_index":1729,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["conexão",{"_index":1530,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{}}}],["conexões",{"_index":1857,"title":{},"body":{"components/LoginComponent.html":{}}}],["configura",{"_index":525,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["configurado",{"_index":345,"title":{},"body":{"injectables/AdminService.html":{},"injectables/DialogService.html":{},"injectables/GamificationService.html":{}}}],["configurando",{"_index":1863,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/SendEmailComponent.html":{}}}],["configurar",{"_index":522,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["configuração",{"_index":2811,"title":{},"body":{"classes/Profile.html":{}}}],["configurações",{"_index":1847,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["confirm",{"_index":127,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationRoutingModule.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["confirma",{"_index":1110,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["confirmaction",{"_index":1297,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["confirmada",{"_index":1320,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/PendingVerificationComponent.html":{}}}],["confirmado",{"_index":2781,"title":{},"body":{"components/PendingVerificationComponent.html":{}}}],["confirmar",{"_index":1239,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmEmail.html":{},"components/LoginComponent.html":{}}}],["confirmation",{"_index":1229,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/PendingVerificationComponent.html":{},"components/SendEmailComponent.html":{}}}],["confirmationtextbutton",{"_index":1293,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["confirmação",{"_index":1093,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/PendingVerificationComponent.html":{},"components/SendEmailComponent.html":{}}}],["confirmboxconfigmodule",{"_index":966,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmboxconfigmodule.forroot",{"_index":992,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmboxinitializer",{"_index":1325,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["confirmdialogcomponent",{"_index":126,"title":{"components/ConfirmDialogComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmemail",{"_index":1097,"title":{"interfaces/ConfirmEmail.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/ConfirmEmail.html":{},"components/PendingVerificationComponent.html":{},"coverage.html":{}}}],["confirmemail(model",{"_index":1108,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["confirmemail.email",{"_index":2799,"title":{},"body":{"components/PendingVerificationComponent.html":{}}}],["confirmemail.token",{"_index":2800,"title":{},"body":{"components/PendingVerificationComponent.html":{}}}],["conforme",{"_index":1693,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/PendingVerificationComponent.html":{},"classes/RegisterWithExternal.html":{},"components/RegistrationComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["conjunto",{"_index":1275,"title":{},"body":{"interfaces/ChatWithMessages.html":{}}}],["connectchathub",{"_index":1831,"title":{},"body":{"components/LoginComponent.html":{}}}],["conquista",{"_index":206,"title":{},"body":{"classes/AchievementNotificationModel.html":{}}}],["conquistas",{"_index":194,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"components/GamificationComponent.html":{},"injectables/NotificationService.html":{}}}],["conseguiu",{"_index":1451,"title":{},"body":{"components/GamificationComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["console",{"_index":1542,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["console.error(\"error",{"_index":572,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["console.error('erro",{"_index":862,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-3.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["console.error('error",{"_index":1475,"title":{},"body":{"components/GamificationComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{}}}],["console.error('nome",{"_index":2329,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["console.error('os",{"_index":2334,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["console.error('user",{"_index":2478,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["console.error('username",{"_index":2504,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["console.log(\"area",{"_index":1260,"title":{},"body":{"injectables/AuthorizationGuard.html":{}}}],["console.log(\"category\",category",{"_index":1570,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["console.log(\"mensagem",{"_index":1562,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["console.log('changesearchquery",{"_index":3267,"title":{},"body":{"components/SearchServiceComponent.html":{}}}],["console.log('nome",{"_index":1555,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["console.log('notificações",{"_index":859,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["console.log('one",{"_index":2664,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["console.log('user",{"_index":2508,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["console.log(`attempting",{"_index":2505,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["console.log(`user",{"_index":2493,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["console.log(data",{"_index":3429,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["console.log(environment.appurl",{"_index":1225,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log(error",{"_index":2804,"title":{},"body":{"components/PendingVerificationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["console.log(error.error.errors",{"_index":2016,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(getparamid",{"_index":3425,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["console.log(recommendedmovies",{"_index":754,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["console.log(response",{"_index":2652,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["console.log(response.message",{"_index":2515,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["console.log(result",{"_index":3432,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["const",{"_index":397,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["constructor",{"_index":226,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/Actor.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"classes/FavoriteActor.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"classes/User.html":{}}}],["constructor(accesstoken",{"_index":2056,"title":{},"body":{"classes/LoginWithExternal.html":{}}}],["constructor(accountservice",{"_index":2877,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["constructor(actorid",{"_index":251,"title":{},"body":{"classes/Actor.html":{}}}],["constructor(adminservice",{"_index":467,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["constructor(authservice",{"_index":1251,"title":{},"body":{"injectables/AuthorizationGuard.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["constructor(birthdate",{"_index":2829,"title":{},"body":{"classes/Profile.html":{}}}],["constructor(dialog",{"_index":1356,"title":{},"body":{"injectables/DialogService.html":{}}}],["constructor(email",{"_index":3493,"title":{},"body":{"classes/User.html":{}}}],["constructor(gamificationservice",{"_index":1445,"title":{},"body":{"components/GamificationComponent.html":{}}}],["constructor(http",{"_index":291,"title":{},"body":{"injectables/AdminService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/GamificationService.html":{},"injectables/NotificationService.html":{}}}],["constructor(library",{"_index":998,"title":{},"body":{"modules/AppModule.html":{}}}],["constructor(loadingservice",{"_index":1764,"title":{},"body":{"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{}}}],["constructor(private",{"_index":395,"title":{},"body":{"injectables/AdminService.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"injectables/DialogService.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["constructor(profileservice",{"_index":2602,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["constructor(public",{"_index":1552,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["constructor(route",{"_index":648,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{}}}],["constructor(router",{"_index":3479,"title":{},"body":{"components/SuspendedAccountComponent.html":{}}}],["constructor(service",{"_index":3061,"title":{},"body":{"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["constructor(triggeredbyuserid",{"_index":227,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/FollowNotificationModel.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/NotificationModel.html":{},"classes/ReplyNotificationModel.html":{}}}],["constructor(username",{"_index":1375,"title":{},"body":{"classes/FavoriteActor.html":{},"classes/FollowerProfile.html":{},"classes/RegisterWithExternal.html":{}}}],["construtor",{"_index":471,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/DialogService.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/PendingVerificationComponent.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{},"classes/User.html":{}}}],["constrói",{"_index":335,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GamificationService.html":{},"injectables/NotificationService.html":{}}}],["consulta",{"_index":1139,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/GamificationComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{}}}],["consultas",{"_index":3266,"title":{},"body":{"components/SearchServiceComponent.html":{}}}],["conta",{"_index":1149,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/BlockedAccountComponent.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"components/PendingVerificationComponent.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/SendEmailComponent.html":{}}}],["contactar",{"_index":1417,"title":{},"body":{"components/FooterComponent.html":{}}}],["contador",{"_index":2565,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["contain",{"_index":1673,"title":{},"body":{"components/HomeComponent.html":{}}}],["container",{"_index":1579,"title":{},"body":{"components/HomeComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["container.bg",{"_index":3332,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["containers",{"_index":3346,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["contendo",{"_index":673,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChatWithMessages.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"injectables/NotificationService.html":{},"components/SearchComponent.html":{}}}],["content",{"_index":408,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"injectables/NotificationService.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["conter",{"_index":2917,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["contexto",{"_index":2072,"title":{},"body":{"interfaces/MedalsDto.html":{}}}],["conteúdo",{"_index":347,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["continuar",{"_index":71,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["contrast(101",{"_index":1727,"title":{},"body":{"components/HomeComponent.html":{}}}],["control",{"_index":1708,"title":{},"body":{"components/HomeComponent.html":{}}}],["contrário",{"_index":1126,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/MovieCategory-1.html":{},"injectables/NotificationService.html":{},"components/SearchComponent.html":{}}}],["contém",{"_index":2856,"title":{},"body":{"classes/RegisterWithExternal.html":{}}}],["contínuo",{"_index":89,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["conversa",{"_index":2336,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["converte",{"_index":676,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"interfaces/MovieCategory-2.html":{}}}],["cor",{"_index":1585,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["core",{"_index":3616,"title":{},"body":{"dependencies.html":{}}}],["correspondente",{"_index":507,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["correspondentes",{"_index":2230,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["costlydeveloper/ngx",{"_index":970,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmDialogComponent.html":{},"dependencies.html":{}}}],["cover",{"_index":1658,"title":{},"body":{"components/HomeComponent.html":{}}}],["coverage",{"_index":3508,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["coverphoto",{"_index":2820,"title":{},"body":{"classes/Profile.html":{}}}],["coverphotoelement",{"_index":2287,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["coverphotoelement.src",{"_index":2293,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["createdat",{"_index":221,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/FollowNotificationModel.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"classes/ReplyNotificationModel.html":{}}}],["credenciais",{"_index":1144,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{}}}],["credential",{"_index":2026,"title":{},"body":{"components/LoginComponent.html":{}}}],["credentialresponse",{"_index":1869,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["cria",{"_index":1540,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["criar",{"_index":51,"title":{},"body":{"components/AboutUsComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{}}}],["criação",{"_index":1849,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"classes/NotificationModel.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["crime",{"_index":3101,"title":{},"body":{"components/SearchComponent.html":{}}}],["css",{"_index":1304,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["cujas",{"_index":1199,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GamificationService.html":{},"interfaces/MovieCategory-1.html":{},"injectables/NotificationService.html":{}}}],["cujo",{"_index":324,"title":{},"body":{"injectables/AdminService.html":{}}}],["cujos",{"_index":2298,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["currentfilter",{"_index":3042,"title":{},"body":{"components/SearchComponent.html":{}}}],["currentnavigation",{"_index":3483,"title":{},"body":{"components/SuspendedAccountComponent.html":{}}}],["currentnavigation.extras.state['bandurationmessage",{"_index":3486,"title":{},"body":{"components/SuspendedAccountComponent.html":{}}}],["currentnavigation?.extras?.state",{"_index":3485,"title":{},"body":{"components/SuspendedAccountComponent.html":{}}}],["currentpage",{"_index":3043,"title":{},"body":{"components/SearchComponent.html":{}}}],["currentsearchquery",{"_index":3256,"title":{},"body":{"components/SearchServiceComponent.html":{}}}],["currentuser",{"_index":548,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["currentusername",{"_index":1440,"title":{},"body":{"components/GamificationComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["cursor",{"_index":1617,"title":{},"body":{"components/HomeComponent.html":{},"components/RegistrationComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["curto",{"_index":2080,"title":{},"body":{"interfaces/MedalsDto.html":{}}}],["custom",{"_index":1705,"title":{},"body":{"components/HomeComponent.html":{}}}],["customone",{"_index":988,"title":{},"body":{"modules/AppModule.html":{}}}],["customtwo",{"_index":990,"title":{},"body":{"modules/AppModule.html":{}}}],["d",{"_index":3395,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["d32f2f",{"_index":1628,"title":{},"body":{"components/HomeComponent.html":{}}}],["da",{"_index":85,"title":{},"body":{"components/AboutUsComponent.html":{},"classes/AchievementNotificationModel.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"classes/FollowNotificationModel.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"interfaces/Message.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"interfaces/ProfileChat.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{}}}],["dado",{"_index":2081,"title":{},"body":{"interfaces/MedalsDto.html":{}}}],["dados",{"_index":502,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/ConfirmEmail.html":{},"components/HomeComponent.html":{},"interfaces/Login.html":{},"classes/LoginWithExternal.html":{},"interfaces/MedalsDto.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"classes/NotificationModel.html":{},"interfaces/Register.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"interfaces/ResetPassword.html":{},"components/ResetPasswordComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SendEmailComponent.html":{}}}],["danger",{"_index":986,"title":{},"body":{"modules/AppModule.html":{}}}],["dar",{"_index":1571,"title":{},"body":{"components/HomeComponent.html":{},"components/PendingVerificationComponent.html":{}}}],["dark",{"_index":1717,"title":{},"body":{"components/HomeComponent.html":{}}}],["das",{"_index":2076,"title":{},"body":{"interfaces/MedalsDto.html":{}}}],["data",{"_index":600,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"interfaces/Message.html":{},"interfaces/MovieCategory-1.html":{},"classes/NotificationModel.html":{},"classes/Profile.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["datas",{"_index":2479,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["date",{"_index":229,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"components/AllSeriesPageComponent.html":{},"classes/FollowNotificationModel.html":{},"classes/MediaNotificationModel.html":{},"interfaces/Message.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-3.html":{},"classes/NotificationModel.html":{},"classes/Profile.html":{},"classes/ReplyNotificationModel.html":{}}}],["date(profile.endbandate",{"_index":2492,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["date(profile.startbandate",{"_index":2490,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["date(userdata.birthdate).toisostring().split('t')[0",{"_index":2310,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["days",{"_index":2496,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["de",{"_index":35,"title":{},"body":{"components/AboutUsComponent.html":{},"classes/AchievementNotificationModel.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChatWithMessages.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmEmail.html":{},"injectables/DialogService.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"interfaces/Message.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"interfaces/ResetPassword.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{}}}],["declarations",{"_index":891,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"overview.html":{}}}],["decode",{"_index":1932,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"dependencies.html":{}}}],["decodedtoken",{"_index":1994,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["decodedtoken.email)).subscribe",{"_index":1999,"title":{},"body":{"components/LoginComponent.html":{}}}],["decodedtoken.sub",{"_index":1998,"title":{},"body":{"components/LoginComponent.html":{}}}],["decorador",{"_index":1933,"title":{},"body":{"components/LoginComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["decoration",{"_index":3371,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["decorators",{"_index":1918,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["decrementa",{"_index":2564,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["dedicação",{"_index":67,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["default",{"_index":534,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AuthenticationButtonComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDialogComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"miscellaneous/variables.html":{}}}],["defina",{"_index":775,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["define",{"_index":504,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/Message.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"classes/NotificationModel.html":{},"components/PendingVerificationComponent.html":{},"interfaces/ProfileChat.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["defined",{"_index":232,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/Actor.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"classes/FavoriteActor.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"classes/User.html":{}}}],["definida",{"_index":3262,"title":{},"body":{"components/SearchServiceComponent.html":{}}}],["definidas",{"_index":2284,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["definidos",{"_index":2335,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["definir",{"_index":1882,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/SearchComponent.html":{}}}],["definições",{"_index":2678,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["deixar",{"_index":2331,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["dele",{"_index":1365,"title":{},"body":{"injectables/DialogService.html":{}}}],["deleteuserbyusername",{"_index":281,"title":{},"body":{"injectables/AdminService.html":{}}}],["deleteuserbyusername(username",{"_index":328,"title":{},"body":{"injectables/AdminService.html":{}}}],["dentro",{"_index":1214,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/GamificationComponent.html":{},"components/LoginComponent.html":{},"interfaces/MedalsDto.html":{},"interfaces/Message.html":{},"components/SeasonDetailsComponent.html":{}}}],["depende",{"_index":3295,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["dependencies",{"_index":890,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependências",{"_index":1846,"title":{},"body":{"components/LoginComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["depth",{"_index":598,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["desafios",{"_index":65,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["desbane",{"_index":2509,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["desbanido",{"_index":2511,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["desbloqueada",{"_index":2087,"title":{},"body":{"interfaces/MedalsDto.html":{}}}],["desbloqueadas",{"_index":1427,"title":{},"body":{"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"interfaces/MovieCategory-1.html":{}}}],["desbloquear",{"_index":1452,"title":{},"body":{"components/GamificationComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["description",{"_index":190,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChatWithMessages.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmEmail.html":{},"injectables/DialogService.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"interfaces/Message.html":{},"classes/MessageNotificationModel.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"interfaces/Register.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"interfaces/ResetPassword.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{}}}],["descrição",{"_index":2083,"title":{},"body":{"interfaces/MedalsDto.html":{},"interfaces/MovieCategory-1.html":{},"classes/Profile.html":{}}}],["desde",{"_index":1913,"title":{},"body":{"components/LoginComponent.html":{}}}],["deseja",{"_index":1115,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SeasonDetailsComponent.html":{}}}],["desejadas",{"_index":1881,"title":{},"body":{"components/LoginComponent.html":{}}}],["desencadeou",{"_index":2636,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["desproibido",{"_index":382,"title":{},"body":{"injectables/AdminService.html":{}}}],["desproibição",{"_index":383,"title":{},"body":{"injectables/AdminService.html":{}}}],["destacar",{"_index":3348,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["destaque",{"_index":713,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["destinatário",{"_index":1537,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/Message.html":{},"interfaces/MovieCategory.html":{}}}],["destruição",{"_index":2233,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["details",{"_index":171,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{}}}],["details'},{'name",{"_index":144,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["details.component",{"_index":945,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["details.component.css",{"_index":3276,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["details.component.html",{"_index":3277,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["details.component.ts",{"_index":3274,"title":{},"body":{"components/SeasonDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:12",{"_index":3289,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["details.component.ts:13",{"_index":3282,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["details.component.ts:20",{"_index":3286,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["details.component.ts:27",{"_index":3285,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["details.component.ts:35",{"_index":3284,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["details.component.ts:48",{"_index":3287,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["details/movie",{"_index":944,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["details/season",{"_index":953,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SeasonDetailsComponent.html":{},"coverage.html":{}}}],["details/series",{"_index":947,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["detalhada",{"_index":2084,"title":{},"body":{"interfaces/MedalsDto.html":{}}}],["detalhes",{"_index":2373,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"injectables/NotificationService.html":{},"classes/RegisterWithExternal.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["determinado",{"_index":1501,"title":{},"body":{"injectables/GamificationService.html":{}}}],["determinando",{"_index":3455,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["determinar",{"_index":2270,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["dev",{"_index":3647,"title":{},"body":{"index.html":{}}}],["development",{"_index":3644,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":1287,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{}}}],["dialog'},{'name",{"_index":128,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["dialog.component",{"_index":964,"title":{},"body":{"modules/AppModule.html":{},"injectables/DialogService.html":{}}}],["dialog.component.css",{"_index":1289,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.html",{"_index":1288,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1282,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:21",{"_index":1315,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:23",{"_index":1303,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:25",{"_index":1317,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:27",{"_index":1313,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:29",{"_index":1307,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:31",{"_index":1299,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:34",{"_index":1298,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:43",{"_index":1321,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog/confirm",{"_index":963,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmDialogComponent.html":{},"coverage.html":{}}}],["dialog/services/dialog.service",{"_index":965,"title":{},"body":{"modules/AppModule.html":{}}}],["dialog/services/dialog.service.ts",{"_index":1349,"title":{},"body":{"injectables/DialogService.html":{},"coverage.html":{}}}],["dialog/services/dialog.service.ts:12",{"_index":1357,"title":{},"body":{"injectables/DialogService.html":{}}}],["dialog/services/dialog.service.ts:23",{"_index":1359,"title":{},"body":{"injectables/DialogService.html":{}}}],["dialogconfigmodule",{"_index":967,"title":{},"body":{"modules/AppModule.html":{}}}],["dialogconfigmodule.forroot",{"_index":993,"title":{},"body":{"modules/AppModule.html":{}}}],["dialoglayoutdisplay",{"_index":1326,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialoglayoutdisplay.danger",{"_index":1334,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialogservice",{"_index":901,"title":{"injectables/DialogService.html":{}},"body":{"modules/AppModule.html":{},"injectables/DialogService.html":{},"coverage.html":{},"overview.html":{}}}],["dias",{"_index":318,"title":{},"body":{"injectables/AdminService.html":{}}}],["dica",{"_index":3237,"title":{},"body":{"components/SearchComponent.html":{}}}],["diferente",{"_index":3166,"title":{},"body":{"components/SearchComponent.html":{}}}],["diferentes",{"_index":2626,"title":{},"body":{"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{}}}],["digital",{"_index":56,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["diogo",{"_index":92,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["direcionados",{"_index":2777,"title":{},"body":{"components/PendingVerificationComponent.html":{}}}],["direction",{"_index":1636,"title":{},"body":{"components/HomeComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["directive",{"_index":101,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["directives",{"_index":181,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":3659,"title":{},"body":{"index.html":{}}}],["directory",{"_index":3664,"title":{},"body":{"index.html":{}}}],["direção",{"_index":3376,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["disableclose",{"_index":1369,"title":{},"body":{"injectables/DialogService.html":{}}}],["disabled",{"_index":2280,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["disappearanceanimation",{"_index":1327,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["disappearanceanimation.none",{"_index":1338,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["discreto",{"_index":3338,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["disparou",{"_index":1393,"title":{},"body":{"classes/FollowNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"classes/ReplyNotificationModel.html":{}}}],["display",{"_index":1591,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["displaying",{"_index":2013,"title":{},"body":{"components/LoginComponent.html":{}}}],["displaypages",{"_index":3060,"title":{},"body":{"components/SearchComponent.html":{}}}],["disponíveis",{"_index":524,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/GamificationService.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["disponível",{"_index":575,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-3.html":{},"injectables/NotificationService.html":{}}}],["dispositivos",{"_index":3378,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["dist",{"_index":3663,"title":{},"body":{"index.html":{}}}],["distribuição",{"_index":527,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["div",{"_index":1587,"title":{},"body":{"components/HomeComponent.html":{}}}],["diversos",{"_index":62,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["divide",{"_index":814,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["divider",{"_index":2972,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["diálogo",{"_index":1283,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{}}}],["diálogos",{"_index":1351,"title":{},"body":{"injectables/DialogService.html":{}}}],["document",{"_index":1844,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["document.getelementbyid(\"sidebar",{"_index":2658,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["document.queryselector(\".cover",{"_index":2288,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["document.queryselector(\".profile",{"_index":2291,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["document.queryselector(\"h1",{"_index":2301,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["document:click",{"_index":2601,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["document:click(event",{"_index":2606,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["documentado",{"_index":2614,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["documentary",{"_index":3103,"title":{},"body":{"components/SearchComponent.html":{}}}],["documentation",{"_index":3509,"title":{},"body":{"coverage.html":{}}}],["documento",{"_index":1859,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["documentário",{"_index":720,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"interfaces/MovieCategory-2.html":{}}}],["documentários",{"_index":1567,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["dodgerblue",{"_index":1686,"title":{},"body":{"components/HomeComponent.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["dos",{"_index":579,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/GamificationComponent.html":{},"interfaces/MovieCategory-1.html":{},"injectables/NotificationService.html":{},"components/SeasonDetailsComponent.html":{},"components/SendEmailComponent.html":{}}}],["drama",{"_index":836,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{},"components/SearchComponent.html":{}}}],["durante",{"_index":57,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["duration",{"_index":418,"title":{},"body":{"injectables/AdminService.html":{},"components/LoginComponent.html":{}}}],["duração",{"_index":317,"title":{},"body":{"injectables/AdminService.html":{}}}],["dynamic",{"_index":3610,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":37,"title":{},"body":{"components/AboutUsComponent.html":{},"classes/AchievementNotificationModel.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDialogComponent.html":{},"classes/FollowNotificationModel.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MedalsDto.html":{},"interfaces/Message.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SendEmailComponent.html":{}}}],["e2e",{"_index":3672,"title":{},"body":{"index.html":{}}}],["e46464",{"_index":987,"title":{},"body":{"modules/AppModule.html":{}}}],["e50914",{"_index":1661,"title":{},"body":{"components/HomeComponent.html":{}}}],["ease",{"_index":1626,"title":{},"body":{"components/HomeComponent.html":{}}}],["edit",{"_index":130,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["editor",{"_index":3626,"title":{},"body":{"dependencies.html":{}}}],["editprofile/:username",{"_index":1019,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["editprofilecomponent",{"_index":129,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eduardo",{"_index":90,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["ele",{"_index":1285,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["element",{"_index":100,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["element.offsetheight",{"_index":3314,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["element.offsettop",{"_index":3311,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["elementos",{"_index":1854,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["elementref",{"_index":1917,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["eles",{"_index":2961,"title":{},"body":{"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["elevar",{"_index":48,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["em",{"_index":47,"title":{},"body":{"components/AboutUsComponent.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/Message.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SendEmailComponent.html":{}}}],["email",{"_index":1083,"title":{},"body":{"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/ConfirmEmail.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"components/PendingVerificationComponent.html":{},"interfaces/Register.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"interfaces/ResetPassword.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{},"classes/User.html":{}}}],["email'},{'name",{"_index":175,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["email.component",{"_index":1076,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{}}}],["email.component.css",{"_index":3444,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["email.component.html",{"_index":3443,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["email.component.ts",{"_index":3440,"title":{},"body":{"components/SendEmailComponent.html":{},"coverage.html":{}}}],["email.component.ts:113",{"_index":3453,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["email.component.ts:120",{"_index":3457,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["email.component.ts:127",{"_index":3450,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["email.component.ts:19",{"_index":3459,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["email.component.ts:20",{"_index":3462,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["email.component.ts:21",{"_index":3461,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["email.component.ts:22",{"_index":3460,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["email.component.ts:23",{"_index":3463,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["email.component.ts:24",{"_index":3448,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["email.component.ts:44",{"_index":3454,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["email.component.ts:63",{"_index":3452,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["email.component.ts:72",{"_index":3458,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["email/:mode",{"_index":1084,"title":{},"body":{"modules/AuthenticationRoutingModule.html":{}}}],["email/resend",{"_index":2806,"title":{},"body":{"components/PendingVerificationComponent.html":{}}}],["email/send",{"_index":1075,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/SendEmailComponent.html":{},"coverage.html":{}}}],["email/senha",{"_index":1820,"title":{},"body":{"components/LoginComponent.html":{}}}],["email:string",{"_index":2863,"title":{},"body":{"classes/RegisterWithExternal.html":{}}}],["emailform",{"_index":3445,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["emailvalue",{"_index":3446,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["emite",{"_index":309,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/GamificationService.html":{},"injectables/NotificationService.html":{}}}],["emitido",{"_index":1319,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["empenhados",{"_index":46,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["empilha",{"_index":1638,"title":{},"body":{"components/HomeComponent.html":{}}}],["enabled",{"_index":589,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["encontra",{"_index":1270,"title":{},"body":{"components/BlockedAccountComponent.html":{},"components/LoginComponent.html":{},"components/PendingVerificationComponent.html":{}}}],["end",{"_index":2971,"title":{},"body":{"components/RegistrationComponent.html":{},"components/SearchComponent.html":{},"index.html":{}}}],["endban",{"_index":2491,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["endbandate",{"_index":2826,"title":{},"body":{"classes/Profile.html":{}}}],["endereço",{"_index":1348,"title":{},"body":{"interfaces/ConfirmEmail.html":{},"classes/LoginWithExternal.html":{},"classes/RegisterWithExternal.html":{},"classes/User.html":{}}}],["enfrentámos",{"_index":64,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["engajamento",{"_index":1435,"title":{},"body":{"components/GamificationComponent.html":{}}}],["enriquecendo",{"_index":2527,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["entre",{"_index":475,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"interfaces/ChatWithMessages.html":{},"classes/FollowerProfile.html":{},"components/HomeComponent.html":{},"interfaces/MedalsDto.html":{},"interfaces/MovieCategory-1.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["entretenimento",{"_index":44,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["entusiasmo",{"_index":68,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["então",{"_index":3167,"title":{},"body":{"components/SearchComponent.html":{}}}],["envia",{"_index":1536,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["enviada",{"_index":1544,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/Message.html":{},"interfaces/MovieCategory.html":{},"injectables/NotificationService.html":{},"interfaces/ProfileChat.html":{}}}],["enviadas",{"_index":860,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["enviado",{"_index":2321,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["enviando",{"_index":2885,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["enviar",{"_index":863,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-3.html":{},"components/SendEmailComponent.html":{}}}],["envio",{"_index":3451,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["environment",{"_index":389,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/GamificationService.html":{},"injectables/NotificationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.appurl}/api/admin/ban",{"_index":421,"title":{},"body":{"injectables/AdminService.html":{}}}],["environments/environment.development",{"_index":390,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/GamificationService.html":{},"injectables/NotificationService.html":{}}}],["envolvente",{"_index":33,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["episode",{"_index":2769,"title":{},"body":{"injectables/NotificationService.html":{}}}],["episode.air_date",{"_index":3437,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["episode.episode_number",{"_index":3434,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["episode.name",{"_index":3435,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["episode.overview",{"_index":3438,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["episode.season_number",{"_index":3436,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["episodios",{"_index":628,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["episódio",{"_index":852,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{},"injectables/NotificationService.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["episódios",{"_index":800,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"classes/MediaNotificationModel.html":{},"interfaces/MovieCategory-3.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["equipa",{"_index":86,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["err",{"_index":1474,"title":{},"body":{"components/GamificationComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{}}}],["erro",{"_index":1546,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"components/RegisterWithThirdPartyComponent.html":{}}}],["error",{"_index":571,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{}}}],["error.error",{"_index":2311,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"components/SendEmailComponent.html":{}}}],["error.error.banduration",{"_index":2012,"title":{},"body":{"components/LoginComponent.html":{}}}],["error.error.errors",{"_index":1968,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/RegistrationComponent.html":{}}}],["error.error.errors.foreach((value",{"_index":1969,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["error.error.field",{"_index":1965,"title":{},"body":{"components/LoginComponent.html":{}}}],["error.error.message",{"_index":1974,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/SendEmailComponent.html":{}}}],["errormessages",{"_index":1826,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["errormessages['email",{"_index":2036,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SendEmailComponent.html":{}}}],["errormessages['password",{"_index":2041,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errormessages['thirdpartyemail",{"_index":2037,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{}}}],["errormessages['username",{"_index":2919,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{}}}],["errormessages[\\'email",{"_index":2045,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SendEmailComponent.html":{}}}],["errormessages[\\'password",{"_index":2047,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errormessages[\\'thirdpartyemail",{"_index":2046,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{}}}],["errormessages[\\'username",{"_index":2921,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{}}}],["errors",{"_index":1967,"title":{},"body":{"components/LoginComponent.html":{}}}],["erros",{"_index":2893,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["escolher",{"_index":2818,"title":{},"body":{"classes/Profile.html":{}}}],["esconde",{"_index":2521,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["escura",{"_index":1630,"title":{},"body":{"components/HomeComponent.html":{}}}],["escuro",{"_index":3382,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["esforço",{"_index":88,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["espaçamento",{"_index":1601,"title":{},"body":{"components/HomeComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["espaço",{"_index":3365,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["especificada",{"_index":667,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["especificado",{"_index":2242,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["especificando",{"_index":2793,"title":{},"body":{"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["especificar",{"_index":2819,"title":{},"body":{"classes/Profile.html":{}}}],["específica",{"_index":2870,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["específicas",{"_index":2095,"title":{},"body":{"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory-1.html":{},"classes/ReplyNotificationModel.html":{}}}],["específico",{"_index":1138,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"injectables/NotificationService.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["esqueceu",{"_index":2042,"title":{},"body":{"components/LoginComponent.html":{}}}],["esse",{"_index":2021,"title":{},"body":{"components/LoginComponent.html":{},"components/SearchComponent.html":{}}}],["essenciais",{"_index":3490,"title":{},"body":{"classes/User.html":{}}}],["est",{"_index":1238,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"classes/Profile.html":{},"components/RegistrationComponent.html":{},"components/SendEmailComponent.html":{}}}],["esta",{"_index":1312,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/MedalsDto.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["estado",{"_index":1150,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["estados",{"_index":3172,"title":{},"body":{"components/SearchComponent.html":{}}}],["estamos",{"_index":45,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["estatísticas",{"_index":273,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{}}}],["este",{"_index":58,"title":{},"body":{"components/AboutUsComponent.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{}}}],["esteja",{"_index":3307,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["estende",{"_index":198,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/FollowNotificationModel.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/ReplyNotificationModel.html":{}}}],["estilização",{"_index":1306,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["estilo",{"_index":2795,"title":{},"body":{"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["estiver",{"_index":356,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/GamificationService.html":{},"interfaces/MovieCategory-1.html":{}}}],["estiverem",{"_index":523,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["estrutura",{"_index":2071,"title":{},"body":{"interfaces/MedalsDto.html":{},"interfaces/Message.html":{},"classes/NotificationModel.html":{},"interfaces/ProfileChat.html":{}}}],["estático",{"_index":529,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["estão",{"_index":519,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{}}}],["etc",{"_index":1185,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/NotificationService.html":{},"classes/RegisterWithExternal.html":{},"interfaces/UserMedia.html":{}}}],["event",{"_index":1800,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"components/NavMenuComponent.html":{}}}],["event.stoppropagation",{"_index":2660,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["eventemitter",{"_index":1054,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/ConfirmDialogComponent.html":{}}}],["evento",{"_index":1318,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{}}}],["eventtype",{"_index":222,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/FollowNotificationModel.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"classes/ReplyNotificationModel.html":{}}}],["evitar",{"_index":2236,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["ex",{"_index":2062,"title":{},"body":{"classes/LoginWithExternal.html":{},"classes/RegisterWithExternal.html":{}}}],["exceda",{"_index":3233,"title":{},"body":{"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["excluindo",{"_index":2526,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["executa",{"_index":562,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["executado",{"_index":656,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/SearchComponent.html":{}}}],["executar",{"_index":1311,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["execute",{"_index":3669,"title":{},"body":{"index.html":{}}}],["execução",{"_index":1855,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{}}}],["exemplo",{"_index":1133,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/ReplyNotificationModel.html":{},"components/SearchComponent.html":{}}}],["exibe",{"_index":830,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-3.html":{},"components/SeasonDetailsComponent.html":{}}}],["exibida",{"_index":3088,"title":{},"body":{"components/SearchComponent.html":{}}}],["exibido",{"_index":2082,"title":{},"body":{"interfaces/MedalsDto.html":{}}}],["exibir",{"_index":515,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/GamificationComponent.html":{},"interfaces/MedalsDto.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{}}}],["exibição",{"_index":694,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/NavMenuComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["existe",{"_index":2019,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["existem",{"_index":2616,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["existentes",{"_index":3216,"title":{},"body":{"components/SearchComponent.html":{}}}],["existência",{"_index":2575,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{}}}],["expandedfavoriteslist",{"_index":2160,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["expandedfollowers",{"_index":2158,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["expandedfollowing",{"_index":2159,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["expandedmoviestowatchlist",{"_index":2162,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["expandedmovieswatchlist",{"_index":2161,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["expandedseriestowatchlist",{"_index":2164,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["expandedserieswatchlist",{"_index":2163,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["expandir",{"_index":786,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{}}}],["expecting",{"_index":427,"title":{},"body":{"injectables/AdminService.html":{}}}],["experiência",{"_index":31,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["export",{"_index":22,"title":{},"body":{"components/AboutUsComponent.html":{},"classes/AchievementNotificationModel.html":{},"classes/Actor.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"components/BlockedAccountComponent.html":{},"interfaces/ChatWithMessages.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmEmail.html":{},"injectables/DialogService.html":{},"classes/FavoriteActor.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"interfaces/Message.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"interfaces/Register.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"interfaces/ResetPassword.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{},"interfaces/UserRatingMedia.html":{}}}],["exports",{"_index":894,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":217,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/FollowNotificationModel.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/ReplyNotificationModel.html":{}}}],["externa",{"_index":2058,"title":{},"body":{"classes/LoginWithExternal.html":{},"classes/RegisterWithExternal.html":{}}}],["externo",{"_index":1157,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"classes/RegisterWithExternal.html":{}}}],["externos",{"_index":1822,"title":{},"body":{"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"classes/RegisterWithExternal.html":{},"components/RegistrationComponent.html":{}}}],["f0f0f0",{"_index":3385,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["f2f2f2",{"_index":1584,"title":{},"body":{"components/HomeComponent.html":{}}}],["f3f3f3",{"_index":1778,"title":{},"body":{"components/LoadingComponent.html":{}}}],["f44336",{"_index":1611,"title":{},"body":{"components/HomeComponent.html":{}}}],["fa",{"_index":2676,"title":{},"body":{"components/NavMenuComponent.html":{},"components/RegistrationComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["facebook",{"_index":1184,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginWithExternal.html":{},"classes/RegisterWithExternal.html":{}}}],["facilitando",{"_index":2867,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["fagoogle",{"_index":920,"title":{},"body":{"modules/AppModule.html":{}}}],["faiconlibrary",{"_index":919,"title":{},"body":{"modules/AppModule.html":{}}}],["failed",{"_index":2028,"title":{},"body":{"components/LoginComponent.html":{}}}],["falhas",{"_index":1873,"title":{},"body":{"components/LoginComponent.html":{}}}],["fallback",{"_index":2674,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["false",{"_index":715,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationGuard.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["falso",{"_index":2484,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"injectables/NotificationService.html":{}}}],["family",{"_index":3106,"title":{},"body":{"components/SearchComponent.html":{}}}],["fantasy",{"_index":3108,"title":{},"body":{"components/SearchComponent.html":{}}}],["favorita",{"_index":2129,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["favoritas",{"_index":2372,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"interfaces/UserMedia.html":{}}}],["favoriteactor",{"_index":1370,"title":{"classes/FavoriteActor.html":{}},"body":{"classes/FavoriteActor.html":{},"coverage.html":{}}}],["favoritemovies",{"_index":2171,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["favorites",{"_index":2378,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["favorites.filter(m",{"_index":2382,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["favoriteseries",{"_index":2172,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["favorito",{"_index":2389,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["favoritos",{"_index":2370,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["faça",{"_index":2920,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/SearchComponent.html":{}}}],["fecha",{"_index":2611,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["fechado",{"_index":1362,"title":{},"body":{"injectables/DialogService.html":{}}}],["feitos",{"_index":365,"title":{},"body":{"injectables/AdminService.html":{}}}],["ferramenta",{"_index":2193,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["ferramentas",{"_index":2192,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["fetchairingandwatchedseriesandnotify",{"_index":790,"title":{},"body":{"components/AllSeriesPageComponent.html":{}}}],["fetching",{"_index":573,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{}}}],["fetchmethod.subscribe((result",{"_index":735,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["fetchmethods",{"_index":725,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["fetchmethods.foreach((fetchmethod",{"_index":734,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["fetchmovies",{"_index":639,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["fetchprofilecounts",{"_index":457,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["fetchprofilecounts(callback",{"_index":477,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["fetchrecommendedmovies",{"_index":640,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"interfaces/MovieCategory-2.html":{}}}],["fetchrecommendedseries",{"_index":791,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["fetchtotalbannedusers",{"_index":458,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["fetchtotalcomments",{"_index":459,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["fetchtotalregisteredusers",{"_index":460,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["fetchtotalregisteredusers(callback",{"_index":497,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["fetchtrending",{"_index":2232,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["fetchwatchedmediadetails",{"_index":2406,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["fetchwatchlatermediadetails",{"_index":2415,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["ffc107",{"_index":985,"title":{},"body":{"modules/AppModule.html":{}}}],["fff",{"_index":1713,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["ffffff",{"_index":1664,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["fi",{"_index":3138,"title":{},"body":{"components/SearchComponent.html":{}}}],["fiction",{"_index":3121,"title":{},"body":{"components/SearchComponent.html":{}}}],["ficção",{"_index":721,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{}}}],["field",{"_index":2003,"title":{},"body":{"components/LoginComponent.html":{}}}],["fieldname",{"_index":1891,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["fields",{"_index":2980,"title":{},"body":{"components/RegistrationComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AboutUsComponent.html":{},"classes/AchievementNotificationModel.html":{},"classes/Actor.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"components/BlockedAccountComponent.html":{},"interfaces/ChatWithMessages.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmEmail.html":{},"injectables/DialogService.html":{},"classes/FavoriteActor.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"interfaces/Message.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"interfaces/Register.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"interfaces/ResetPassword.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{},"interfaces/UserRatingMedia.html":{},"coverage.html":{}}}],["files",{"_index":3654,"title":{},"body":{"index.html":{}}}],["filme",{"_index":2388,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"classes/ReplyNotificationModel.html":{},"components/SearchComponent.html":{},"interfaces/UserMedia.html":{}}}],["filmes",{"_index":530,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"classes/MediaNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/SearchComponent.html":{},"interfaces/UserMedia.html":{}}}],["filter",{"_index":1718,"title":{},"body":{"components/HomeComponent.html":{}}}],["filter(media",{"_index":742,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["filterbygenre",{"_index":3053,"title":{},"body":{"components/SearchComponent.html":{}}}],["filterbygenre(genreid",{"_index":3073,"title":{},"body":{"components/SearchComponent.html":{}}}],["filtered",{"_index":2554,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["filtered.length",{"_index":2559,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["filtered.slice((this.page",{"_index":2560,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["filteredprofiles",{"_index":2535,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["filteredprofiles.map(profile",{"_index":2537,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["filteredusersprofiles",{"_index":2184,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["filterusers",{"_index":2553,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["filtra",{"_index":2525,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"components/SearchComponent.html":{}}}],["filtrado",{"_index":3077,"title":{},"body":{"components/SearchComponent.html":{}}}],["filtro",{"_index":3069,"title":{},"body":{"components/SearchComponent.html":{}}}],["fim",{"_index":2481,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"classes/Profile.html":{}}}],["finalize",{"_index":1793,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["first",{"_index":3677,"title":{},"body":{"index.html":{}}}],["firstvaluefrom",{"_index":2119,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["firstvaluefrom(this.profileservice.getfavoritemedia(username",{"_index":2380,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["firstvaluefrom(this.profileservice.getuserwatchedmedia(username",{"_index":2398,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["firstvaluefrom(this.profileservice.getuserwatchlatermedia(username",{"_index":2411,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["firstvaluefrom(this.service.getmoviedetails(movie.mediaid",{"_index":2385,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["firstvaluefrom(this.service.getseriedetails(series.mediaid",{"_index":2390,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["fit",{"_index":1657,"title":{},"body":{"components/HomeComponent.html":{}}}],["fixed",{"_index":1772,"title":{},"body":{"components/LoadingComponent.html":{}}}],["flatmap",{"_index":701,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"interfaces/MovieCategory-2.html":{}}}],["flex",{"_index":1592,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["foi",{"_index":1543,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/Message.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"classes/NotificationModel.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["follow",{"_index":2649,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["followerprofile",{"_index":1398,"title":{"classes/FollowerProfile.html":{}},"body":{"classes/FollowerProfile.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"coverage.html":{}}}],["followers",{"_index":2165,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"classes/Profile.html":{}}}],["followers.length",{"_index":2358,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["followerscount",{"_index":2139,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["following",{"_index":2166,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"classes/Profile.html":{}}}],["following.length",{"_index":2363,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["followingcount",{"_index":2140,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["follownotificationmodel",{"_index":1389,"title":{"classes/FollowNotificationModel.html":{}},"body":{"classes/FollowNotificationModel.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["followrequestsent",{"_index":2144,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["followuser",{"_index":2326,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["font",{"_index":1619,"title":{},"body":{"components/HomeComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{},"dependencies.html":{}}}],["fontawesome",{"_index":918,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":916,"title":{},"body":{"modules/AppModule.html":{}}}],["fonte",{"_index":2983,"title":{},"body":{"components/RegistrationComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["footer",{"_index":1411,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":133,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["footer.component.css",{"_index":1413,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":1412,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":928,"title":{},"body":{"modules/AppModule.html":{}}}],["footercomponent",{"_index":132,"title":{"components/FooterComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fora",{"_index":1364,"title":{},"body":{"injectables/DialogService.html":{},"components/NavMenuComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{}}}],["foram",{"_index":1200,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{}}}],["forgot",{"_index":2969,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["forgotpassword",{"_index":1098,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["forgotpassword(email",{"_index":1112,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["forkjoin",{"_index":702,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["forkjoin(movieids.map(id",{"_index":746,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["forkjoin(profileswithroles",{"_index":2542,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["form",{"_index":2966,"title":{},"body":{"components/RegistrationComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["forma",{"_index":2078,"title":{},"body":{"interfaces/MedalsDto.html":{},"components/SearchComponent.html":{}}}],["formbuilder",{"_index":1839,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{}}}],["formcontrol",{"_index":3149,"title":{},"body":{"components/SearchComponent.html":{}}}],["formcontrol('movie",{"_index":3150,"title":{},"body":{"components/SearchComponent.html":{}}}],["formgroup",{"_index":1922,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{}}}],["formsmodule",{"_index":937,"title":{},"body":{"modules/AppModule.html":{}}}],["formulário",{"_index":1876,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{}}}],["formulários",{"_index":1848,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{}}}],["fornece",{"_index":2085,"title":{},"body":{"interfaces/MedalsDto.html":{},"components/SearchServiceComponent.html":{}}}],["fornecida",{"_index":484,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"classes/Profile.html":{}}}],["fornecidas",{"_index":1145,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["fornecido",{"_index":2059,"title":{},"body":{"classes/LoginWithExternal.html":{},"classes/RegisterWithExternal.html":{}}}],["fornecidos",{"_index":1541,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"classes/RegisterWithExternal.html":{}}}],["fortawesome/angular",{"_index":917,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":3613,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":921,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["foto",{"_index":205,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/Profile.html":{},"classes/ReplyNotificationModel.html":{}}}],["fotografia",{"_index":1279,"title":{},"body":{"interfaces/ChatWithMessages.html":{},"interfaces/ProfileChat.html":{}}}],["free",{"_index":3614,"title":{},"body":{"dependencies.html":{}}}],["frequentemente",{"_index":3491,"title":{},"body":{"classes/User.html":{}}}],["frontend",{"_index":2074,"title":{},"body":{"interfaces/MedalsDto.html":{}}}],["full",{"_index":1013,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["funcionalidade",{"_index":3265,"title":{},"body":{"components/SearchServiceComponent.html":{}}}],["funcionalidades",{"_index":36,"title":{},"body":{"components/AboutUsComponent.html":{},"components/NavMenuComponent.html":{}}}],["function",{"_index":487,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["fundo",{"_index":1586,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["função",{"_index":482,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["funções",{"_index":563,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["further",{"_index":3681,"title":{},"body":{"index.html":{}}}],["futura",{"_index":2891,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/SendEmailComponent.html":{}}}],["futuras",{"_index":1907,"title":{},"body":{"components/LoginComponent.html":{}}}],["gamification",{"_index":1437,"title":{},"body":{"components/GamificationComponent.html":{}}}],["gamification'},{'name",{"_index":135,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["gamification.component.css",{"_index":1439,"title":{},"body":{"components/GamificationComponent.html":{}}}],["gamification.component.html",{"_index":1438,"title":{},"body":{"components/GamificationComponent.html":{}}}],["gamification/:username",{"_index":1029,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["gamification/gamification.component",{"_index":959,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["gamification/service/gamification.service",{"_index":2123,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["gamificationcomponent",{"_index":134,"title":{"components/GamificationComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gamificationservice",{"_index":1446,"title":{"injectables/GamificationService.html":{}},"body":{"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"interfaces/MovieCategory-1.html":{},"coverage.html":{}}}],["gamificação",{"_index":1426,"title":{},"body":{"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"interfaces/MedalsDto.html":{},"interfaces/MovieCategory-1.html":{}}}],["gap",{"_index":2968,"title":{},"body":{"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["garanta",{"_index":3210,"title":{},"body":{"components/SearchComponent.html":{}}}],["garante",{"_index":1728,"title":{},"body":{"components/HomeComponent.html":{},"components/NavMenuComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["garantir",{"_index":3305,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["gender",{"_index":2279,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"classes/Profile.html":{}}}],["generate",{"_index":3657,"title":{},"body":{"index.html":{}}}],["generated",{"_index":3640,"title":{},"body":{"index.html":{}}}],["genre",{"_index":3212,"title":{},"body":{"components/SearchComponent.html":{}}}],["genre.name",{"_index":3243,"title":{},"body":{"components/SearchComponent.html":{}}}],["genre_tab",{"_index":3351,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["genreid",{"_index":3076,"title":{},"body":{"components/SearchComponent.html":{}}}],["genresmovies",{"_index":3044,"title":{},"body":{"components/SearchComponent.html":{}}}],["genresseries",{"_index":3045,"title":{},"body":{"components/SearchComponent.html":{}}}],["gera",{"_index":2340,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["gerais",{"_index":274,"title":{},"body":{"injectables/AdminService.html":{}}}],["geral",{"_index":3330,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["gerencia",{"_index":2609,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["gerenciamento",{"_index":1090,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["gerenciar",{"_index":1350,"title":{},"body":{"injectables/DialogService.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"components/RegistrationComponent.html":{},"components/SearchServiceComponent.html":{},"components/SendEmailComponent.html":{}}}],["gestão",{"_index":265,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GamificationService.html":{},"interfaces/MedalsDto.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{}}}],["getachievementnotifications",{"_index":2692,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getachievementnotifications(username",{"_index":2707,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getavailablemedals",{"_index":1486,"title":{},"body":{"injectables/GamificationService.html":{}}}],["getcategoryactiveindex",{"_index":641,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{}}}],["getcategoryactiveindex(categoryname",{"_index":662,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["getcategoryresults",{"_index":642,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{}}}],["getcategoryresults(categoryname",{"_index":669,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["getdisplaypages",{"_index":3157,"title":{},"body":{"components/SearchComponent.html":{}}}],["getfavorites(username",{"_index":2376,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["getfollowerslist",{"_index":2354,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["getfollowinglist",{"_index":2359,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["getfollownotificationsforuser",{"_index":2693,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getfollownotificationsforuser(authenticatedusername",{"_index":2710,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getheaders",{"_index":282,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GamificationService.html":{},"injectables/NotificationService.html":{}}}],["getjwt",{"_index":283,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/GamificationService.html":{},"injectables/NotificationService.html":{}}}],["getlockedmedals",{"_index":1443,"title":{},"body":{"components/GamificationComponent.html":{},"injectables/GamificationService.html":{}}}],["getlockedmedals(username",{"_index":1499,"title":{},"body":{"injectables/GamificationService.html":{}}}],["getloggedinusername",{"_index":1099,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getmedals(username",{"_index":2476,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["getmedianotifications",{"_index":2694,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getmedianotifications(username",{"_index":2718,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getmessagenotificationsforuser",{"_index":2695,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getmessagenotificationsforuser(authenticatedusername",{"_index":2720,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getmoviedetailresult",{"_index":2177,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["getparamid",{"_index":3291,"title":{},"body":{"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["getpendingfollowrequests",{"_index":2595,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["getrandomfollowslist(array",{"_index":2347,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["getrandomotherusers(array",{"_index":2365,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["getreplynotifications",{"_index":2696,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getreplynotifications(username",{"_index":2722,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getrows",{"_index":643,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{}}}],["getrows(movies",{"_index":674,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["getseasondetails",{"_index":3414,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["getseasondetails(id",{"_index":3416,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["getseriedetails",{"_index":3280,"title":{},"body":{"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["getseriedetails(id",{"_index":3283,"title":{},"body":{"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["getseriedetailsresult",{"_index":3278,"title":{},"body":{"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["getseriedetailsresult.name",{"_index":3318,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["getseriedetailsresult.tagline",{"_index":3319,"title":{},"body":{"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["getseriedetailsresult?.name",{"_index":3328,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["getserieseasondetailsresult",{"_index":3413,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["getserieseasondetailsresult.name",{"_index":3433,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["getstoreduser",{"_index":1100,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getting",{"_index":3636,"title":{"index.html":{}},"body":{}}],["gettotalbannedusers",{"_index":284,"title":{},"body":{"injectables/AdminService.html":{}}}],["gettotalcomments",{"_index":285,"title":{},"body":{"injectables/AdminService.html":{}}}],["gettotalpagesarray",{"_index":3155,"title":{},"body":{"components/SearchComponent.html":{}}}],["gettotalprivateprofiles",{"_index":286,"title":{},"body":{"injectables/AdminService.html":{}}}],["gettotalpublicprofiles",{"_index":287,"title":{},"body":{"injectables/AdminService.html":{}}}],["gettotalregisteredusers",{"_index":288,"title":{},"body":{"injectables/AdminService.html":{}}}],["getunlockedmedals",{"_index":1444,"title":{},"body":{"components/GamificationComponent.html":{},"injectables/GamificationService.html":{}}}],["getunlockedmedals(username",{"_index":1503,"title":{},"body":{"injectables/GamificationService.html":{}}}],["getuserprofileinfo(username",{"_index":2253,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["getuserprofiles",{"_index":2366,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["getuserprofilesmod",{"_index":2528,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["getuserrole",{"_index":289,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{}}}],["getuserrole(username",{"_index":373,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{}}}],["getwatchedmedia(username",{"_index":2397,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["getwatchlatermedia(username",{"_index":2410,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["global",{"_index":1860,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["go",{"_index":3684,"title":{},"body":{"index.html":{}}}],["google",{"_index":1183,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{}}}],["google.accounts.id.initialize",{"_index":1979,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["google.accounts.id.renderbutton",{"_index":1986,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["googlebutton",{"_index":1827,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["googlecallback",{"_index":1833,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["googlecallback(response",{"_index":1868,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["graph",{"_index":3688,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":2984,"title":{},"body":{"components/RegistrationComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["gráfico",{"_index":506,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["gt",{"_index":788,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/SearchComponent.html":{}}}],["guards/authorization.guard",{"_index":1005,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["género",{"_index":2816,"title":{},"body":{"classes/Profile.html":{}}}],["gênero",{"_index":3075,"title":{},"body":{"components/SearchComponent.html":{}}}],["h2",{"_index":1660,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["h3",{"_index":3368,"title":{},"body":{"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["handle",{"_index":1963,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{}}}],["hasnextpage",{"_index":2576,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["hasunreadnotifications",{"_index":2587,"title":{},"body":{"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{}}}],["hasunreadnotifications(username",{"_index":2726,"title":{},"body":{"injectables/NotificationService.html":{}}}],["header",{"_index":1752,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["headers",{"_index":406,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/GamificationService.html":{},"injectables/NotificationService.html":{}}}],["headers.set(\"authorization",{"_index":1220,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["height",{"_index":1604,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["height:400px",{"_index":1650,"title":{},"body":{"components/HomeComponent.html":{}}}],["help",{"_index":3682,"title":{},"body":{"index.html":{}}}],["here",{"_index":2005,"title":{},"body":{"components/LoginComponent.html":{}}}],["hidden",{"_index":1668,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["hide",{"_index":1806,"title":{},"body":{"injectables/LoadingService.html":{}}}],["hidebanpopup",{"_index":2524,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["highcharts",{"_index":451,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["highchartschartmodule",{"_index":977,"title":{},"body":{"modules/AppModule.html":{}}}],["history",{"_index":3110,"title":{},"body":{"components/SearchComponent.html":{}}}],["histórico",{"_index":661,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"interfaces/MovieCategory-2.html":{}}}],["hobby",{"_index":2278,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["hoje",{"_index":797,"title":{},"body":{"components/AllSeriesPageComponent.html":{}}}],["home",{"_index":1011,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["home'},{'name",{"_index":137,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["home.component.css",{"_index":1513,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["home.component.html",{"_index":1514,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["home/home.component",{"_index":925,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":136,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hora",{"_index":2109,"title":{},"body":{"interfaces/Message.html":{},"classes/NotificationModel.html":{}}}],["horizontalmente",{"_index":3361,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["horror",{"_index":3112,"title":{},"body":{"components/SearchComponent.html":{}}}],["hostlistener",{"_index":874,"title":{},"body":{"components/AppComponent.html":{},"components/NavMenuComponent.html":{}}}],["hostlistener('document:click",{"_index":2620,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["hostlisteners",{"_index":2600,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["houver",{"_index":2728,"title":{},"body":{"injectables/NotificationService.html":{},"components/RegistrationComponent.html":{}}}],["html",{"_index":99,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["htmlimageelement",{"_index":2292,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["http",{"_index":295,"title":{},"body":{"injectables/AdminService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/GamificationService.html":{},"injectables/NotificationService.html":{}}}],["http://localhost:4200",{"_index":3649,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":908,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":292,"title":{},"body":{"injectables/AdminService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/GamificationService.html":{},"injectables/NotificationService.html":{}}}],["httpclientmodule",{"_index":909,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{}}}],["httpevent",{"_index":1748,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{}}}],["httphandler",{"_index":1745,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{}}}],["httpheaders",{"_index":344,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/GamificationService.html":{},"injectables/NotificationService.html":{}}}],["httpinterceptor",{"_index":1749,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{}}}],["httprequest",{"_index":1744,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{}}}],["httpresponse",{"_index":1792,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["https://accounts.google.com/gsi/client",{"_index":1950,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["https://localhost:7232",{"_index":3698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://watchers",{"_index":3701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hue",{"_index":1724,"title":{},"body":{"components/HomeComponent.html":{}}}],["icon",{"_index":1047,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/HomeComponent.html":{},"components/RegistrationComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["icons",{"_index":924,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["id",{"_index":202,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/Actor.html":{},"classes/FollowNotificationModel.html":{},"interfaces/MedalsDto.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory-1.html":{},"injectables/NotificationService.html":{},"classes/ReplyNotificationModel.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["identidade",{"_index":2061,"title":{},"body":{"classes/LoginWithExternal.html":{},"classes/RegisterWithExternal.html":{}}}],["identificador",{"_index":209,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/FollowNotificationModel.html":{},"classes/LoginWithExternal.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"interfaces/Message.html":{},"classes/MessageNotificationModel.html":{},"classes/NotificationModel.html":{},"classes/RegisterWithExternal.html":{},"classes/ReplyNotificationModel.html":{},"interfaces/UserMedia.html":{}}}],["identifier",{"_index":3510,"title":{},"body":{"coverage.html":{}}}],["idioma",{"_index":3240,"title":{},"body":{"components/SearchComponent.html":{}}}],["ignore",{"_index":1978,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["igual",{"_index":1754,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["image",{"_index":1689,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MedalsDto.html":{},"components/SeasonDetailsComponent.html":{}}}],["image[_ngcontent",{"_index":3407,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["imagem",{"_index":2089,"title":{},"body":{"interfaces/MedalsDto.html":{},"components/SeasonDetailsComponent.html":{}}}],["imagens",{"_index":2281,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["imediatamente",{"_index":2197,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["img",{"_index":1655,"title":{},"body":{"components/HomeComponent.html":{}}}],["implements",{"_index":865,"title":{},"body":{"components/AppComponent.html":{},"components/GamificationComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"interfaces/MovieCategory-1.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SendEmailComponent.html":{},"index.html":{}}}],["import",{"_index":19,"title":{},"body":{"components/AboutUsComponent.html":{},"classes/AchievementNotificationModel.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"components/BlockedAccountComponent.html":{},"interfaces/ChatWithMessages.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"classes/FollowNotificationModel.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"interfaces/ProfileChat.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"interfaces/UserRatingMedia.html":{}}}],["import('./authentication/authentication.module').then(module",{"_index":1021,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":2989,"title":{},"body":{"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["imports",{"_index":907,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{}}}],["include",{"_index":2025,"title":{},"body":{"components/LoginComponent.html":{}}}],["inclui",{"_index":2809,"title":{},"body":{"classes/Profile.html":{},"components/RegistrationComponent.html":{},"interfaces/UserMedia.html":{}}}],["incluindo",{"_index":268,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"classes/FollowNotificationModel.html":{},"components/GamificationComponent.html":{},"components/LoginComponent.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory-1.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{}}}],["incluir",{"_index":201,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/MediaNotificationModel.html":{},"components/SearchComponent.html":{}}}],["inclusão",{"_index":337,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GamificationService.html":{}}}],["incorreta",{"_index":2958,"title":{},"body":{"components/RegistrationComponent.html":{},"components/SendEmailComponent.html":{}}}],["incrementa",{"_index":2568,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["indefinido",{"_index":2330,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["index",{"_index":219,"title":{"index.html":{}},"body":{"classes/AchievementNotificationModel.html":{},"classes/Actor.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"interfaces/ChatWithMessages.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmEmail.html":{},"injectables/DialogService.html":{},"classes/FavoriteActor.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"interfaces/Message.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"interfaces/Register.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"interfaces/ResetPassword.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{},"interfaces/UserRatingMedia.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":2827,"title":{},"body":{"classes/Profile.html":{}}}],["indicador",{"_index":2618,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["indicando",{"_index":1894,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"classes/NotificationModel.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["indicar",{"_index":1613,"title":{},"body":{"components/HomeComponent.html":{},"classes/Profile.html":{}}}],["indicates",{"_index":2004,"title":{},"body":{"components/LoginComponent.html":{}}}],["infinite",{"_index":1784,"title":{},"body":{"components/LoadingComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutUsComponent.html":{},"classes/AchievementNotificationModel.html":{},"classes/Actor.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"components/BlockedAccountComponent.html":{},"interfaces/ChatWithMessages.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmEmail.html":{},"injectables/DialogService.html":{},"classes/FavoriteActor.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"interfaces/Message.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"interfaces/Register.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"interfaces/ResetPassword.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{},"interfaces/UserRatingMedia.html":{}}}],["info'},{'name",{"_index":172,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["info.component",{"_index":955,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["info.component.css",{"_index":3412,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["info.component.html",{"_index":3411,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["info.component.ts",{"_index":3410,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:10",{"_index":3415,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["info.component.ts:13",{"_index":3421,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["info.component.ts:14",{"_index":3422,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["info.component.ts:16",{"_index":3420,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["info.component.ts:30",{"_index":3418,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["info.component.ts:44",{"_index":3419,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["info/season",{"_index":954,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SeasonDetailsInfoComponent.html":{},"coverage.html":{}}}],["informação",{"_index":43,"title":{},"body":{"components/AboutUsComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["informações",{"_index":1161,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/FollowerProfile.html":{},"injectables/GamificationService.html":{},"classes/LoginWithExternal.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"classes/RegisterWithExternal.html":{},"components/SeasonDetailsInfoComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{}}}],["inherited",{"_index":238,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/FollowNotificationModel.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/ReplyNotificationModel.html":{}}}],["inicia",{"_index":1862,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["iniciais",{"_index":817,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["inicial",{"_index":561,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["inicializa",{"_index":680,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["inicializado",{"_index":658,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"interfaces/MovieCategory-2.html":{}}}],["inicializando",{"_index":2933,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["inicializar",{"_index":821,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/MovieCategory-3.html":{},"components/PendingVerificationComponent.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["inicialização",{"_index":1456,"title":{},"body":{"components/GamificationComponent.html":{}}}],["initcategories",{"_index":644,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["initial",{"_index":1712,"title":{},"body":{"components/HomeComponent.html":{}}}],["initializeform",{"_index":1834,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["initializegooglebutton",{"_index":1835,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["inject",{"_index":1927,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["inject(document",{"_index":1937,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["injectable",{"_index":258,"title":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"injectables/DialogService.html":{},"injectables/GamificationService.html":{},"injectables/LoadingService.html":{},"injectables/NotificationService.html":{}},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"injectables/DialogService.html":{},"injectables/GamificationService.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["injectables",{"_index":260,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"injectables/DialogService.html":{},"injectables/GamificationService.html":{},"injectables/LoadingService.html":{},"injectables/NotificationService.html":{},"overview.html":{}}}],["injeta",{"_index":1358,"title":{},"body":{"injectables/DialogService.html":{}}}],["inline",{"_index":1732,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["inner",{"_index":1652,"title":{},"body":{"components/HomeComponent.html":{}}}],["innersize",{"_index":596,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["input",{"_index":1056,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/RegistrationComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["inputs",{"_index":1044,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/RegistrationComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["insira",{"_index":3038,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["instanceof",{"_index":1801,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"interfaces/MovieCategory-1.html":{}}}],["interagir",{"_index":2127,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["interação",{"_index":1434,"title":{},"body":{"components/GamificationComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{}}}],["interações",{"_index":2195,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["intercept",{"_index":1741,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{}}}],["intercept(req",{"_index":1743,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{}}}],["interceptor",{"_index":1738,"title":{"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptor.service",{"_index":934,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor.service.ts",{"_index":1789,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"coverage.html":{}}}],["interceptor.service.ts:10",{"_index":1790,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["interceptor.service.ts:14",{"_index":1791,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["interceptors",{"_index":1739,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{}}}],["interceptors/jwt.interceptor",{"_index":932,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptors/loading/loading",{"_index":933,"title":{},"body":{"modules/AppModule.html":{}}}],["interface",{"_index":705,"title":{"interfaces/ChatWithMessages.html":{},"interfaces/ConfirmEmail.html":{},"interfaces/Login.html":{},"interfaces/MedalsDto.html":{},"interfaces/Message.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"interfaces/ProfileChat.html":{},"interfaces/Register.html":{},"interfaces/ResetPassword.html":{},"interfaces/UserMedia.html":{},"interfaces/UserRatingMedia.html":{}},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/ChatWithMessages.html":{},"interfaces/ConfirmEmail.html":{},"components/HomeComponent.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"interfaces/MedalsDto.html":{},"interfaces/Message.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"interfaces/ProfileChat.html":{},"interfaces/Register.html":{},"interfaces/ResetPassword.html":{},"interfaces/UserMedia.html":{},"interfaces/UserRatingMedia.html":{},"coverage.html":{}}}],["interfaces",{"_index":1273,"title":{},"body":{"interfaces/ChatWithMessages.html":{},"interfaces/ConfirmEmail.html":{},"interfaces/Login.html":{},"interfaces/MedalsDto.html":{},"interfaces/Message.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"interfaces/ProfileChat.html":{},"interfaces/Register.html":{},"interfaces/ResetPassword.html":{},"interfaces/UserMedia.html":{},"interfaces/UserRatingMedia.html":{},"overview.html":{}}}],["interno",{"_index":1642,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["invert(27",{"_index":1721,"title":{},"body":{"components/HomeComponent.html":{}}}],["início",{"_index":2480,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"classes/Profile.html":{}}}],["isactive",{"_index":2588,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["isbanned",{"_index":2181,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"classes/Profile.html":{}}}],["isbanpopupvisible",{"_index":2178,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["isfieldmodified",{"_index":1836,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["isfieldmodified(fieldname",{"_index":1884,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["isfollowing",{"_index":2133,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["isfollowrequestapproved",{"_index":2142,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["isgenreselected",{"_index":3046,"title":{},"body":{"components/SearchComponent.html":{}}}],["isloading",{"_index":1763,"title":{},"body":{"components/LoadingComponent.html":{}}}],["ismoderator",{"_index":2179,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"classes/Profile.html":{}}}],["isprofilepublic",{"_index":2143,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["isread",{"_index":223,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/FollowNotificationModel.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"classes/ReplyNotificationModel.html":{}}}],["isso",{"_index":1908,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["item",{"_index":1654,"title":{},"body":{"components/HomeComponent.html":{}}}],["items",{"_index":1594,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["itens",{"_index":3333,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["j",{"_index":1454,"title":{},"body":{"components/GamificationComponent.html":{},"interfaces/MovieCategory-1.html":{},"classes/NotificationModel.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["jest",{"_index":3625,"title":{},"body":{"dependencies.html":{}}}],["jesus",{"_index":95,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["jornada",{"_index":75,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["joão",{"_index":96,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["json",{"_index":3495,"title":{},"body":{"classes/User.html":{}}}],["json.parse(key",{"_index":400,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/GamificationService.html":{},"injectables/NotificationService.html":{}}}],["json.stringify(user",{"_index":1248,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["justify",{"_index":1598,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["jwt",{"_index":339,"title":{},"body":{"injectables/AdminService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/GamificationService.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"dependencies.html":{}}}],["jwtdecode",{"_index":1931,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["jwtdecode(response.credential",{"_index":1995,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["jwtinterceptor",{"_index":902,"title":{"interceptors/JwtInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JwtInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["karma",{"_index":3671,"title":{},"body":{"index.html":{}}}],["key",{"_index":398,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/GamificationService.html":{},"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{}}}],["keyframes",{"_index":1785,"title":{},"body":{"components/LoadingComponent.html":{}}}],["kids",{"_index":3131,"title":{},"body":{"components/SearchComponent.html":{}}}],["lançamento",{"_index":3323,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["largeposter",{"_index":1680,"title":{},"body":{"components/HomeComponent.html":{}}}],["largura",{"_index":3387,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["last",{"_index":3288,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["lastmessage",{"_index":2338,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"interfaces/ProfileChat.html":{}}}],["lastseason",{"_index":3279,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["lateral",{"_index":2610,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["layouttype",{"_index":1333,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["leaks",{"_index":2238,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["left",{"_index":1698,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["left:100px",{"_index":2977,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["legend",{"_index":98,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"overview.html":{}}}],["leitura",{"_index":2681,"title":{},"body":{"classes/NotificationModel.html":{}}}],["length",{"_index":3227,"title":{},"body":{"components/SearchComponent.html":{}}}],["letra",{"_index":2962,"title":{},"body":{"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["levantada",{"_index":2631,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["lhe",{"_index":2510,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["library.addicons(fagoogle",{"_index":999,"title":{},"body":{"modules/AppModule.html":{}}}],["lida",{"_index":2110,"title":{},"body":{"interfaces/Message.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{}}}],["lidar",{"_index":1871,"title":{},"body":{"components/LoginComponent.html":{}}}],["lidas",{"_index":2617,"title":{},"body":{"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{},"interfaces/ProfileChat.html":{}}}],["limitada",{"_index":2342,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["limites",{"_index":3358,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["limpa",{"_index":2522,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"injectables/NotificationService.html":{}}}],["limpar",{"_index":2690,"title":{},"body":{"injectables/NotificationService.html":{}}}],["limpas",{"_index":2706,"title":{},"body":{"injectables/NotificationService.html":{}}}],["linear",{"_index":1783,"title":{},"body":{"components/LoadingComponent.html":{}}}],["linha",{"_index":3270,"title":{},"body":{"components/SearchServiceComponent.html":{}}}],["linhas",{"_index":677,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["link",{"_index":1189,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/PendingVerificationComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SendEmailComponent.html":{}}}],["link/${email",{"_index":1230,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["link:hover",{"_index":3392,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["lista",{"_index":1140,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ChatWithMessages.html":{},"injectables/GamificationService.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"interfaces/ProfileChat.html":{},"components/SearchComponent.html":{}}}],["literal",{"_index":1377,"title":{},"body":{"classes/FavoriteActor.html":{}}}],["loadbannedvsregistereddata",{"_index":461,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["loadchildren",{"_index":1020,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":1776,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loader/loading",{"_index":1796,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["loader/loading/loading.component",{"_index":948,"title":{},"body":{"modules/AppModule.html":{}}}],["loading",{"_index":1760,"title":{},"body":{"components/LoadingComponent.html":{},"injectables/LoadingService.html":{}}}],["loading'},{'name",{"_index":139,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["loading.component.css",{"_index":1761,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading.component.html",{"_index":1762,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loadingcomponent",{"_index":138,"title":{"components/LoadingComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loadinginterceptor",{"_index":903,"title":{"interceptors/LoadingInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LoadingInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["loadingservice",{"_index":1765,"title":{"injectables/LoadingService.html":{}},"body":{"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"coverage.html":{}}}],["loadingsubject",{"_index":1805,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loadprofiletypes",{"_index":462,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["loaduserrole",{"_index":2273,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["locais",{"_index":1197,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["local",{"_index":1122,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localmente",{"_index":1132,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage",{"_index":350,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/GamificationService.html":{},"injectables/NotificationService.html":{}}}],["localstorage.getitem(environment.userkey",{"_index":399,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/GamificationService.html":{},"injectables/NotificationService.html":{}}}],["localstorage.removeitem(environment.userkey",{"_index":1245,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem(environment.userkey",{"_index":1247,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["lockedmedals",{"_index":1441,"title":{},"body":{"components/GamificationComponent.html":{}}}],["logado",{"_index":574,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["loggedusername",{"_index":2132,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{}}}],["loggeduserprofile",{"_index":2134,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["login",{"_index":1082,"title":{"interfaces/Login.html":{}},"body":{"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/SendEmailComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["login'},{'name",{"_index":141,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["login(model",{"_index":1141,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login.component.css",{"_index":1824,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1823,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":1068,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{}}}],["logincomponent",{"_index":140,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":1828,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginwithexternal",{"_index":1154,"title":{"classes/LoginWithExternal.html":{}},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"coverage.html":{}}}],["loginwithexternal(response.credential",{"_index":1997,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginwiththirdparty",{"_index":1101,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginwiththirdparty(model",{"_index":1153,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logo",{"_index":2974,"title":{},"body":{"components/RegistrationComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["logo_alignment",{"_index":1992,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["logout",{"_index":1102,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"components/NavMenuComponent.html":{}}}],["lote",{"_index":686,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["lt",{"_index":787,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{}}}],["ltima",{"_index":1914,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/ProfileChat.html":{},"components/SeasonDetailsComponent.html":{}}}],["ltimo",{"_index":3184,"title":{},"body":{"components/SearchComponent.html":{}}}],["m.type",{"_index":2383,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["mail",{"_index":2780,"title":{},"body":{"components/PendingVerificationComponent.html":{},"components/SendEmailComponent.html":{}}}],["mails",{"_index":3441,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["main",{"_index":1649,"title":{},"body":{"components/HomeComponent.html":{}}}],["mais",{"_index":77,"title":{},"body":{"components/AboutUsComponent.html":{},"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{}}}],["maiúscula",{"_index":2964,"title":{},"body":{"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["manipular",{"_index":3065,"title":{},"body":{"components/SearchComponent.html":{}}}],["manipulação",{"_index":1853,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["manter",{"_index":3356,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["map",{"_index":703,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["map((response",{"_index":1236,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["map((user",{"_index":1223,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{}}}],["map(media",{"_index":744,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["map(moviearrays",{"_index":748,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["map(profiles",{"_index":2531,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["map(recommendedmovies",{"_index":751,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["map(roles",{"_index":2539,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["marca",{"_index":2731,"title":{},"body":{"injectables/NotificationService.html":{}}}],["marcada",{"_index":2409,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["marcadas",{"_index":2407,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["marcar",{"_index":2689,"title":{},"body":{"injectables/NotificationService.html":{}}}],["marcos",{"_index":63,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["margem",{"_index":1609,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["margens",{"_index":2994,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["margin",{"_index":1607,"title":{},"body":{"components/HomeComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["markallachievementnotificationsasread",{"_index":2697,"title":{},"body":{"injectables/NotificationService.html":{}}}],["markallachievementnotificationsasread(username",{"_index":2729,"title":{},"body":{"injectables/NotificationService.html":{}}}],["markallfollownotificationsasread",{"_index":2698,"title":{},"body":{"injectables/NotificationService.html":{}}}],["markallfollownotificationsasread(username",{"_index":2732,"title":{},"body":{"injectables/NotificationService.html":{}}}],["markallmedianotificationsasread",{"_index":2699,"title":{},"body":{"injectables/NotificationService.html":{}}}],["markallmedianotificationsasread(username",{"_index":2734,"title":{},"body":{"injectables/NotificationService.html":{}}}],["markallmessagenotificationsasread",{"_index":2700,"title":{},"body":{"injectables/NotificationService.html":{}}}],["markallmessagenotificationsasread(username",{"_index":2736,"title":{},"body":{"injectables/NotificationService.html":{}}}],["markallreplynotificationsasread",{"_index":2701,"title":{},"body":{"injectables/NotificationService.html":{}}}],["markallreplynotificationsasread(username",{"_index":2738,"title":{},"body":{"injectables/NotificationService.html":{}}}],["mas",{"_index":3206,"title":{},"body":{"components/SearchComponent.html":{}}}],["matching",{"_index":184,"title":{},"body":{"components/AboutUsComponent.html":{},"classes/AchievementNotificationModel.html":{},"classes/Actor.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"components/BlockedAccountComponent.html":{},"interfaces/ChatWithMessages.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmEmail.html":{},"injectables/DialogService.html":{},"classes/FavoriteActor.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"interfaces/Message.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"interfaces/Register.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"interfaces/ResetPassword.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{},"interfaces/UserRatingMedia.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1354,"title":{},"body":{"injectables/DialogService.html":{}}}],["matdialogmodule",{"_index":961,"title":{},"body":{"modules/AppModule.html":{}}}],["math.floor(math.random",{"_index":2350,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["matriz",{"_index":672,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"interfaces/MovieCategory-2.html":{}}}],["max",{"_index":1634,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["mc.actorid",{"_index":1387,"title":{},"body":{"classes/FavoriteActor.html":{}}}],["mc.actorname",{"_index":1388,"title":{},"body":{"classes/FavoriteActor.html":{}}}],["medal.description",{"_index":1481,"title":{},"body":{"components/GamificationComponent.html":{}}}],["medal.name",{"_index":1480,"title":{},"body":{"components/GamificationComponent.html":{}}}],["medalha",{"_index":203,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"injectables/GamificationService.html":{},"interfaces/MedalsDto.html":{}}}],["medalhas",{"_index":197,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"interfaces/MedalsDto.html":{},"interfaces/MovieCategory-1.html":{}}}],["medalname",{"_index":1489,"title":{},"body":{"injectables/GamificationService.html":{}}}],["medals",{"_index":1472,"title":{},"body":{"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"interfaces/MovieCategory-1.html":{}}}],["medals/${username",{"_index":1506,"title":{},"body":{"injectables/GamificationService.html":{}}}],["medalsdto",{"_index":1461,"title":{"interfaces/MedalsDto.html":{}},"body":{"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"interfaces/MedalsDto.html":{},"coverage.html":{}}}],["media",{"_index":620,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"classes/FavoriteActor.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"components/SeasonDetailsComponent.html":{},"interfaces/UserRatingMedia.html":{}}}],["media.filter(m",{"_index":2400,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["media.first_air_date",{"_index":3245,"title":{},"body":{"components/SearchComponent.html":{}}}],["media.mediaid",{"_index":745,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["media.name",{"_index":3244,"title":{},"body":{"components/SearchComponent.html":{}}}],["media.overview",{"_index":3246,"title":{},"body":{"components/SearchComponent.html":{}}}],["media.release_date",{"_index":3249,"title":{},"body":{"components/SearchComponent.html":{}}}],["media.title",{"_index":3248,"title":{},"body":{"components/SearchComponent.html":{}}}],["media.ts",{"_index":3502,"title":{},"body":{"interfaces/UserMedia.html":{},"coverage.html":{}}}],["media.type",{"_index":743,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["media/api/movie",{"_index":941,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["media/movies/all",{"_index":939,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["media/movies/movie",{"_index":943,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["media/search",{"_index":950,"title":{},"body":{"modules/AppModule.html":{},"components/NavMenuComponent.html":{}}}],["media/search/search.component",{"_index":949,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["media/series/all",{"_index":942,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["media/series/series",{"_index":946,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["media_type",{"_index":1551,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{}}}],["mediacast",{"_index":1374,"title":{},"body":{"classes/FavoriteActor.html":{}}}],["mediacast.map(mc",{"_index":1386,"title":{},"body":{"classes/FavoriteActor.html":{}}}],["mediaid",{"_index":1376,"title":{},"body":{"classes/FavoriteActor.html":{},"classes/MediaNotificationModel.html":{},"classes/ReplyNotificationModel.html":{},"interfaces/UserMedia.html":{}}}],["medianame",{"_index":2096,"title":{},"body":{"classes/MediaNotificationModel.html":{},"injectables/NotificationService.html":{}}}],["medianotificationmodel",{"_index":827,"title":{"classes/MediaNotificationModel.html":{}},"body":{"components/AllSeriesPageComponent.html":{},"classes/MediaNotificationModel.html":{},"interfaces/MovieCategory-3.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["mediaphoto",{"_index":2097,"title":{},"body":{"classes/MediaNotificationModel.html":{},"injectables/NotificationService.html":{}}}],["mediatype",{"_index":2999,"title":{},"body":{"classes/ReplyNotificationModel.html":{}}}],["medium",{"_index":1988,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["membros",{"_index":84,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["memory",{"_index":2237,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["menor",{"_index":2573,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["menores",{"_index":3379,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["menos",{"_index":785,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{}}}],["mensagem",{"_index":1314,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/HomeComponent.html":{},"interfaces/Message.html":{},"interfaces/MovieCategory.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"interfaces/ProfileChat.html":{}}}],["mensagens",{"_index":1151,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ChatWithMessages.html":{},"components/LoginComponent.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{},"interfaces/ProfileChat.html":{}}}],["menu",{"_index":2582,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu'},{'name",{"_index":147,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["menu.component",{"_index":927,"title":{},"body":{"modules/AppModule.html":{}}}],["menu.component.css",{"_index":2586,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.html",{"_index":2585,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts",{"_index":2581,"title":{},"body":{"components/NavMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:102",{"_index":2634,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:118",{"_index":2621,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:129",{"_index":2632,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:139",{"_index":2629,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:148",{"_index":2625,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:169",{"_index":2623,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:22",{"_index":2640,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:23",{"_index":2639,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:24",{"_index":2642,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:25",{"_index":2643,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:26",{"_index":2641,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:27",{"_index":2638,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:28",{"_index":2604,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:30",{"_index":2637,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:36",{"_index":2628,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:46",{"_index":2622,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:65",{"_index":2615,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:87",{"_index":2608,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu/nav",{"_index":926,"title":{},"body":{"modules/AppModule.html":{},"components/NavMenuComponent.html":{},"coverage.html":{}}}],["merge",{"_index":3214,"title":{},"body":{"components/SearchComponent.html":{}}}],["mergemap",{"_index":2120,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["mergemap(profiles",{"_index":2534,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["mescla",{"_index":3215,"title":{},"body":{"components/SearchComponent.html":{}}}],["mesma",{"_index":3205,"title":{},"body":{"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["mesmo",{"_index":3194,"title":{},"body":{"components/SearchComponent.html":{}}}],["message",{"_index":224,"title":{"interfaces/Message.html":{}},"body":{"classes/AchievementNotificationModel.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChatWithMessages.html":{},"classes/FollowNotificationModel.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MediaNotificationModel.html":{},"interfaces/Message.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"interfaces/ProfileChat.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"coverage.html":{}}}],["messageid",{"_index":1557,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/Message.html":{},"interfaces/MovieCategory.html":{}}}],["messagenotificationmodel",{"_index":2112,"title":{"classes/MessageNotificationModel.html":{}},"body":{"classes/MessageNotificationModel.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["messagepopup",{"_index":1294,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["messages",{"_index":1276,"title":{},"body":{"interfaces/ChatWithMessages.html":{},"components/LoginComponent.html":{},"interfaces/ProfileChat.html":{}}}],["messageservice",{"_index":975,"title":{},"body":{"modules/AppModule.html":{}}}],["messagetext",{"_index":1515,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["messagetosent",{"_index":1556,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["meta",{"_index":1518,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"components/SearchComponent.html":{}}}],["metadados",{"_index":1935,"title":{},"body":{"components/LoginComponent.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["methods",{"_index":276,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["microsoft/signalr",{"_index":3617,"title":{},"body":{"dependencies.html":{}}}],["minúscula",{"_index":2963,"title":{},"body":{"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["miscellaneous",{"_index":3692,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mistério",{"_index":837,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["mode",{"_index":3013,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["model",{"_index":244,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"classes/FollowNotificationModel.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory-3.html":{},"injectables/NotificationService.html":{},"components/RegisterWithThirdPartyComponent.html":{},"classes/ReplyNotificationModel.html":{},"components/ResetPasswordComponent.html":{}}}],["model).pipe",{"_index":1235,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["model.ts",{"_index":189,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/FollowNotificationModel.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/NotificationModel.html":{},"classes/ReplyNotificationModel.html":{},"coverage.html":{}}}],["model.ts:12",{"_index":237,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/FollowNotificationModel.html":{},"classes/MessageNotificationModel.html":{}}}],["model.ts:13",{"_index":233,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/FollowNotificationModel.html":{},"classes/MessageNotificationModel.html":{}}}],["model.ts:14",{"_index":2101,"title":{},"body":{"classes/MediaNotificationModel.html":{},"classes/NotificationModel.html":{}}}],["model.ts:15",{"_index":2102,"title":{},"body":{"classes/MediaNotificationModel.html":{},"classes/NotificationModel.html":{}}}],["model.ts:16",{"_index":2103,"title":{},"body":{"classes/MediaNotificationModel.html":{},"classes/NotificationModel.html":{},"classes/ReplyNotificationModel.html":{}}}],["model.ts:17",{"_index":2100,"title":{},"body":{"classes/MediaNotificationModel.html":{},"classes/NotificationModel.html":{},"classes/ReplyNotificationModel.html":{}}}],["model.ts:18",{"_index":2682,"title":{},"body":{"classes/NotificationModel.html":{},"classes/ReplyNotificationModel.html":{}}}],["model.ts:19",{"_index":3002,"title":{},"body":{"classes/ReplyNotificationModel.html":{}}}],["model.ts:20",{"_index":3001,"title":{},"body":{"classes/ReplyNotificationModel.html":{}}}],["modelo",{"_index":191,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"injectables/AuthenticationService.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/NotificationModel.html":{},"classes/Profile.html":{},"classes/ReplyNotificationModel.html":{},"interfaces/UserMedia.html":{}}}],["models/achievement",{"_index":2745,"title":{},"body":{"injectables/NotificationService.html":{}}}],["models/actor.ts",{"_index":250,"title":{},"body":{"classes/Actor.html":{},"coverage.html":{}}}],["models/actor.ts:2",{"_index":255,"title":{},"body":{"classes/Actor.html":{}}}],["models/actor.ts:3",{"_index":253,"title":{},"body":{"classes/Actor.html":{}}}],["models/confirmemail",{"_index":1209,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/PendingVerificationComponent.html":{}}}],["models/fav",{"_index":1371,"title":{},"body":{"classes/FavoriteActor.html":{},"coverage.html":{}}}],["models/follow",{"_index":2743,"title":{},"body":{"injectables/NotificationService.html":{}}}],["models/follower",{"_index":2122,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["models/login",{"_index":1206,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["models/loginwithexternals",{"_index":1211,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{}}}],["models/medalsdto",{"_index":1465,"title":{},"body":{"components/GamificationComponent.html":{},"injectables/GamificationService.html":{}}}],["models/media",{"_index":2747,"title":{},"body":{"injectables/NotificationService.html":{}}}],["models/message",{"_index":2746,"title":{},"body":{"injectables/NotificationService.html":{}}}],["models/notification",{"_index":2742,"title":{},"body":{"injectables/NotificationService.html":{}}}],["models/profile",{"_index":2116,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["models/register",{"_index":1205,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["models/registerwithexternal",{"_index":1212,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RegisterWithThirdPartyComponent.html":{}}}],["models/reply",{"_index":2744,"title":{},"body":{"injectables/NotificationService.html":{}}}],["models/resetpassword",{"_index":1210,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ResetPasswordComponent.html":{}}}],["models/user",{"_index":1207,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["models/userratingmedia.ts",{"_index":3505,"title":{},"body":{"interfaces/UserRatingMedia.html":{},"coverage.html":{}}}],["moderador",{"_index":323,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/MovieCategory-1.html":{},"classes/Profile.html":{}}}],["moderator/${encodeuricomponent(username",{"_index":434,"title":{},"body":{"injectables/AdminService.html":{}}}],["modificado",{"_index":1887,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["modificados",{"_index":1912,"title":{},"body":{"components/LoginComponent.html":{}}}],["modo",{"_index":3456,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["module",{"_index":887,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"overview.html":{}}}],["module.authenticationmodule",{"_index":1022,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules",{"_index":889,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":3683,"title":{},"body":{"index.html":{}}}],["mostrando",{"_index":2849,"title":{},"body":{"interfaces/ProfileChat.html":{}}}],["mostrar",{"_index":784,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/ConfirmDialogComponent.html":{}}}],["mouse",{"_index":1631,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["mouseevent",{"_index":2607,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["movemos",{"_index":3296,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["movie",{"_index":143,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["movie').reverse",{"_index":2401,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["movie.details",{"_index":2386,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["movie.poster_path",{"_index":756,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["movie/:id",{"_index":1023,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["movieapiservicecomponent",{"_index":650,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["moviearrays.flatmap(movies",{"_index":749,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["moviecategory",{"_index":695,"title":{"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"coverage.html":{}}}],["moviedetailscomponent",{"_index":142,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["movieids",{"_index":740,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["moviename",{"_index":3148,"title":{},"body":{"components/SearchComponent.html":{}}}],["movies",{"_index":112,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{}}}],["movies.results",{"_index":750,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["muda",{"_index":3375,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["mudança",{"_index":2566,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"components/SearchComponent.html":{}}}],["mudanças",{"_index":2199,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["multi",{"_index":997,"title":{},"body":{"modules/AppModule.html":{}}}],["multiple",{"_index":2014,"title":{},"body":{"components/LoginComponent.html":{}}}],["music",{"_index":3114,"title":{},"body":{"components/SearchComponent.html":{}}}],["mystery",{"_index":3116,"title":{},"body":{"components/SearchComponent.html":{}}}],["máximo",{"_index":42,"title":{},"body":{"components/AboutUsComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["método",{"_index":655,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDialogComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/SearchComponent.html":{}}}],["métodos",{"_index":1459,"title":{},"body":{"components/GamificationComponent.html":{}}}],["mídia",{"_index":2094,"title":{},"body":{"classes/MediaNotificationModel.html":{},"interfaces/MovieCategory-1.html":{},"injectables/NotificationService.html":{},"classes/ReplyNotificationModel.html":{},"interfaces/UserMedia.html":{}}}],["mídias",{"_index":2371,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["na",{"_index":803,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"components/RegistrationComponent.html":{},"components/SearchComponent.html":{}}}],["name",{"_index":104,"title":{},"body":{"components/AboutUsComponent.html":{},"classes/AchievementNotificationModel.html":{},"classes/Actor.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"classes/FavoriteActor.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"classes/User.html":{},"index.html":{}}}],["nao",{"_index":3239,"title":{},"body":{"components/SearchComponent.html":{}}}],["nas",{"_index":340,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GamificationService.html":{},"interfaces/MovieCategory-1.html":{},"injectables/NotificationService.html":{},"classes/User.html":{}}}],["nascimento",{"_index":2813,"title":{},"body":{"classes/Profile.html":{}}}],["nav",{"_index":146,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["navega",{"_index":684,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"components/NavMenuComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/SearchComponent.html":{}}}],["navegador",{"_index":351,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GamificationService.html":{}}}],["navegação",{"_index":474,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["navigate",{"_index":3648,"title":{},"body":{"index.html":{}}}],["navigatebasedonrole",{"_index":2596,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["navigatebasedonrole(username",{"_index":2624,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["navigation",{"_index":3384,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["navigationstart",{"_index":3482,"title":{},"body":{"components/SuspendedAccountComponent.html":{}}}],["navmenucomponent",{"_index":145,"title":{"components/NavMenuComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ndice",{"_index":664,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["necessidade",{"_index":2869,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["necessárias",{"_index":2050,"title":{},"body":{"classes/LoginWithExternal.html":{},"interfaces/MovieCategory-1.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["necessário",{"_index":1194,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory-1.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["necessários",{"_index":518,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/ConfirmEmail.html":{},"components/HomeComponent.html":{},"interfaces/Login.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/Register.html":{},"interfaces/ResetPassword.html":{}}}],["need",{"_index":3676,"title":{},"body":{"index.html":{}}}],["negativas",{"_index":2995,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["nenhum",{"_index":1129,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["nenhuma",{"_index":2020,"title":{},"body":{"components/LoginComponent.html":{}}}],["new",{"_index":407,"title":{},"body":{"injectables/AdminService.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AuthenticationButtonComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/GamificationService.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SendEmailComponent.html":{},"coverage.html":{},"index.html":{}}}],["newconfirmbox",{"_index":1329,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["newconfirmbox.openconfirmbox$().subscribe(resp",{"_index":1343,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["newconfirmbox.setbuttonlabels(this.confirmationtextbutton",{"_index":1341,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["newconfirmbox.setconfig",{"_index":1332,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["newconfirmbox.setmessage(this.messagepopup",{"_index":1331,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["newconfirmbox.settitle(this.titlepopup",{"_index":1330,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["newindex",{"_index":778,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["newmedia",{"_index":854,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["newpage",{"_index":3231,"title":{},"body":{"components/SearchComponent.html":{}}}],["newpassword",{"_index":3006,"title":{},"body":{"interfaces/ResetPassword.html":{},"components/ResetPasswordComponent.html":{}}}],["news",{"_index":3133,"title":{},"body":{"components/SearchComponent.html":{}}}],["newtype",{"_index":3072,"title":{},"body":{"components/SearchComponent.html":{}}}],["next",{"_index":554,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{}}}],["next.handle(req",{"_index":1758,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":1798,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["nextcategory",{"_index":645,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{}}}],["nextcategory(categoryname",{"_index":682,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["nextpage",{"_index":2571,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"components/SearchComponent.html":{}}}],["ng",{"_index":3398,"title":{},"body":{"components/SeasonDetailsComponent.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":1837,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["ngmodule",{"_index":910,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{}}}],["ngondestroy",{"_index":2239,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["ngoninit",{"_index":463,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{}}}],["ngxawesomepopupmodule",{"_index":968,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxawesomepopupmodule.forroot",{"_index":979,"title":{},"body":{"modules/AppModule.html":{}}}],["ngzone",{"_index":1842,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{}}}],["nico",{"_index":2060,"title":{},"body":{"classes/LoginWithExternal.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"interfaces/Message.html":{},"classes/Profile.html":{},"classes/RegisterWithExternal.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{}}}],["nome",{"_index":304,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChatWithMessages.html":{},"classes/FollowerProfile.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"interfaces/Message.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{},"classes/User.html":{}}}],["nomenclatura",{"_index":2957,"title":{},"body":{"components/RegistrationComponent.html":{},"components/SendEmailComponent.html":{}}}],["nomes",{"_index":816,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-3.html":{}}}],["none",{"_index":1615,"title":{},"body":{"components/HomeComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["normal",{"_index":2888,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["nos",{"_index":79,"title":{},"body":{"components/AboutUsComponent.html":{},"components/FooterComponent.html":{},"interfaces/MedalsDto.html":{}}}],["nossa",{"_index":73,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["notifica",{"_index":798,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/NotificationService.html":{}}}],["notification",{"_index":188,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"components/AllSeriesPageComponent.html":{},"classes/FollowNotificationModel.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory-3.html":{},"injectables/NotificationService.html":{},"classes/ReplyNotificationModel.html":{},"coverage.html":{}}}],["notification.createdat",{"_index":2762,"title":{},"body":{"injectables/NotificationService.html":{}}}],["notification.eventtype",{"_index":2764,"title":{},"body":{"injectables/NotificationService.html":{}}}],["notification.isread",{"_index":2763,"title":{},"body":{"injectables/NotificationService.html":{}}}],["notification.medianame",{"_index":2765,"title":{},"body":{"injectables/NotificationService.html":{}}}],["notification.mediaphoto",{"_index":2766,"title":{},"body":{"injectables/NotificationService.html":{}}}],["notification.message",{"_index":2761,"title":{},"body":{"injectables/NotificationService.html":{}}}],["notification.triggeredbyuserid",{"_index":2760,"title":{},"body":{"injectables/NotificationService.html":{}}}],["notification.usermediaid",{"_index":2767,"title":{},"body":{"injectables/NotificationService.html":{}}}],["notificationmodel",{"_index":218,"title":{"classes/NotificationModel.html":{}},"body":{"classes/AchievementNotificationModel.html":{},"classes/FollowNotificationModel.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"classes/ReplyNotificationModel.html":{},"coverage.html":{}}}],["notificationmodel:14",{"_index":243,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/FollowNotificationModel.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/ReplyNotificationModel.html":{}}}],["notificationmodel:15",{"_index":242,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/FollowNotificationModel.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/ReplyNotificationModel.html":{}}}],["notificationmodel:16",{"_index":239,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/FollowNotificationModel.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/ReplyNotificationModel.html":{}}}],["notificationmodel:17",{"_index":241,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/FollowNotificationModel.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/ReplyNotificationModel.html":{}}}],["notificationmodel:18",{"_index":240,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/FollowNotificationModel.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/ReplyNotificationModel.html":{}}}],["notifications'},{'name",{"_index":149,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["notifications/:username",{"_index":1025,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["notifications/models/media",{"_index":828,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["notifications/notifications/notifications.component",{"_index":958,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["notifications/services/notification.service",{"_index":826,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{}}}],["notificationscomponent",{"_index":148,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationservice",{"_index":792,"title":{"injectables/NotificationService.html":{}},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["notificação",{"_index":200,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/FollowNotificationModel.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"classes/ReplyNotificationModel.html":{}}}],["notificações",{"_index":193,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"components/AllSeriesPageComponent.html":{},"classes/FollowNotificationModel.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"classes/ReplyNotificationModel.html":{}}}],["notifynewepisode",{"_index":2702,"title":{},"body":{"injectables/NotificationService.html":{}}}],["notifynewepisode(notification",{"_index":2740,"title":{},"body":{"injectables/NotificationService.html":{}}}],["notável",{"_index":54,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["nova",{"_index":1323,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/NotificationService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{}}}],["novamente",{"_index":381,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["novas",{"_index":2709,"title":{},"body":{"injectables/NotificationService.html":{}}}],["novo",{"_index":851,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/MovieCategory-3.html":{},"injectables/NotificationService.html":{},"interfaces/Register.html":{},"components/SearchComponent.html":{}}}],["novos",{"_index":799,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"classes/FollowNotificationModel.html":{},"classes/MediaNotificationModel.html":{},"interfaces/MovieCategory-3.html":{},"injectables/NotificationService.html":{},"components/RegistrationComponent.html":{},"components/SearchComponent.html":{}}}],["now",{"_index":2488,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["nula",{"_index":2815,"title":{},"body":{"classes/Profile.html":{}}}],["null",{"_index":1124,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{}}}],["nulo",{"_index":2817,"title":{},"body":{"classes/Profile.html":{}}}],["number",{"_index":231,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/Actor.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"classes/FavoriteActor.html":{},"components/HomeComponent.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"classes/Profile.html":{},"classes/ReplyNotificationModel.html":{},"components/SearchComponent.html":{},"interfaces/UserMedia.html":{},"interfaces/UserRatingMedia.html":{}}}],["nuno",{"_index":94,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["não",{"_index":355,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"injectables/DialogService.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{}}}],["nós",{"_index":25,"title":{},"body":{"components/AboutUsComponent.html":{},"components/FooterComponent.html":{}}}],["número",{"_index":360,"title":{},"body":{"injectables/AdminService.html":{},"classes/Profile.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["o",{"_index":41,"title":{},"body":{"components/AboutUsComponent.html":{},"classes/AchievementNotificationModel.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmEmail.html":{},"injectables/DialogService.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"classes/User.html":{}}}],["o(s",{"_index":1136,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["object",{"_index":1656,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["objeto",{"_index":343,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GamificationService.html":{},"classes/LoginWithExternal.html":{},"injectables/NotificationService.html":{},"classes/RegisterWithExternal.html":{}}}],["obrigatória",{"_index":2040,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["obrigatório",{"_index":2035,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/SendEmailComponent.html":{}}}],["observable",{"_index":308,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"injectables/GamificationService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/NotificationService.html":{}}}],["observadores",{"_index":1198,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["obtem",{"_index":550,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["obtenção",{"_index":196,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"injectables/GamificationService.html":{},"injectables/NotificationService.html":{}}}],["obter",{"_index":1450,"title":{},"body":{"components/GamificationComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["obtida",{"_index":216,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"interfaces/MovieCategory-1.html":{}}}],["obtidas",{"_index":2375,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["obtido",{"_index":2248,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["obtém",{"_index":359,"title":{},"body":{"injectables/AdminService.html":{},"components/AllMoviesPageComponent.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"injectables/NotificationService.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["occurred",{"_index":2313,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["ocorreu",{"_index":1545,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["ocupa",{"_index":3363,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["of(undefined",{"_index":1219,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["oferecendo",{"_index":2583,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["ofereçam",{"_index":40,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["offset",{"_index":3310,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["offsetwithmargin",{"_index":3312,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["ol",{"_index":1572,"title":{},"body":{"components/HomeComponent.html":{}}}],["onclick",{"_index":1043,"title":{},"body":{"components/AuthenticationButtonComponent.html":{}}}],["onconfirm",{"_index":1290,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["onde",{"_index":2776,"title":{},"body":{"components/PendingVerificationComponent.html":{}}}],["one",{"_index":1874,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"dependencies.html":{}}}],["oninit",{"_index":866,"title":{},"body":{"components/AppComponent.html":{},"components/GamificationComponent.html":{},"components/LoadingComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{}}}],["onkeyup",{"_index":2597,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["onsearch",{"_index":3054,"title":{},"body":{"components/SearchComponent.html":{}}}],["onsubmit",{"_index":2598,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["opacity",{"_index":1714,"title":{},"body":{"components/HomeComponent.html":{}}}],["opacity:0.8",{"_index":3409,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["opaco",{"_index":1731,"title":{},"body":{"components/HomeComponent.html":{}}}],["opcional",{"_index":489,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["openconfirmdialog",{"_index":1355,"title":{},"body":{"injectables/DialogService.html":{}}}],["operação",{"_index":311,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/NotificationService.html":{},"interfaces/ResetPassword.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["operações",{"_index":266,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/GamificationService.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{}}}],["optional",{"_index":236,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/Actor.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"injectables/DialogService.html":{},"classes/FavoriteActor.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"classes/User.html":{}}}],["options3d",{"_index":588,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["opções",{"_index":505,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/RegistrationComponent.html":{}}}],["ordenação",{"_index":2569,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["original",{"_index":2343,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"components/SearchComponent.html":{}}}],["originalmente",{"_index":1889,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["originalsearchresult",{"_index":3047,"title":{},"body":{"components/SearchComponent.html":{}}}],["os",{"_index":49,"title":{},"body":{"components/AboutUsComponent.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/ConfirmEmail.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"interfaces/Register.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"interfaces/ResetPassword.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"dependencies.html":{}}}],["ou",{"_index":213,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDialogComponent.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"injectables/NotificationService.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{},"interfaces/UserMedia.html":{}}}],["out",{"_index":905,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":2981,"title":{},"body":{"components/RegistrationComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["output",{"_index":1057,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/ConfirmDialogComponent.html":{}}}],["outputs",{"_index":1048,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/ConfirmDialogComponent.html":{}}}],["outros",{"_index":2364,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["overflow",{"_index":1666,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["overlay",{"_index":1771,"title":{},"body":{"components/LoadingComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["overview",{"_index":3685,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":1663,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["package",{"_index":3604,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":1580,"title":{},"body":{"components/HomeComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["padrão",{"_index":1302,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["padrões",{"_index":50,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["page",{"_index":635,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":113,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["page.component",{"_index":940,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.css",{"_index":637,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["page.component.html",{"_index":636,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["page.component.ts",{"_index":634,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"coverage.html":{}}}],["page.component.ts:104",{"_index":815,"title":{},"body":{"components/AllSeriesPageComponent.html":{}}}],["page.component.ts:121",{"_index":801,"title":{},"body":{"components/AllSeriesPageComponent.html":{}}}],["page.component.ts:139",{"_index":670,"title":{},"body":{"components/AllMoviesPageComponent.html":{}}}],["page.component.ts:144",{"_index":811,"title":{},"body":{"components/AllSeriesPageComponent.html":{}}}],["page.component.ts:150",{"_index":663,"title":{},"body":{"components/AllMoviesPageComponent.html":{}}}],["page.component.ts:154",{"_index":809,"title":{},"body":{"components/AllSeriesPageComponent.html":{}}}],["page.component.ts:160",{"_index":683,"title":{},"body":{"components/AllMoviesPageComponent.html":{}}}],["page.component.ts:164",{"_index":818,"title":{},"body":{"components/AllSeriesPageComponent.html":{}}}],["page.component.ts:174",{"_index":689,"title":{},"body":{"components/AllMoviesPageComponent.html":{}}}],["page.component.ts:178",{"_index":822,"title":{},"body":{"components/AllSeriesPageComponent.html":{}}}],["page.component.ts:187",{"_index":692,"title":{},"body":{"components/AllMoviesPageComponent.html":{}}}],["page.component.ts:192",{"_index":824,"title":{},"body":{"components/AllSeriesPageComponent.html":{}}}],["page.component.ts:200",{"_index":675,"title":{},"body":{"components/AllMoviesPageComponent.html":{}}}],["page.component.ts:205",{"_index":813,"title":{},"body":{"components/AllSeriesPageComponent.html":{}}}],["page.component.ts:216",{"_index":794,"title":{},"body":{"components/AllSeriesPageComponent.html":{}}}],["page.component.ts:27",{"_index":696,"title":{},"body":{"components/AllMoviesPageComponent.html":{}}}],["page.component.ts:28",{"_index":652,"title":{},"body":{"components/AllMoviesPageComponent.html":{}}}],["page.component.ts:29",{"_index":825,"title":{},"body":{"components/AllSeriesPageComponent.html":{}}}],["page.component.ts:30",{"_index":793,"title":{},"body":{"components/AllSeriesPageComponent.html":{}}}],["page.component.ts:46",{"_index":687,"title":{},"body":{"components/AllMoviesPageComponent.html":{}}}],["page.component.ts:50",{"_index":820,"title":{},"body":{"components/AllSeriesPageComponent.html":{}}}],["page.component.ts:53",{"_index":679,"title":{},"body":{"components/AllMoviesPageComponent.html":{}}}],["page.component.ts:60",{"_index":805,"title":{},"body":{"components/AllSeriesPageComponent.html":{}}}],["page.component.ts:69",{"_index":654,"title":{},"body":{"components/AllMoviesPageComponent.html":{}}}],["page.component.ts:91",{"_index":659,"title":{},"body":{"components/AllMoviesPageComponent.html":{}}}],["page/all",{"_index":633,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"coverage.html":{}}}],["pagesize",{"_index":2189,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["pagina",{"_index":3241,"title":{},"body":{"components/SearchComponent.html":{}}}],["paginada",{"_index":2563,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["paginação",{"_index":2552,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["palavra",{"_index":2038,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["papel",{"_index":322,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{}}}],["papel(is",{"_index":1137,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["papéis",{"_index":271,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{}}}],["para",{"_index":192,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChatWithMessages.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmEmail.html":{},"injectables/DialogService.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"interfaces/Message.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"interfaces/Register.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"interfaces/ResetPassword.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SendEmailComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{}}}],["paralelo",{"_index":577,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["param",{"_index":412,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DialogService.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"classes/User.html":{}}}],["parameter",{"_index":420,"title":{},"body":{"injectables/AdminService.html":{}}}],["parameters",{"_index":234,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/Actor.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"injectables/DialogService.html":{},"classes/FavoriteActor.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"classes/User.html":{}}}],["params",{"_index":1939,"title":{},"body":{"components/LoginComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["params.get('access_token",{"_index":2904,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["params.get('email",{"_index":2798,"title":{},"body":{"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["params.get('returnurl",{"_index":1941,"title":{},"body":{"components/LoginComponent.html":{}}}],["params.get('token",{"_index":2797,"title":{},"body":{"components/PendingVerificationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["params.get('userid",{"_index":2905,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["params['genre",{"_index":3180,"title":{},"body":{"components/SearchComponent.html":{}}}],["params['title",{"_index":3181,"title":{},"body":{"components/SearchComponent.html":{}}}],["params['type",{"_index":3182,"title":{},"body":{"components/SearchComponent.html":{}}}],["params['username",{"_index":1467,"title":{},"body":{"components/GamificationComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["parasite",{"_index":3242,"title":{},"body":{"components/SearchComponent.html":{}}}],["parseint(genreid",{"_index":3190,"title":{},"body":{"components/SearchComponent.html":{}}}],["parseint(params['page",{"_index":3186,"title":{},"body":{"components/SearchComponent.html":{}}}],["partes",{"_index":2627,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["partir",{"_index":1121,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/GamificationComponent.html":{},"components/SendEmailComponent.html":{}}}],["party",{"_index":1244,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RegisterWithThirdPartyComponent.html":{}}}],["party'},{'name",{"_index":157,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["party.component",{"_index":1080,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{}}}],["party.component.css",{"_index":2873,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["party.component.html",{"_index":2872,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["party.component.ts",{"_index":2865,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{},"coverage.html":{}}}],["party.component.ts:119",{"_index":2881,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["party.component.ts:126",{"_index":2890,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["party.component.ts:134",{"_index":2886,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["party.component.ts:22",{"_index":2898,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["party.component.ts:24",{"_index":2899,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["party.component.ts:25",{"_index":2897,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["party.component.ts:26",{"_index":2894,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["party.component.ts:27",{"_index":2900,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["party.component.ts:28",{"_index":2895,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["party.component.ts:30",{"_index":2896,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["party.component.ts:31",{"_index":2878,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["party.component.ts:51",{"_index":2882,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["party.component.ts:81",{"_index":2880,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["party.component.ts:91",{"_index":2883,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["party/:provider",{"_index":1087,"title":{},"body":{"modules/AuthenticationRoutingModule.html":{}}}],["party/google?access_token=${response.credential}&userid=${decodedtoken.sub}&email=${decodedtoken.email",{"_index":2023,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["party/register",{"_index":1079,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/RegisterWithThirdPartyComponent.html":{},"coverage.html":{}}}],["parâmetros",{"_index":1457,"title":{},"body":{"components/GamificationComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{}}}],["passa",{"_index":3178,"title":{},"body":{"components/SearchComponent.html":{}}}],["passar",{"_index":546,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"components/SeasonDetailsComponent.html":{}}}],["passe",{"_index":2039,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["password",{"_index":1085,"title":{},"body":{"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["password'},{'name",{"_index":162,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["password.component",{"_index":1078,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{}}}],["password.component.css",{"_index":3012,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.html",{"_index":3011,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":3008,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:108",{"_index":3021,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:115",{"_index":3018,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:21",{"_index":3026,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:22",{"_index":3028,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:23",{"_index":3025,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:24",{"_index":3024,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":3029,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:26",{"_index":3027,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:27",{"_index":3030,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:28",{"_index":3017,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:47",{"_index":3022,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:72",{"_index":3020,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:81",{"_index":3023,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/${email",{"_index":1232,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["password/reset",{"_index":1077,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwordform",{"_index":3014,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordvalue",{"_index":3015,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["path",{"_index":1009,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthenticationRoutingModule.html":{}}}],["pathmatch",{"_index":1012,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pedido",{"_index":1755,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"interfaces/MovieCategory-1.html":{}}}],["pela",{"_index":264,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GamificationService.html":{},"components/LoginComponent.html":{}}}],["pelo",{"_index":87,"title":{},"body":{"components/AboutUsComponent.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"components/GamificationComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/Message.html":{},"interfaces/MovieCategory-1.html":{},"classes/Profile.html":{},"classes/RegisterWithExternal.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{}}}],["pelos",{"_index":1483,"title":{},"body":{"injectables/GamificationService.html":{}}}],["pendente",{"_index":2775,"title":{},"body":{"components/PendingVerificationComponent.html":{}}}],["pendentes",{"_index":2584,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["pending",{"_index":151,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["pendingfollowrequests",{"_index":2589,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["pendingverificationcomponent",{"_index":150,"title":{"components/PendingVerificationComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["perfil",{"_index":510,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/ChatWithMessages.html":{},"classes/FollowerProfile.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"interfaces/UserMedia.html":{}}}],["perfis",{"_index":367,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["permanente",{"_index":2502,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["permanentemente",{"_index":299,"title":{},"body":{"injectables/AdminService.html":{},"interfaces/MovieCategory-1.html":{}}}],["permanently",{"_index":2506,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["permanently/${encodeuricomponent(username",{"_index":415,"title":{},"body":{"injectables/AdminService.html":{}}}],["permissão",{"_index":2246,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["permite",{"_index":1429,"title":{},"body":{"components/GamificationComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/RegisterWithThirdPartyComponent.html":{}}}],["permitindo",{"_index":379,"title":{},"body":{"injectables/AdminService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/MedalsDto.html":{},"interfaces/MovieCategory-1.html":{}}}],["pertencentes",{"_index":1278,"title":{},"body":{"interfaces/ChatWithMessages.html":{}}}],["pesquisa",{"_index":2549,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{}}}],["pesquisar",{"_index":3238,"title":{},"body":{"components/SearchComponent.html":{}}}],["pesquisas",{"_index":3159,"title":{},"body":{"components/SearchComponent.html":{}}}],["pessoais",{"_index":2810,"title":{},"body":{"classes/Profile.html":{}}}],["photo",{"_index":2289,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["pie",{"_index":587,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["pipe",{"_index":1222,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["pipe(takeuntil(this.unsubscribed",{"_index":2304,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{}}}],["pizza",{"_index":512,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["plataforma",{"_index":1436,"title":{},"body":{"components/GamificationComponent.html":{},"classes/Profile.html":{}}}],["platform",{"_index":3673,"title":{},"body":{"index.html":{}}}],["plotoptions",{"_index":595,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["pode",{"_index":2086,"title":{},"body":{"interfaces/MedalsDto.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["podem",{"_index":1431,"title":{},"body":{"components/GamificationComponent.html":{}}}],["podendo",{"_index":2822,"title":{},"body":{"classes/Profile.html":{}}}],["podermos",{"_index":3475,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["pointer",{"_index":1618,"title":{},"body":{"components/HomeComponent.html":{},"components/RegistrationComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["politics",{"_index":3144,"title":{},"body":{"components/SearchComponent.html":{}}}],["popular",{"_index":2231,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["popup",{"_index":972,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/MovieCategory-1.html":{},"dependencies.html":{}}}],["por",{"_index":70,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DialogService.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/ReplyNotificationModel.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{}}}],["position",{"_index":1694,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["possui",{"_index":2043,"title":{},"body":{"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"classes/Profile.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{}}}],["poster",{"_index":1688,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["pouco",{"_index":1629,"title":{},"body":{"components/HomeComponent.html":{}}}],["precisamos",{"_index":3299,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["preenche",{"_index":2297,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["preencher",{"_index":1525,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{}}}],["preenchidos",{"_index":1538,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["prepara",{"_index":1900,"title":{},"body":{"components/LoginComponent.html":{}}}],["presente",{"_index":357,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GamificationService.html":{}}}],["pretende",{"_index":1310,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["prev",{"_index":1709,"title":{},"body":{"components/HomeComponent.html":{}}}],["prevcategory",{"_index":646,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{}}}],["prevcategory(categoryname",{"_index":688,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["previamente",{"_index":2405,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["previous",{"_index":1575,"title":{},"body":{"components/HomeComponent.html":{}}}],["previouspage",{"_index":2567,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"components/SearchComponent.html":{}}}],["primary",{"_index":3366,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["primary:hover",{"_index":3373,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["primeira",{"_index":3165,"title":{},"body":{"components/SearchComponent.html":{}}}],["primeiro",{"_index":59,"title":{},"body":{"components/AboutUsComponent.html":{},"components/PendingVerificationComponent.html":{}}}],["primeng",{"_index":3628,"title":{},"body":{"dependencies.html":{}}}],["primeng/api",{"_index":976,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/toast",{"_index":974,"title":{},"body":{"modules/AppModule.html":{}}}],["principal",{"_index":3344,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["privado",{"_index":618,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"classes/Profile.html":{}}}],["privados",{"_index":368,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{}}}],["private",{"_index":396,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{}}}],["privilégios",{"_index":2828,"title":{},"body":{"classes/Profile.html":{}}}],["procedendo",{"_index":2791,"title":{},"body":{"components/PendingVerificationComponent.html":{}}}],["process",{"_index":2015,"title":{},"body":{"components/LoginComponent.html":{}}}],["processa",{"_index":1166,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{}}}],["processo",{"_index":1883,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{}}}],["processsearchresults",{"_index":3055,"title":{},"body":{"components/SearchComponent.html":{}}}],["processsearchresults(result",{"_index":3082,"title":{},"body":{"components/SearchComponent.html":{}}}],["procuramos",{"_index":26,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["procurar",{"_index":3236,"title":{},"body":{"components/SearchComponent.html":{}}}],["production",{"_index":3696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["produto",{"_index":2572,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["produção",{"_index":835,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["profile",{"_index":391,"title":{"classes/Profile.html":{}},"body":{"injectables/AdminService.html":{},"modules/AppRoutingModule.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"classes/Profile.html":{},"coverage.html":{}}}],["profile'},{'name",{"_index":131,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["profile.component",{"_index":936,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile.component.css",{"_index":2131,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["profile.component.html",{"_index":2130,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["profile.component.ts",{"_index":3587,"title":{},"body":{"coverage.html":{}}}],["profile.endbandate",{"_index":2487,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["profile.startbandate",{"_index":2486,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["profile.ts",{"_index":1400,"title":{},"body":{"classes/FollowerProfile.html":{},"coverage.html":{}}}],["profile.ts:10",{"_index":1408,"title":{},"body":{"classes/FollowerProfile.html":{}}}],["profile.ts:11",{"_index":1407,"title":{},"body":{"classes/FollowerProfile.html":{}}}],["profile.username",{"_index":2533,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["profile/:username",{"_index":1018,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["profile/edit",{"_index":935,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["profile/models/follower",{"_index":2644,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["profile/models/profile",{"_index":392,"title":{},"body":{"injectables/AdminService.html":{}}}],["profile/models/user",{"_index":3507,"title":{},"body":{"interfaces/UserRatingMedia.html":{}}}],["profile/profile/profile.component",{"_index":931,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile/services/profile.service",{"_index":700,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{}}}],["profilechat",{"_index":2124,"title":{"interfaces/ProfileChat.html":{}},"body":{"interfaces/MovieCategory-1.html":{},"interfaces/ProfileChat.html":{},"coverage.html":{}}}],["profilecomponent",{"_index":153,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["profileform",{"_index":2136,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["profilephoto",{"_index":1277,"title":{},"body":{"interfaces/ChatWithMessages.html":{},"classes/FollowerProfile.html":{},"interfaces/MovieCategory-1.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{}}}],["profilephotoelement",{"_index":2290,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["profilephotoelement.src",{"_index":2295,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["profiles",{"_index":439,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{}}}],["profiles.filter(profile",{"_index":2532,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["profiles.length",{"_index":2220,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["profileservice",{"_index":651,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"coverage.html":{}}}],["profilestatus",{"_index":2821,"title":{},"body":{"classes/Profile.html":{}}}],["profileswithroles",{"_index":2536,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["proibidos",{"_index":362,"title":{},"body":{"injectables/AdminService.html":{}}}],["proibição",{"_index":312,"title":{},"body":{"injectables/AdminService.html":{}}}],["project",{"_index":3639,"title":{},"body":{"index.html":{}}}],["promessa",{"_index":2250,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["promise",{"_index":2249,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["promise((resolve",{"_index":2254,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["properties",{"_index":220,"title":{"properties.html":{}},"body":{"classes/AchievementNotificationModel.html":{},"classes/Actor.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChatWithMessages.html":{},"interfaces/ConfirmEmail.html":{},"classes/FavoriteActor.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"interfaces/Message.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"interfaces/Register.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"interfaces/ResetPassword.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{},"interfaces/UserRatingMedia.html":{},"properties.html":{}}}],["proporcionar",{"_index":27,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["proporção",{"_index":3362,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["propriedade",{"_index":2271,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["propriedades",{"_index":207,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"components/ConfirmDialogComponent.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"classes/Profile.html":{},"classes/ReplyNotificationModel.html":{},"interfaces/UserMedia.html":{}}}],["proprietário",{"_index":2853,"title":{},"body":{"interfaces/ProfileChat.html":{}}}],["provedor",{"_index":1156,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginWithExternal.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{}}}],["provedores",{"_index":2052,"title":{},"body":{"classes/LoginWithExternal.html":{},"classes/RegisterWithExternal.html":{}}}],["provide",{"_index":995,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":393,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"injectables/DialogService.html":{},"injectables/GamificationService.html":{},"injectables/LoadingService.html":{},"injectables/NotificationService.html":{}}}],["provider",{"_index":2054,"title":{},"body":{"classes/LoginWithExternal.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{}}}],["providers",{"_index":893,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"overview.html":{}}}],["proíbe",{"_index":298,"title":{},"body":{"injectables/AdminService.html":{}}}],["próxima",{"_index":1532,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"components/SearchComponent.html":{}}}],["próximo",{"_index":685,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["próximos",{"_index":80,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["public",{"_index":440,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"classes/User.html":{}}}],["publico",{"_index":619,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["página",{"_index":560,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{}}}],["páginas",{"_index":476,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/SearchComponent.html":{}}}],["público",{"_index":2823,"title":{},"body":{"classes/Profile.html":{}}}],["público/privado",{"_index":511,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["públicos",{"_index":370,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{}}}],["qual",{"_index":1492,"title":{},"body":{"injectables/GamificationService.html":{},"interfaces/MovieCategory-1.html":{}}}],["quando",{"_index":657,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"components/NavMenuComponent.html":{},"components/SearchComponent.html":{}}}],["quantidade",{"_index":599,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["que",{"_index":39,"title":{},"body":{"components/AboutUsComponent.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"classes/FollowNotificationModel.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MedalsDto.html":{},"interfaces/Message.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SendEmailComponent.html":{},"classes/User.html":{}}}],["query",{"_index":419,"title":{},"body":{"injectables/AdminService.html":{}}}],["queryparams",{"_index":1263,"title":{},"body":{"injectables/AuthorizationGuard.html":{},"components/NavMenuComponent.html":{},"components/SearchComponent.html":{}}}],["queryparamshandling",{"_index":3213,"title":{},"body":{"components/SearchComponent.html":{}}}],["radius",{"_index":1589,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["rating",{"_index":3506,"title":{},"body":{"interfaces/UserRatingMedia.html":{}}}],["reactiveformsmodule",{"_index":929,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{}}}],["read/${username",{"_index":2753,"title":{},"body":{"injectables/NotificationService.html":{}}}],["readable",{"_index":2009,"title":{},"body":{"components/LoginComponent.html":{}}}],["readat",{"_index":1560,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/Message.html":{},"interfaces/MovieCategory.html":{}}}],["real",{"_index":1867,"title":{},"body":{"components/LoginComponent.html":{}}}],["reality",{"_index":3135,"title":{},"body":{"components/SearchComponent.html":{}}}],["realiza",{"_index":1143,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"components/NavMenuComponent.html":{}}}],["realizar",{"_index":2787,"title":{},"body":{"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"interfaces/ResetPassword.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{}}}],["reativos",{"_index":1850,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{}}}],["receber",{"_index":1865,"title":{},"body":{"components/LoginComponent.html":{}}}],["recebida",{"_index":2852,"title":{},"body":{"interfaces/ProfileChat.html":{}}}],["recebido",{"_index":2930,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["recebidos",{"_index":1165,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/RegisterWithExternal.html":{}}}],["recolha",{"_index":272,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GamificationService.html":{}}}],["recomendadas",{"_index":806,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["recomendados",{"_index":660,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"interfaces/MovieCategory-2.html":{}}}],["recommendedcategoryindex",{"_index":762,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["recommendedmovies",{"_index":755,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["rectangular",{"_index":1990,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["recupera",{"_index":349,"title":{},"body":{"injectables/AdminService.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-3.html":{},"injectables/NotificationService.html":{}}}],["recuperado",{"_index":1134,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["recuperar",{"_index":1460,"title":{},"body":{"components/GamificationComponent.html":{}}}],["recuperação",{"_index":3442,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["recurso",{"_index":3185,"title":{},"body":{"components/SearchComponent.html":{}}}],["recursos",{"_index":38,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["red",{"_index":2992,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["redefinir",{"_index":1116,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ResetPasswordComponent.html":{}}}],["redefinição",{"_index":1094,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ResetPassword.html":{},"components/ResetPasswordComponent.html":{}}}],["redireciona",{"_index":559,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["redirect",{"_index":2672,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["redirectto",{"_index":1010,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirecttologin",{"_index":3478,"title":{},"body":{"components/SuspendedAccountComponent.html":{}}}],["redor",{"_index":1610,"title":{},"body":{"components/HomeComponent.html":{}}}],["reenvia",{"_index":1188,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["reenviar",{"_index":3476,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["reenvio",{"_index":1191,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/PendingVerificationComponent.html":{}}}],["reference",{"_index":3686,"title":{},"body":{"index.html":{}}}],["referenciar",{"_index":2077,"title":{},"body":{"interfaces/MedalsDto.html":{}}}],["referência",{"_index":2892,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/SendEmailComponent.html":{}}}],["refletido",{"_index":3211,"title":{},"body":{"components/SearchComponent.html":{}}}],["refletir",{"_index":2550,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["refreshuser",{"_index":869,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{}}}],["refreshuser(jwt",{"_index":1174,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registados",{"_index":372,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{}}}],["registe",{"_index":2044,"title":{},"body":{"components/LoginComponent.html":{}}}],["register",{"_index":155,"title":{"interfaces/Register.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"interfaces/Register.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{}}}],["register(model",{"_index":1177,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["register/third",{"_index":1086,"title":{},"body":{"modules/AuthenticationRoutingModule.html":{}}}],["registerback",{"_index":2876,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["registered",{"_index":436,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{}}}],["registerform",{"_index":2875,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["registerwithexternal",{"_index":1181,"title":{"classes/RegisterWithExternal.html":{}},"body":{"injectables/AuthenticationService.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"coverage.html":{}}}],["registerwithexternal(username",{"_index":2912,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["registerwiththirdparty",{"_index":1103,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registerwiththirdparty(model",{"_index":1180,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registerwiththirdpartycomponent",{"_index":154,"title":{"components/RegisterWithThirdPartyComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registra",{"_index":1179,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["registrado",{"_index":2613,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["registrados",{"_index":499,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["registrar",{"_index":2779,"title":{},"body":{"components/PendingVerificationComponent.html":{},"interfaces/Register.html":{},"components/RegisterWithThirdPartyComponent.html":{}}}],["registration",{"_index":2924,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration'},{'name",{"_index":159,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["registration.component.css",{"_index":2925,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration.component.html",{"_index":2926,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration/registration.component",{"_index":1069,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{}}}],["registrationcomponent",{"_index":158,"title":{"components/RegistrationComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registrationform",{"_index":2927,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registro",{"_index":1092,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{}}}],["reject",{"_index":2255,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["reject(error",{"_index":2269,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["rejeitada",{"_index":2252,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["relacionadas",{"_index":1091,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GamificationService.html":{},"classes/MediaNotificationModel.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"components/SendEmailComponent.html":{}}}],["relacionados",{"_index":3173,"title":{},"body":{"components/SearchComponent.html":{}}}],["relative",{"_index":2988,"title":{},"body":{"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["relativeto",{"_index":3208,"title":{},"body":{"components/SearchComponent.html":{}}}],["relação",{"_index":1888,"title":{},"body":{"components/LoginComponent.html":{},"classes/MediaNotificationModel.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["relações",{"_index":1405,"title":{},"body":{"classes/FollowerProfile.html":{}}}],["relevantes",{"_index":1152,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["reload",{"_index":3652,"title":{},"body":{"index.html":{}}}],["remarks",{"_index":581,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["remetente",{"_index":2111,"title":{},"body":{"interfaces/Message.html":{}}}],["remova",{"_index":2993,"title":{},"body":{"components/RegistrationComponent.html":{},"components/SearchComponent.html":{}}}],["remove",{"_index":3388,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["removendo",{"_index":1171,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["renderer",{"_index":1852,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["renderer2",{"_index":1841,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["repeat",{"_index":1736,"title":{},"body":{"components/HomeComponent.html":{}}}],["replaysubject",{"_index":1208,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["replaysubject(1",{"_index":1203,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["replynotificationmodel",{"_index":2725,"title":{"classes/ReplyNotificationModel.html":{}},"body":{"injectables/NotificationService.html":{},"classes/ReplyNotificationModel.html":{},"coverage.html":{}}}],["representa",{"_index":829,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/ChatWithMessages.html":{},"interfaces/MedalsDto.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{}}}],["representando",{"_index":215,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"injectables/NotificationService.html":{}}}],["representar",{"_index":1347,"title":{},"body":{"interfaces/ConfirmEmail.html":{},"classes/FollowerProfile.html":{},"interfaces/Login.html":{},"classes/NotificationModel.html":{},"classes/Profile.html":{},"interfaces/Register.html":{},"interfaces/ResetPassword.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{}}}],["representativa",{"_index":2090,"title":{},"body":{"interfaces/MedalsDto.html":{}}}],["representação",{"_index":2091,"title":{},"body":{"interfaces/MedalsDto.html":{}}}],["req",{"_index":1747,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{}}}],["req.clone",{"_index":1756,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["requer",{"_index":1190,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["requests",{"_index":2650,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["requesttofollow",{"_index":2322,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["requisições",{"_index":341,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GamificationService.html":{},"injectables/NotificationService.html":{},"classes/User.html":{}}}],["resendemailconfirmationlink",{"_index":1104,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/PendingVerificationComponent.html":{}}}],["resendemailconfirmationlink(email",{"_index":1186,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["reset",{"_index":161,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"overview.html":{}}}],["reseta",{"_index":3177,"title":{},"body":{"components/SearchComponent.html":{}}}],["resetar",{"_index":3171,"title":{},"body":{"components/SearchComponent.html":{}}}],["resetpassword",{"_index":1105,"title":{"interfaces/ResetPassword.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/ResetPassword.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["resetpassword(model",{"_index":1192,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["resetpasswordcomponent",{"_index":160,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resolve",{"_index":2251,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["resp.success",{"_index":1344,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["respectiva",{"_index":804,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["respectivos",{"_index":1522,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["response",{"_index":428,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["response.credential",{"_index":1993,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.hasunread",{"_index":2654,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["response.message",{"_index":1237,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{}}}],["response.user.email",{"_index":1240,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["response.user.jwt",{"_index":1241,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["response.user.username",{"_index":1242,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["responsetype",{"_index":425,"title":{},"body":{"injectables/AdminService.html":{}}}],["responsivos",{"_index":1633,"title":{},"body":{"components/HomeComponent.html":{}}}],["responsável",{"_index":263,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DialogService.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"injectables/NotificationService.html":{},"components/RegistrationComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{}}}],["resposta",{"_index":1167,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/RegistrationComponent.html":{}}}],["respostas",{"_index":2724,"title":{},"body":{"injectables/NotificationService.html":{},"classes/ReplyNotificationModel.html":{}}}],["restante",{"_index":3364,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["restrita",{"_index":1261,"title":{},"body":{"injectables/AuthorizationGuard.html":{}}}],["result",{"_index":3084,"title":{},"body":{"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["result.genre_ids.includes(this.currentfilter",{"_index":3200,"title":{},"body":{"components/SearchComponent.html":{}}}],["result.results",{"_index":737,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/SearchComponent.html":{}}}],["result.total_pages",{"_index":3225,"title":{},"body":{"components/SearchComponent.html":{}}}],["resultado",{"_index":310,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"interfaces/MovieCategory-1.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{}}}],["resultados",{"_index":671,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/SearchComponent.html":{}}}],["resultante",{"_index":2345,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["results",{"_index":183,"title":{},"body":{"components/AboutUsComponent.html":{},"classes/AchievementNotificationModel.html":{},"classes/Actor.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"components/BlockedAccountComponent.html":{},"interfaces/ChatWithMessages.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmEmail.html":{},"injectables/DialogService.html":{},"classes/FavoriteActor.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"interfaces/Message.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"interfaces/Register.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"interfaces/ResetPassword.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{},"interfaces/UserRatingMedia.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results.airingtoday.results.filter",{"_index":847,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["resumidas",{"_index":2850,"title":{},"body":{"interfaces/ProfileChat.html":{}}}],["retorna",{"_index":810,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/MovieCategory-3.html":{},"injectables/NotificationService.html":{}}}],["retornadas",{"_index":2272,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["retorne",{"_index":3195,"title":{},"body":{"components/SearchComponent.html":{}}}],["retorno",{"_index":483,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["retrieving",{"_index":1476,"title":{},"body":{"components/GamificationComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["retrocede",{"_index":823,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-3.html":{},"components/SearchComponent.html":{}}}],["return",{"_index":401,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"interceptors/LoadingInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"injectables/NotificationService.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{}}}],["returns",{"_index":307,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["returnurl",{"_index":1264,"title":{},"body":{"injectables/AuthorizationGuard.html":{},"components/LoginComponent.html":{}}}],["revoga",{"_index":378,"title":{},"body":{"injectables/AdminService.html":{}}}],["rgba(0",{"_index":1701,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["rgba(0,0,0,0.1",{"_index":3339,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["rgba(0,0,0,0.5",{"_index":1773,"title":{},"body":{"components/LoadingComponent.html":{}}}],["rica",{"_index":78,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["right",{"_index":1340,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["rolar",{"_index":3294,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["role",{"_index":433,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{}}}],["roles",{"_index":551,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{}}}],["roles.includes('admin",{"_index":557,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/NavMenuComponent.html":{}}}],["roles.includes('moderator",{"_index":2276,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{}}}],["roles.includes('user",{"_index":2669,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["romance",{"_index":3118,"title":{},"body":{"components/SearchComponent.html":{}}}],["root",{"_index":394,"title":{},"body":{"injectables/AdminService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"injectables/DialogService.html":{},"injectables/GamificationService.html":{},"injectables/LoadingService.html":{},"injectables/NotificationService.html":{}}}],["root'},{'name",{"_index":117,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["rota",{"_index":1458,"title":{},"body":{"components/GamificationComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{}}}],["rotate(0deg",{"_index":1786,"title":{},"body":{"components/LoadingComponent.html":{}}}],["rotate(188deg",{"_index":1725,"title":{},"body":{"components/HomeComponent.html":{}}}],["rotate(360deg",{"_index":1787,"title":{},"body":{"components/LoadingComponent.html":{}}}],["roteamento",{"_index":473,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/SearchComponent.html":{}}}],["route",{"_index":653,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["router",{"_index":293,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["routermodule",{"_index":1002,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthenticationRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":1088,"title":{},"body":{"modules/AuthenticationRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":1035,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":1256,"title":{},"body":{"injectables/AuthorizationGuard.html":{}}}],["routes",{"_index":1003,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthenticationRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":914,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{}}}],["routing.module.ts",{"_index":1001,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthenticationRoutingModule.html":{}}}],["routing/authentication",{"_index":1067,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{}}}],["row",{"_index":1687,"title":{},"body":{"components/HomeComponent.html":{}}}],["row.mb",{"_index":3352,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["rowimg",{"_index":1671,"title":{},"body":{"components/HomeComponent.html":{}}}],["rowimg:hover",{"_index":1678,"title":{},"body":{"components/HomeComponent.html":{}}}],["rowposter",{"_index":1665,"title":{},"body":{"components/HomeComponent.html":{}}}],["rows",{"_index":781,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["run",{"_index":3630,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["runguardsandresolvers",{"_index":1014,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["running",{"_index":3665,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":386,"title":{},"body":{"injectables/AdminService.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"injectables/GamificationService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchServiceComponent.html":{},"components/SendEmailComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1795,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["s",{"_index":2229,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"injectables/NotificationService.html":{}}}],["salva",{"_index":1903,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/SendEmailComponent.html":{}}}],["salvas",{"_index":1163,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["saturate(100",{"_index":1720,"title":{},"body":{"components/HomeComponent.html":{}}}],["saturate(6402",{"_index":1723,"title":{},"body":{"components/HomeComponent.html":{}}}],["savesubmittedvalues",{"_index":1838,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/SendEmailComponent.html":{}}}],["scaffolding",{"_index":3656,"title":{},"body":{"index.html":{}}}],["scale(1.09",{"_index":1679,"title":{},"body":{"components/HomeComponent.html":{}}}],["sci",{"_index":3137,"title":{},"body":{"components/SearchComponent.html":{}}}],["science",{"_index":3120,"title":{},"body":{"components/SearchComponent.html":{}}}],["script",{"_index":1898,"title":{},"body":{"components/LoginComponent.html":{},"dependencies.html":{}}}],["script1",{"_index":1947,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["script1.async",{"_index":1951,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["script1.defer",{"_index":1952,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["script1.src",{"_index":1949,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["scroll",{"_index":1670,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["scrollbar",{"_index":1683,"title":{},"body":{"components/HomeComponent.html":{}}}],["scrolltolastseason",{"_index":3281,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["se",{"_index":354,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"injectables/AuthenticationService.html":{},"components/BlockedAccountComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SendEmailComponent.html":{}}}],["search",{"_index":166,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["search'},{'name",{"_index":164,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["search.component.css",{"_index":3041,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.html",{"_index":3040,"title":{},"body":{"components/SearchComponent.html":{}}}],["search/:searchterm",{"_index":1030,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["searchcomponent",{"_index":163,"title":{"components/SearchComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searchform",{"_index":3048,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchquery",{"_index":2590,"title":{},"body":{"components/NavMenuComponent.html":{},"components/SearchServiceComponent.html":{}}}],["searchquerysource",{"_index":3257,"title":{},"body":{"components/SearchServiceComponent.html":{}}}],["searchresult",{"_index":3049,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchservice",{"_index":3062,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchservicecomponent",{"_index":165,"title":{"components/SearchServiceComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searchterm",{"_index":2185,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["searchvalue",{"_index":3217,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchvalue.type",{"_index":3220,"title":{},"body":{"components/SearchComponent.html":{}}}],["season",{"_index":169,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["season.air_date",{"_index":3324,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["season.episode_count",{"_index":3322,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["season.name",{"_index":3321,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["season.overview",{"_index":3326,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["season.season_number",{"_index":3327,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["season.vote_average",{"_index":3331,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["seasondetailscomponent",{"_index":168,"title":{"components/SeasonDetailsComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["seasondetailsinfocomponent",{"_index":170,"title":{"components/SeasonDetailsInfoComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["seasonnumber",{"_index":3417,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["seasonnumber).subscribe",{"_index":3428,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["secondary",{"_index":3367,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["segue",{"_index":1419,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["seguida",{"_index":485,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["seguido",{"_index":1402,"title":{},"body":{"classes/FollowerProfile.html":{},"interfaces/MovieCategory-1.html":{}}}],["seguidor",{"_index":1401,"title":{},"body":{"classes/FollowerProfile.html":{},"injectables/NotificationService.html":{}}}],["seguidores",{"_index":1391,"title":{},"body":{"classes/FollowNotificationModel.html":{},"interfaces/MovieCategory-1.html":{},"injectables/NotificationService.html":{},"classes/Profile.html":{}}}],["seguimento",{"_index":1406,"title":{},"body":{"classes/FollowerProfile.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{}}}],["seguindo",{"_index":2344,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["seguir",{"_index":2324,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"classes/Profile.html":{}}}],["seguir/desseguir",{"_index":2128,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["seja",{"_index":1169,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{}}}],["selecionado",{"_index":2517,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"components/SearchComponent.html":{}}}],["selectedgenreid",{"_index":3050,"title":{},"body":{"components/SearchComponent.html":{}}}],["selecteduser",{"_index":2187,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["selecteduserforban",{"_index":2182,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["selectedusername",{"_index":2188,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["seletor",{"_index":1934,"title":{},"body":{"components/LoginComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["seleção",{"_index":2523,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["sem",{"_index":2868,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["semelhante",{"_index":1158,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["send",{"_index":174,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["sendemail",{"_index":3447,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["sendemailcomponent",{"_index":173,"title":{"components/SendEmailComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sendmessage",{"_index":1517,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["sendmessagetouser",{"_index":2337,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["sendo",{"_index":795,"title":{},"body":{"components/AllSeriesPageComponent.html":{}}}],["sends",{"_index":2008,"title":{},"body":{"components/LoginComponent.html":{}}}],["sendusername",{"_index":1558,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/Message.html":{},"interfaces/MovieCategory.html":{}}}],["senha",{"_index":1095,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"interfaces/ResetPassword.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["sentat",{"_index":1559,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/Message.html":{},"interfaces/MovieCategory.html":{}}}],["separando",{"_index":2395,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["separator",{"_index":2978,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["sepia(95",{"_index":1722,"title":{},"body":{"components/HomeComponent.html":{}}}],["ser",{"_index":305,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/DialogService.html":{},"injectables/GamificationService.html":{},"components/LoginComponent.html":{},"interfaces/MedalsDto.html":{},"interfaces/MovieCategory-1.html":{},"injectables/NotificationService.html":{},"classes/Profile.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SendEmailComponent.html":{}}}],["serie",{"_index":833,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-3.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["serie').reverse",{"_index":2403,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["serie/:id",{"_index":1024,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["serie/:id/season",{"_index":1031,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["serie/:id/season/:seasonnumber",{"_index":1032,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["series",{"_index":115,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{}}}],["series.details",{"_index":2391,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["series.id",{"_index":857,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["series.mediaid",{"_index":855,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["series.name",{"_index":853,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["series.poster_path",{"_index":856,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["series/tv",{"_index":624,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["seriesdetailscomponent",{"_index":176,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["serve",{"_index":3646,"title":{},"body":{"index.html":{}}}],["server",{"_index":3645,"title":{},"body":{"index.html":{}}}],["service",{"_index":649,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["service'},{'name",{"_index":167,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["service.component",{"_index":699,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["service.component.css",{"_index":3255,"title":{},"body":{"components/SearchServiceComponent.html":{}}}],["service.component.html",{"_index":3254,"title":{},"body":{"components/SearchServiceComponent.html":{}}}],["service.component.ts",{"_index":3253,"title":{},"body":{"components/SearchServiceComponent.html":{},"coverage.html":{}}}],["service.component.ts:14",{"_index":3264,"title":{},"body":{"components/SearchServiceComponent.html":{}}}],["service.component.ts:15",{"_index":3259,"title":{},"body":{"components/SearchServiceComponent.html":{}}}],["service.component.ts:23",{"_index":3261,"title":{},"body":{"components/SearchServiceComponent.html":{}}}],["service/gamification.service",{"_index":1464,"title":{},"body":{"components/GamificationComponent.html":{}}}],["service/loading.service",{"_index":1768,"title":{},"body":{"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{}}}],["service/loading.service.ts",{"_index":1804,"title":{},"body":{"injectables/LoadingService.html":{},"coverage.html":{}}}],["service/loading.service.ts:11",{"_index":1809,"title":{},"body":{"injectables/LoadingService.html":{}}}],["service/loading.service.ts:15",{"_index":1808,"title":{},"body":{"injectables/LoadingService.html":{}}}],["service/loading.service.ts:8",{"_index":1813,"title":{},"body":{"injectables/LoadingService.html":{}}}],["service/loading.service.ts:9",{"_index":1811,"title":{},"body":{"injectables/LoadingService.html":{}}}],["service/movie",{"_index":698,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"coverage.html":{}}}],["service/search",{"_index":951,"title":{},"body":{"modules/AppModule.html":{},"components/NavMenuComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"coverage.html":{}}}],["services/authentication.service",{"_index":1930,"title":{},"body":{"components/LoginComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["services/profile.service",{"_index":2115,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["servidor",{"_index":1168,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RegistrationComponent.html":{}}}],["serviço",{"_index":262,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DialogService.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SendEmailComponent.html":{}}}],["serviços",{"_index":1821,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"classes/RegisterWithExternal.html":{},"components/RegistrationComponent.html":{}}}],["serão",{"_index":2283,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"injectables/NotificationService.html":{}}}],["session",{"_index":1578,"title":{},"body":{"components/HomeComponent.html":{}}}],["sessão",{"_index":1574,"title":{},"body":{"components/HomeComponent.html":{},"components/NavMenuComponent.html":{}}}],["set",{"_index":404,"title":{},"body":{"injectables/AdminService.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/GamificationService.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["set(results.watchedmedia.map(media",{"_index":845,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["setbannedvsregisteredchartoptions",{"_index":464,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["setformfields(username",{"_index":2300,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["setheaders",{"_index":1757,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["setimages(username",{"_index":2285,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["setprofiletypepiechartoptions",{"_index":465,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["setstaticdatapiechartoptions",{"_index":466,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["settimeout",{"_index":3302,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["settings_panel",{"_index":3350,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["setuser",{"_index":1106,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setuser(user",{"_index":1195,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["seu",{"_index":331,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MedalsDto.html":{},"components/RegistrationComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{}}}],["seus",{"_index":1521,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["shadow",{"_index":1700,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["shape",{"_index":1989,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["shouldupdatesearch",{"_index":3187,"title":{},"body":{"components/SearchComponent.html":{}}}],["show",{"_index":1807,"title":{},"body":{"injectables/LoadingService.html":{}}}],["showall",{"_index":707,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["showallfavorites",{"_index":2148,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["showallfollowers",{"_index":2168,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["showallfollowing",{"_index":2167,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["showallmedals",{"_index":2191,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["showallmoviestowatch",{"_index":2152,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["showallmovieswatched",{"_index":2150,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["showallseriestowatch",{"_index":2156,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["showallserieswatched",{"_index":2154,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["showbanpopup(username",{"_index":2518,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["showexpandedsuggestions",{"_index":2170,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["showfavorites",{"_index":2147,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["showfiveotherusers",{"_index":2169,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["showfollowers",{"_index":2145,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["showfollowing",{"_index":2146,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["showmedals",{"_index":2157,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["showmenu",{"_index":2591,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["showmoviestowatch",{"_index":2151,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["showmovieswatched",{"_index":2149,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["shownoresults",{"_index":2186,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["shows",{"_index":607,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["showseriestowatch",{"_index":2155,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["showserieswatched",{"_index":2153,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["sidebar",{"_index":2657,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["sidebar.style.width",{"_index":2659,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["sign",{"_index":2024,"title":{},"body":{"components/LoginComponent.html":{}}}],["significado",{"_index":2088,"title":{},"body":{"interfaces/MedalsDto.html":{}}}],["signin_with",{"_index":1991,"title":{},"body":{"components/LoginComponent.html":{}}}],["signup_with",{"_index":2956,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["silva",{"_index":97,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["silveiro",{"_index":91,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["single",{"_index":2018,"title":{},"body":{"components/LoginComponent.html":{}}}],["sinopse",{"_index":3325,"title":{},"body":{"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["sistema",{"_index":275,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"interfaces/Login.html":{},"interfaces/MedalsDto.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/Register.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["site",{"_index":2871,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["size",{"_index":1645,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["size:19px",{"_index":3406,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["sizing",{"_index":1675,"title":{},"body":{"components/HomeComponent.html":{},"components/RegistrationComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["slice:0:250",{"_index":3247,"title":{},"body":{"components/SearchComponent.html":{}}}],["sm",{"_index":3354,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["smooth",{"_index":3317,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["soap",{"_index":3140,"title":{},"body":{"components/SearchComponent.html":{}}}],["sobre",{"_index":24,"title":{},"body":{"components/AboutUsComponent.html":{},"injectables/AdminService.html":{},"components/AllSeriesPageComponent.html":{},"classes/FollowerProfile.html":{},"components/FooterComponent.html":{},"injectables/GamificationService.html":{},"interfaces/MedalsDto.html":{},"injectables/NotificationService.html":{},"interfaces/UserMedia.html":{}}}],["solicita",{"_index":1114,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["solicitadas",{"_index":1502,"title":{},"body":{"injectables/GamificationService.html":{},"injectables/NotificationService.html":{}}}],["solicitado",{"_index":375,"title":{},"body":{"injectables/AdminService.html":{}}}],["solicitação",{"_index":1118,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["solicitações",{"_index":1497,"title":{},"body":{"injectables/GamificationService.html":{},"components/NavMenuComponent.html":{}}}],["solid",{"_index":1777,"title":{},"body":{"components/LoadingComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{},"dependencies.html":{}}}],["sombra",{"_index":1703,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutUsComponent.html":{},"classes/AchievementNotificationModel.html":{},"classes/Actor.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"components/BlockedAccountComponent.html":{},"interfaces/ChatWithMessages.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmEmail.html":{},"injectables/DialogService.html":{},"classes/FavoriteActor.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"interfaces/Message.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"interfaces/Register.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"interfaces/ResetPassword.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{},"interfaces/UserRatingMedia.html":{},"index.html":{}}}],["space",{"_index":1599,"title":{},"body":{"components/HomeComponent.html":{}}}],["span",{"_index":2990,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["spin",{"_index":1781,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/.../environment.development.ts",{"_index":3694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":3695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/about",{"_index":9,"title":{},"body":{"components/AboutUsComponent.html":{},"coverage.html":{}}}],["src/app/admin",{"_index":442,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"coverage.html":{}}}],["src/app/admin/admin.component.ts",{"_index":3515,"title":{},"body":{"coverage.html":{}}}],["src/app/admin/service/admin.service.ts",{"_index":261,"title":{},"body":{"injectables/AdminService.html":{},"coverage.html":{}}}],["src/app/admin/service/admin.service.ts:107",{"_index":377,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/admin/service/admin.service.ts:118",{"_index":320,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/admin/service/admin.service.ts:132",{"_index":327,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/admin/service/admin.service.ts:145",{"_index":371,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/admin/service/admin.service.ts:155",{"_index":358,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/admin/service/admin.service.ts:165",{"_index":366,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/admin/service/admin.service.ts:17",{"_index":294,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/admin/service/admin.service.ts:175",{"_index":369,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/admin/service/admin.service.ts:185",{"_index":363,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/admin/service/admin.service.ts:27",{"_index":348,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/admin/service/admin.service.ts:42",{"_index":334,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/admin/service/admin.service.ts:60",{"_index":297,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/admin/service/admin.service.ts:72",{"_index":315,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/admin/service/admin.service.ts:85",{"_index":329,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/admin/service/admin.service.ts:97",{"_index":374,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app/app",{"_index":1000,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":864,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":871,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":872,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":873,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":906,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/authentication/authentication",{"_index":1081,"title":{},"body":{"modules/AuthenticationRoutingModule.html":{}}}],["src/app/authentication/authentication.module.ts",{"_index":1064,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["src/app/authentication/blocked",{"_index":1266,"title":{},"body":{"components/BlockedAccountComponent.html":{},"coverage.html":{}}}],["src/app/authentication/components/authentication",{"_index":1037,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"coverage.html":{}}}],["src/app/authentication/login/login.component.ts",{"_index":1818,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/authentication/login/login.component.ts:105",{"_index":1895,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:151",{"_index":1878,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:173",{"_index":1870,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:233",{"_index":1885,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:24",{"_index":1921,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:240",{"_index":1902,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:248",{"_index":1861,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:25",{"_index":1923,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:26",{"_index":1925,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:27",{"_index":1916,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:28",{"_index":1926,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:29",{"_index":1924,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:30",{"_index":1845,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:75",{"_index":1899,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:83",{"_index":1875,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:93",{"_index":1897,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/models/confirmemail.ts",{"_index":1346,"title":{},"body":{"interfaces/ConfirmEmail.html":{},"coverage.html":{}}}],["src/app/authentication/models/login.ts",{"_index":1817,"title":{},"body":{"interfaces/Login.html":{},"coverage.html":{}}}],["src/app/authentication/models/loginwithexternals.ts",{"_index":2048,"title":{},"body":{"classes/LoginWithExternal.html":{},"coverage.html":{}}}],["src/app/authentication/models/loginwithexternals.ts:10",{"_index":2064,"title":{},"body":{"classes/LoginWithExternal.html":{}}}],["src/app/authentication/models/loginwithexternals.ts:11",{"_index":2057,"title":{},"body":{"classes/LoginWithExternal.html":{}}}],["src/app/authentication/models/loginwithexternals.ts:8",{"_index":2063,"title":{},"body":{"classes/LoginWithExternal.html":{}}}],["src/app/authentication/models/loginwithexternals.ts:9",{"_index":2065,"title":{},"body":{"classes/LoginWithExternal.html":{}}}],["src/app/authentication/models/register.ts",{"_index":2854,"title":{},"body":{"interfaces/Register.html":{},"coverage.html":{}}}],["src/app/authentication/models/registerwithexternal.ts",{"_index":2855,"title":{},"body":{"classes/RegisterWithExternal.html":{},"coverage.html":{}}}],["src/app/authentication/models/registerwithexternal.ts:10",{"_index":2859,"title":{},"body":{"classes/RegisterWithExternal.html":{}}}],["src/app/authentication/models/registerwithexternal.ts:11",{"_index":2860,"title":{},"body":{"classes/RegisterWithExternal.html":{}}}],["src/app/authentication/models/registerwithexternal.ts:12",{"_index":2857,"title":{},"body":{"classes/RegisterWithExternal.html":{}}}],["src/app/authentication/models/registerwithexternal.ts:8",{"_index":2862,"title":{},"body":{"classes/RegisterWithExternal.html":{}}}],["src/app/authentication/models/registerwithexternal.ts:9",{"_index":2861,"title":{},"body":{"classes/RegisterWithExternal.html":{}}}],["src/app/authentication/models/resetpassword.ts",{"_index":3005,"title":{},"body":{"interfaces/ResetPassword.html":{},"coverage.html":{}}}],["src/app/authentication/models/user.ts",{"_index":3488,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/authentication/models/user.ts:16",{"_index":3498,"title":{},"body":{"classes/User.html":{}}}],["src/app/authentication/models/user.ts:17",{"_index":3499,"title":{},"body":{"classes/User.html":{}}}],["src/app/authentication/models/user.ts:18",{"_index":3500,"title":{},"body":{"classes/User.html":{}}}],["src/app/authentication/models/user.ts:7",{"_index":3494,"title":{},"body":{"classes/User.html":{}}}],["src/app/authentication/pending",{"_index":2772,"title":{},"body":{"components/PendingVerificationComponent.html":{},"coverage.html":{}}}],["src/app/authentication/register",{"_index":2864,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{},"coverage.html":{}}}],["src/app/authentication/registration/registration.component.ts",{"_index":2922,"title":{},"body":{"components/RegistrationComponent.html":{},"coverage.html":{}}}],["src/app/authentication/registration/registration.component.ts:121",{"_index":2934,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/authentication/registration/registration.component.ts:128",{"_index":2938,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/authentication/registration/registration.component.ts:136",{"_index":2932,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/authentication/registration/registration.component.ts:158",{"_index":2929,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/authentication/registration/registration.component.ts:23",{"_index":2940,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/authentication/registration/registration.component.ts:24",{"_index":2941,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/authentication/registration/registration.component.ts:25",{"_index":2942,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/authentication/registration/registration.component.ts:26",{"_index":2939,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/authentication/registration/registration.component.ts:27",{"_index":2928,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/authentication/registration/registration.component.ts:61",{"_index":2936,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/authentication/registration/registration.component.ts:66",{"_index":2935,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/authentication/registration/registration.component.ts:77",{"_index":2931,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/authentication/registration/registration.component.ts:88",{"_index":2937,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/authentication/reset",{"_index":3007,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/authentication/send",{"_index":3439,"title":{},"body":{"components/SendEmailComponent.html":{},"coverage.html":{}}}],["src/app/authentication/services/authentication.service.ts",{"_index":1089,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/authentication/services/authentication.service.ts:101",{"_index":1109,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication/services/authentication.service.ts:111",{"_index":1187,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication/services/authentication.service.ts:121",{"_index":1113,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication/services/authentication.service.ts:131",{"_index":1193,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication/services/authentication.service.ts:142",{"_index":1142,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication/services/authentication.service.ts:169",{"_index":1182,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication/services/authentication.service.ts:187",{"_index":1155,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication/services/authentication.service.ts:201",{"_index":1170,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication/services/authentication.service.ts:212",{"_index":1119,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication/services/authentication.service.ts:227",{"_index":1196,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication/services/authentication.service.ts:25",{"_index":1204,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication/services/authentication.service.ts:26",{"_index":1107,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication/services/authentication.service.ts:35",{"_index":1127,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication/services/authentication.service.ts:45",{"_index":1130,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication/services/authentication.service.ts:56",{"_index":1135,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication/services/authentication.service.ts:66",{"_index":1175,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication/services/authentication.service.ts:90",{"_index":1178,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/authentication/suspended",{"_index":3477,"title":{},"body":{"components/SuspendedAccountComponent.html":{},"coverage.html":{}}}],["src/app/chat/chat.component.ts",{"_index":3542,"title":{},"body":{"coverage.html":{}}}],["src/app/chat/models/chatwithmessages.ts",{"_index":1274,"title":{},"body":{"interfaces/ChatWithMessages.html":{},"coverage.html":{}}}],["src/app/chat/models/messages.ts",{"_index":2108,"title":{},"body":{"interfaces/Message.html":{},"coverage.html":{}}}],["src/app/chat/models/profilechat.ts",{"_index":2848,"title":{},"body":{"interfaces/ProfileChat.html":{},"coverage.html":{}}}],["src/app/chat/services/chat.service.ts",{"_index":3547,"title":{},"body":{"coverage.html":{}}}],["src/app/confirm",{"_index":1281,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"coverage.html":{}}}],["src/app/footer/footer.component.ts",{"_index":1410,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/gamification/gamification.component.ts",{"_index":1425,"title":{},"body":{"components/GamificationComponent.html":{},"coverage.html":{}}}],["src/app/gamification/gamification.component.ts:18",{"_index":1463,"title":{},"body":{"components/GamificationComponent.html":{}}}],["src/app/gamification/gamification.component.ts:19",{"_index":1462,"title":{},"body":{"components/GamificationComponent.html":{}}}],["src/app/gamification/gamification.component.ts:20",{"_index":1448,"title":{},"body":{"components/GamificationComponent.html":{}}}],["src/app/gamification/gamification.component.ts:28",{"_index":1455,"title":{},"body":{"components/GamificationComponent.html":{}}}],["src/app/gamification/gamification.component.ts:43",{"_index":1453,"title":{},"body":{"components/GamificationComponent.html":{}}}],["src/app/gamification/gamification.component.ts:59",{"_index":1449,"title":{},"body":{"components/GamificationComponent.html":{}}}],["src/app/gamification/models/medalsdto.ts",{"_index":2070,"title":{},"body":{"interfaces/MedalsDto.html":{},"coverage.html":{}}}],["src/app/gamification/service/gamification.service.ts",{"_index":1482,"title":{},"body":{"injectables/GamificationService.html":{},"coverage.html":{}}}],["src/app/gamification/service/gamification.service.ts:17",{"_index":1487,"title":{},"body":{"injectables/GamificationService.html":{}}}],["src/app/gamification/service/gamification.service.ts:27",{"_index":1498,"title":{},"body":{"injectables/GamificationService.html":{}}}],["src/app/gamification/service/gamification.service.ts:42",{"_index":1496,"title":{},"body":{"injectables/GamificationService.html":{}}}],["src/app/gamification/service/gamification.service.ts:60",{"_index":1504,"title":{},"body":{"injectables/GamificationService.html":{}}}],["src/app/gamification/service/gamification.service.ts:72",{"_index":1490,"title":{},"body":{"injectables/GamificationService.html":{}}}],["src/app/gamification/service/gamification.service.ts:82",{"_index":1495,"title":{},"body":{"injectables/GamificationService.html":{}}}],["src/app/gamification/service/gamification.service.ts:92",{"_index":1500,"title":{},"body":{"injectables/GamificationService.html":{}}}],["src/app/guards/authorization.guard.ts",{"_index":1250,"title":{},"body":{"injectables/AuthorizationGuard.html":{},"coverage.html":{}}}],["src/app/guards/authorization.guard.ts:11",{"_index":1252,"title":{},"body":{"injectables/AuthorizationGuard.html":{}}}],["src/app/guards/authorization.guard.ts:16",{"_index":1257,"title":{},"body":{"injectables/AuthorizationGuard.html":{}}}],["src/app/home/home.component.ts",{"_index":1511,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:106",{"_index":1529,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:117",{"_index":1527,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:129",{"_index":1526,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:138",{"_index":1531,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:152",{"_index":1534,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:22",{"_index":1548,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:23",{"_index":1549,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:24",{"_index":1519,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:26",{"_index":1547,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:28",{"_index":1533,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:38",{"_index":1535,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:59",{"_index":1528,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:82",{"_index":1520,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/interceptors/jwt.interceptor.ts",{"_index":1740,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"coverage.html":{}}}],["src/app/interceptors/jwt.interceptor.ts:12",{"_index":1746,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/interceptors/jwt.interceptor.ts:8",{"_index":1742,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/interceptors/loading/loading",{"_index":1788,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"coverage.html":{}}}],["src/app/loader/loading",{"_index":1803,"title":{},"body":{"injectables/LoadingService.html":{},"coverage.html":{}}}],["src/app/loader/loading/loading.component.ts",{"_index":1759,"title":{},"body":{"components/LoadingComponent.html":{},"coverage.html":{}}}],["src/app/loader/loading/loading.component.ts:11",{"_index":1766,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/loader/loading/loading.component.ts:17",{"_index":1767,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/media/api/movie",{"_index":3559,"title":{},"body":{"coverage.html":{}}}],["src/app/media/media",{"_index":249,"title":{},"body":{"classes/Actor.html":{},"classes/FavoriteActor.html":{},"interfaces/UserRatingMedia.html":{},"coverage.html":{}}}],["src/app/media/movies/all",{"_index":632,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"coverage.html":{}}}],["src/app/media/movies/movie",{"_index":3565,"title":{},"body":{"coverage.html":{}}}],["src/app/media/search",{"_index":3252,"title":{},"body":{"components/SearchServiceComponent.html":{},"coverage.html":{}}}],["src/app/media/search/search.component.ts",{"_index":3039,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/media/search/search.component.ts:103",{"_index":3080,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/media/search/search.component.ts:110",{"_index":3071,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/media/search/search.component.ts:128",{"_index":3079,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/media/search/search.component.ts:160",{"_index":3074,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/media/search/search.component.ts:182",{"_index":3067,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/media/search/search.component.ts:190",{"_index":3090,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/media/search/search.component.ts:20",{"_index":3093,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/media/search/search.component.ts:21",{"_index":3153,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/media/search/search.component.ts:212",{"_index":3086,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/media/search/search.component.ts:22",{"_index":3152,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/media/search/search.component.ts:233",{"_index":3083,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/media/search/search.component.ts:245",{"_index":3156,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/media/search/search.component.ts:253",{"_index":3158,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/media/search/search.component.ts:273",{"_index":3078,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/media/search/search.component.ts:28",{"_index":3154,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/media/search/search.component.ts:282",{"_index":3081,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/media/search/search.component.ts:29",{"_index":3146,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/media/search/search.component.ts:30",{"_index":3147,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/media/search/search.component.ts:31",{"_index":3092,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/media/search/search.component.ts:34",{"_index":3145,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/media/search/search.component.ts:54",{"_index":3128,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/media/search/search.component.ts:74",{"_index":3063,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/media/series/all",{"_index":789,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{},"coverage.html":{}}}],["src/app/media/series/series",{"_index":3571,"title":{},"body":{"coverage.html":{}}}],["src/app/nav",{"_index":2580,"title":{},"body":{"components/NavMenuComponent.html":{},"coverage.html":{}}}],["src/app/notifications/models/achievement",{"_index":187,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"coverage.html":{}}}],["src/app/notifications/models/follow",{"_index":1390,"title":{},"body":{"classes/FollowNotificationModel.html":{},"coverage.html":{}}}],["src/app/notifications/models/media",{"_index":2093,"title":{},"body":{"classes/MediaNotificationModel.html":{},"coverage.html":{}}}],["src/app/notifications/models/message",{"_index":2113,"title":{},"body":{"classes/MessageNotificationModel.html":{},"coverage.html":{}}}],["src/app/notifications/models/notification",{"_index":2679,"title":{},"body":{"classes/NotificationModel.html":{},"coverage.html":{}}}],["src/app/notifications/models/reply",{"_index":2996,"title":{},"body":{"classes/ReplyNotificationModel.html":{},"coverage.html":{}}}],["src/app/notifications/notifications/notifications.component.ts",{"_index":3581,"title":{},"body":{"coverage.html":{}}}],["src/app/notifications/services/notification.service.ts",{"_index":2688,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/notifications/services/notification.service.ts:105",{"_index":2739,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/notifications/services/notification.service.ts:115",{"_index":2730,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/notifications/services/notification.service.ts:125",{"_index":2737,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/notifications/services/notification.service.ts:135",{"_index":2705,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/notifications/services/notification.service.ts:145",{"_index":2727,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/notifications/services/notification.service.ts:155",{"_index":2741,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/notifications/services/notification.service.ts:175",{"_index":2719,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/notifications/services/notification.service.ts:185",{"_index":2735,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/notifications/services/notification.service.ts:20",{"_index":2703,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/notifications/services/notification.service.ts:27",{"_index":2716,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/notifications/services/notification.service.ts:41",{"_index":2713,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/notifications/services/notification.service.ts:55",{"_index":2711,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/notifications/services/notification.service.ts:65",{"_index":2723,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/notifications/services/notification.service.ts:75",{"_index":2708,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/notifications/services/notification.service.ts:85",{"_index":2721,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/notifications/services/notification.service.ts:95",{"_index":2733,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/profile/edit",{"_index":3586,"title":{},"body":{"coverage.html":{}}}],["src/app/profile/models/follower",{"_index":1399,"title":{},"body":{"classes/FollowerProfile.html":{},"coverage.html":{}}}],["src/app/profile/models/profile.ts",{"_index":2808,"title":{},"body":{"classes/Profile.html":{},"coverage.html":{}}}],["src/app/profile/models/profile.ts:21",{"_index":2842,"title":{},"body":{"classes/Profile.html":{}}}],["src/app/profile/models/profile.ts:22",{"_index":2831,"title":{},"body":{"classes/Profile.html":{}}}],["src/app/profile/models/profile.ts:23",{"_index":2833,"title":{},"body":{"classes/Profile.html":{}}}],["src/app/profile/models/profile.ts:24",{"_index":2837,"title":{},"body":{"classes/Profile.html":{}}}],["src/app/profile/models/profile.ts:25",{"_index":2839,"title":{},"body":{"classes/Profile.html":{}}}],["src/app/profile/models/profile.ts:26",{"_index":2832,"title":{},"body":{"classes/Profile.html":{}}}],["src/app/profile/models/profile.ts:27",{"_index":2840,"title":{},"body":{"classes/Profile.html":{}}}],["src/app/profile/models/profile.ts:28",{"_index":2835,"title":{},"body":{"classes/Profile.html":{}}}],["src/app/profile/models/profile.ts:29",{"_index":2836,"title":{},"body":{"classes/Profile.html":{}}}],["src/app/profile/models/profile.ts:30",{"_index":2841,"title":{},"body":{"classes/Profile.html":{}}}],["src/app/profile/models/profile.ts:31",{"_index":2834,"title":{},"body":{"classes/Profile.html":{}}}],["src/app/profile/models/profile.ts:32",{"_index":2838,"title":{},"body":{"classes/Profile.html":{}}}],["src/app/profile/models/profile.ts:33",{"_index":2830,"title":{},"body":{"classes/Profile.html":{}}}],["src/app/profile/models/user",{"_index":3501,"title":{},"body":{"interfaces/UserMedia.html":{},"coverage.html":{}}}],["src/app/profile/profile/profile.component.ts",{"_index":2114,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"coverage.html":{}}}],["src/app/profile/services/profile.service.ts",{"_index":3592,"title":{},"body":{"coverage.html":{}}}],["src/app/season",{"_index":3273,"title":{},"body":{"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"coverage.html":{}}}],["src/app/statistics/statistics.component.ts",{"_index":3596,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.development.ts",{"_index":3599,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":3601,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":2986,"title":{},"body":{"components/RegistrationComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["startban",{"_index":2489,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["startbandate",{"_index":2824,"title":{},"body":{"classes/Profile.html":{}}}],["started",{"_index":3637,"title":{"index.html":{}},"body":{}}],["state",{"_index":1255,"title":{},"body":{"injectables/AuthorizationGuard.html":{},"components/LoginComponent.html":{}}}],["state.url",{"_index":1265,"title":{},"body":{"injectables/AuthorizationGuard.html":{}}}],["statements",{"_index":3511,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1920,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["statistics",{"_index":445,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["statistics',component",{"_index":1034,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["statistics'},{'name",{"_index":110,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["statistics.component",{"_index":960,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["statistics.component.css",{"_index":447,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["statistics.component.html",{"_index":446,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["statistics.component.ts",{"_index":444,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"coverage.html":{}}}],["statistics.component.ts:135",{"_index":526,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["statistics.component.ts:15",{"_index":542,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["statistics.component.ts:16",{"_index":538,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["statistics.component.ts:168",{"_index":528,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["statistics.component.ts:17",{"_index":540,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["statistics.component.ts:18",{"_index":541,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["statistics.component.ts:19",{"_index":539,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["statistics.component.ts:200",{"_index":498,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["statistics.component.ts:21",{"_index":533,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["statistics.component.ts:216",{"_index":493,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["statistics.component.ts:22",{"_index":536,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["statistics.component.ts:228",{"_index":496,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["statistics.component.ts:23",{"_index":532,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["statistics.component.ts:24",{"_index":470,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["statistics.component.ts:242",{"_index":479,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["statistics.component.ts:39",{"_index":513,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["statistics.component.ts:72",{"_index":508,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["statistics.component.ts:81",{"_index":500,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["statistics.component.ts:99",{"_index":514,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["statistics/:username",{"_index":1033,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["statistics/admin",{"_index":443,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["statistics/statistics.component",{"_index":957,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["statisticscomponent",{"_index":177,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["status",{"_index":2245,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"classes/NotificationModel.html":{}}}],["storage",{"_index":1123,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["stored",{"_index":3662,"title":{},"body":{"index.html":{}}}],["string",{"_index":228,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/Actor.html":{},"injectables/AdminService.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AuthenticationButtonComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChatWithMessages.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmEmail.html":{},"classes/FavoriteActor.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"interfaces/Message.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"interfaces/Register.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"interfaces/ResetPassword.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{},"interfaces/UserRatingMedia.html":{}}}],["styles",{"_index":1510,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["styleurl",{"_index":17,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{}}}],["styleurls",{"_index":1512,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"interfaces/MovieCategory.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["sua",{"_index":1117,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/BlockedAccountComponent.html":{},"components/LoginComponent.html":{},"components/PendingVerificationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["suas",{"_index":1172,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ConfirmDialogComponent.html":{},"components/GamificationComponent.html":{}}}],["suave",{"_index":3340,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["subject",{"_index":2117,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{}}}],["sublinha",{"_index":3394,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["sublinhado",{"_index":3391,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["submete",{"_index":1896,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/SearchComponent.html":{}}}],["submeter",{"_index":3164,"title":{},"body":{"components/SearchComponent.html":{}}}],["submetido",{"_index":1890,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{}}}],["submetidos",{"_index":1905,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/SendEmailComponent.html":{}}}],["submissão",{"_index":1915,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["submitform",{"_index":3056,"title":{},"body":{"components/SearchComponent.html":{}}}],["submitform(page",{"_index":3085,"title":{},"body":{"components/SearchComponent.html":{}}}],["submitted",{"_index":1829,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["submittedvalues",{"_index":1830,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["subscreve",{"_index":2198,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["subscribe",{"_index":858,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{}}}],["subscribe((uniquerecommendedmovies",{"_index":761,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["subscribe(isfollowing",{"_index":2267,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["subscrições",{"_index":2234,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["success",{"_index":981,"title":{},"body":{"modules/AppModule.html":{},"components/PendingVerificationComponent.html":{}}}],["sucedida",{"_index":1872,"title":{},"body":{"components/LoginComponent.html":{}}}],["sucedido",{"_index":1160,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sucesso",{"_index":861,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-3.html":{}}}],["sugeridas",{"_index":808,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["sugeridos",{"_index":765,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{}}}],["super(triggeredbyuserid",{"_index":245,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/FollowNotificationModel.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/ReplyNotificationModel.html":{}}}],["support",{"_index":3627,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["suspended",{"_index":179,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["suspendedaccount",{"_index":1026,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["suspendedaccountcomponent",{"_index":178,"title":{"components/SuspendedAccountComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["suspensa",{"_index":2011,"title":{},"body":{"components/LoginComponent.html":{}}}],["svg",{"_index":923,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["switchmap",{"_index":704,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["switchmap((watchedmedia",{"_index":739,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["são",{"_index":1162,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/User.html":{}}}],["série",{"_index":2392,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"injectables/NotificationService.html":{},"classes/ReplyNotificationModel.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"interfaces/UserMedia.html":{}}}],["séries",{"_index":531,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"classes/MediaNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/SearchComponent.html":{},"interfaces/UserMedia.html":{}}}],["séries/tv",{"_index":606,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["table",{"_index":3603,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3602,"title":{},"body":{"coverage.html":{}}}],["tagline",{"_index":3405,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["tags",{"_index":3066,"title":{},"body":{"components/SearchComponent.html":{}}}],["take",{"_index":1750,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["takeuntil",{"_index":2121,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{}}}],["takeuntil(this.unsubscribed",{"_index":2530,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["talk",{"_index":3142,"title":{},"body":{"components/SearchComponent.html":{}}}],["tamanho",{"_index":776,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["também",{"_index":1146,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tap",{"_index":1794,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"dependencies.html":{}}}],["tap(event",{"_index":1799,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["tarde",{"_index":2408,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["targetuserid",{"_index":1394,"title":{},"body":{"classes/FollowNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/ReplyNotificationModel.html":{}}}],["team",{"_index":1421,"title":{},"body":{"components/FooterComponent.html":{}}}],["tecla",{"_index":2630,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["tela",{"_index":2774,"title":{},"body":{"components/PendingVerificationComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["tem",{"_index":556,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"interfaces/MovieCategory-1.html":{},"classes/Profile.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["tempo",{"_index":1866,"title":{},"body":{"components/LoginComponent.html":{}}}],["temporada",{"_index":3300,"title":{},"body":{"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["temporadas",{"_index":3320,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["temporariamente",{"_index":316,"title":{},"body":{"injectables/AdminService.html":{}}}],["temporarily",{"_index":2494,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["temporarily/${encodeuricomponent(username)}?bandurationindays=${bandurationindays",{"_index":422,"title":{},"body":{"injectables/AdminService.html":{}}}],["tentarem",{"_index":2778,"title":{},"body":{"components/PendingVerificationComponent.html":{}}}],["terceiros",{"_index":2866,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["terminar",{"_index":1573,"title":{},"body":{"components/HomeComponent.html":{},"components/NavMenuComponent.html":{}}}],["termo",{"_index":2548,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["termos/responsabilidade",{"_index":1416,"title":{},"body":{"components/FooterComponent.html":{}}}],["test",{"_index":3668,"title":{},"body":{"index.html":{}}}],["testing",{"_index":3679,"title":{},"body":{"index.html":{}}}],["tests",{"_index":3667,"title":{},"body":{"index.html":{}}}],["text",{"_index":426,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/Message.html":{},"interfaces/MovieCategory.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["texto",{"_index":1300,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/HomeComponent.html":{},"interfaces/Message.html":{},"components/SeasonDetailsComponent.html":{}}}],["there's",{"_index":2017,"title":{},"body":{"components/LoginComponent.html":{}}}],["third",{"_index":156,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"coverage.html":{}}}],["this._eref.nativeelement.contains(event.target",{"_index":2655,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this._renderer2.appendchild(this._document.body",{"_index":1953,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["this._renderer2.createelement('script",{"_index":1948,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.access_token",{"_index":2903,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["this.accesstoken",{"_index":2066,"title":{},"body":{"classes/LoginWithExternal.html":{},"classes/RegisterWithExternal.html":{}}}],["this.accountservice.registerwiththirdparty(model).subscribe",{"_index":2913,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["this.accountservice.user$.pipe(take(1)).subscribe",{"_index":2901,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["this.achievementphoto",{"_index":246,"title":{},"body":{"classes/AchievementNotificationModel.html":{}}}],["this.activatedroute.queryparammap.subscribe",{"_index":1938,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.activatedroute.snapshot.parammap.get('mode",{"_index":3464,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["this.activatedroute.snapshot.parammap.get('provider",{"_index":2902,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["this.activatedrouter.queryparammap.subscribe",{"_index":2796,"title":{},"body":{"components/PendingVerificationComponent.html":{}}}],["this.actorchoiceid",{"_index":1383,"title":{},"body":{"classes/FavoriteActor.html":{}}}],["this.adminservice.banuserpermanently(username).subscribe",{"_index":2507,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.adminservice.gettotalbannedusers().subscribe",{"_index":611,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["this.adminservice.gettotalcomments().subscribe",{"_index":612,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["this.adminservice.gettotalprivateprofiles().subscribe",{"_index":614,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["this.adminservice.gettotalpublicprofiles().subscribe",{"_index":615,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["this.adminservice.gettotalregisteredusers().subscribe",{"_index":609,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["this.adminservice.getuserrole(profile.username).pipe",{"_index":2538,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.adminservice.unbanuser(username).subscribe",{"_index":2514,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.applycurrentfilter",{"_index":3197,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.authservice.confirmemail(confirmemail).subscribe",{"_index":2802,"title":{},"body":{"components/PendingVerificationComponent.html":{}}}],["this.authservice.forgotpassword(this.emailvalue).subscribe",{"_index":3473,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["this.authservice.getjwt",{"_index":882,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.getloggedinusername",{"_index":549,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{}}}],["this.authservice.getuserrole(currentuser).subscribe",{"_index":553,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["this.authservice.getuserrole(currentusername).subscribe(roles",{"_index":2274,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.authservice.getuserrole(username).subscribe((roles",{"_index":2666,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.authservice.login(this.loginform.value).subscribe",{"_index":1958,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.loginwiththirdparty(new",{"_index":1996,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":885,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"components/NavMenuComponent.html":{}}}],["this.authservice.refreshuser(jwt).subscribe",{"_index":883,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.refreshuser(null).subscribe",{"_index":886,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.register(this.registrationform.value).subscribe",{"_index":2952,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.authservice.resendemailconfirmationlink(this.emailvalue).subscribe",{"_index":3471,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["this.authservice.resetpassword(model).subscribe",{"_index":3036,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authservice.user$.pipe",{"_index":1259,"title":{},"body":{"injectables/AuthorizationGuard.html":{}}}],["this.authservice.user$.pipe(take(1)).subscribe",{"_index":1751,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["this.authservice.user$.subscribe(user",{"_index":2202,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.banduration",{"_index":2495,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.bandurationmessage",{"_index":2010,"title":{},"body":{"components/LoginComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["this.birthdate",{"_index":2843,"title":{},"body":{"classes/Profile.html":{}}}],["this.buttonclick.emit",{"_index":1058,"title":{},"body":{"components/AuthenticationButtonComponent.html":{}}}],["this.canceltextbutton",{"_index":1342,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["this.canviewdata",{"_index":2268,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.categories",{"_index":712,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["this.categories.find(cat",{"_index":770,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["this.categories.findindex(category",{"_index":763,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["this.categories.unshift",{"_index":768,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["this.categories[index].results",{"_index":736,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["this.categories[recommendedcategoryindex].results",{"_index":766,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["this.chartbannedvsregistered",{"_index":585,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["this.chartprofiletypes",{"_index":601,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["this.chartstaticdata",{"_index":604,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["this.chatservice.selectuser(profile",{"_index":2339,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.chatservice.sendmessage(this.usernamereceiver",{"_index":1561,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["this.chatservice.startconnectionandlisten",{"_index":881,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["this.chatservice.stopconnection",{"_index":1569,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["this.checkfollowingstatus(this.loggedusername",{"_index":2204,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.checkforunreadnotifications",{"_index":2646,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.checkifuserisbanned(profile",{"_index":2540,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.collectionsize",{"_index":2219,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.commentid",{"_index":3004,"title":{},"body":{"classes/ReplyNotificationModel.html":{}}}],["this.confirmaction.emit(resp",{"_index":1345,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["this.connectchathub",{"_index":1961,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.coverphoto",{"_index":2846,"title":{},"body":{"classes/Profile.html":{}}}],["this.createdat",{"_index":2685,"title":{},"body":{"classes/NotificationModel.html":{}}}],["this.currentfilter",{"_index":3176,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.currentpage",{"_index":3091,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.currentuser",{"_index":709,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["this.currentusername",{"_index":1468,"title":{},"body":{"components/GamificationComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["this.currentusername).subscribe",{"_index":2328,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.description",{"_index":2844,"title":{},"body":{"classes/Profile.html":{}}}],["this.dialog.open(confirmdialogcomponent",{"_index":1366,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.email",{"_index":2069,"title":{},"body":{"classes/LoginWithExternal.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.emailform",{"_index":3466,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["this.emailform.get('email')?.value",{"_index":3469,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["this.emailform.get(fieldname)!.value",{"_index":3474,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["this.emailform.valid",{"_index":3467,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["this.emailvalue",{"_index":3468,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["this.errormessages",{"_index":1955,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["this.errormessages.push(error.error",{"_index":2296,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.errormessages.push(error.message",{"_index":2312,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.errormessages['googlelogin",{"_index":2027,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.errormessages[error.error.field",{"_index":1973,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/SendEmailComponent.html":{}}}],["this.errormessages[value.field",{"_index":1970,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.eventtype",{"_index":2687,"title":{},"body":{"classes/NotificationModel.html":{}}}],["this.expandedfavoriteslist",{"_index":2423,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.expandedfollowers",{"_index":2463,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.expandedfollowing",{"_index":2470,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.expandedmoviestowatchlist",{"_index":2444,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.expandedmovieswatchlist",{"_index":2437,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.expandedseriestowatchlist",{"_index":2457,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.expandedserieswatchlist",{"_index":2451,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.favoritemovies",{"_index":2381,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.favoriteseries",{"_index":2384,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.fetchairingandwatchedseriesandnotify",{"_index":832,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["this.fetchmovies",{"_index":724,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["this.fetchprofilecounts",{"_index":566,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["this.fetchrecommendedmovies",{"_index":711,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"interfaces/MovieCategory-2.html":{}}}],["this.fetchrecommendedseries",{"_index":831,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["this.fetchtotalbannedusers",{"_index":565,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["this.fetchtotalcomments",{"_index":567,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["this.fetchtotalregisteredusers",{"_index":564,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["this.fetchtrending",{"_index":2228,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.fetchwatchedmediadetails",{"_index":2404,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.fetchwatchlatermediadetails",{"_index":2414,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.filteredusersprofiles",{"_index":2218,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.filteredusersprofiles.length",{"_index":2225,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.filteredusersprofiles?.find(u",{"_index":2497,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.filterusers",{"_index":2223,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.followers",{"_index":2356,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"classes/Profile.html":{}}}],["this.followerscount",{"_index":2260,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.following",{"_index":2361,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"classes/Profile.html":{}}}],["this.followingcount",{"_index":2262,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.followrequestsent",{"_index":2323,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.formbuilder.group",{"_index":1945,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["this.gamificationservice.getlockedmedals(this.currentusername).subscribe",{"_index":1478,"title":{},"body":{"components/GamificationComponent.html":{}}}],["this.gamificationservice.getunlockedmedals(this.currentusername).subscribe",{"_index":1471,"title":{},"body":{"components/GamificationComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["this.gender",{"_index":2845,"title":{},"body":{"classes/Profile.html":{}}}],["this.getfavorites(this.currentusername",{"_index":2211,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.getfollowerslist",{"_index":2209,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.getfollowinglist",{"_index":2210,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.getheaders",{"_index":413,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GamificationService.html":{},"injectables/NotificationService.html":{}}}],["this.getjwt",{"_index":403,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GamificationService.html":{},"injectables/NotificationService.html":{}}}],["this.getlockedmedals",{"_index":1469,"title":{},"body":{"components/GamificationComponent.html":{}}}],["this.getmedals(this.currentusername",{"_index":2214,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.getpendingfollowrequests",{"_index":2645,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.getrandomfollowslist(followers",{"_index":2357,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.getrandomfollowslist(following",{"_index":2362,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.getrandomotherusers(profiles",{"_index":2369,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.getseasondetails(getparamid",{"_index":3426,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["this.getseriedetails(getparamid",{"_index":3293,"title":{},"body":{"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["this.getseriedetailsresult",{"_index":3298,"title":{},"body":{"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["this.getserieseasondetailsresult",{"_index":3430,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["this.getstoreduser",{"_index":1215,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.getunlockedmedals",{"_index":1470,"title":{},"body":{"components/GamificationComponent.html":{}}}],["this.getuserprofileinfo(this.currentusername",{"_index":2206,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.getuserprofiles",{"_index":2226,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.getuserprofilesmod",{"_index":2215,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.getwatchedmedia(this.currentusername",{"_index":2212,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.getwatchlatermedia(this.currentusername",{"_index":2213,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.googlebutton.nativeelement",{"_index":1987,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.googlecallback.bind(this",{"_index":1983,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.hasunreadnotifications",{"_index":2653,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.hidebanpopup",{"_index":2499,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.http.delete(`${environment.appurl}/api/admin/users/${encodeuricomponent(username",{"_index":424,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.http.delete(`${environment.appurl}/api/notifications/clearnotifications/${username",{"_index":2757,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.http.get(`${environment.appurl}/api/account/getuserrole/${username",{"_index":1217,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.http.get(`${environment.appurl}/api/account/refresh",{"_index":1221,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.http.get(`${environment.appurl}/api/admin/getuserrole/${username",{"_index":429,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.http.get(`${environment.appurl}/api/admin/total",{"_index":435,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.http.get(`${environment.appurl}/api/gamification/available",{"_index":1508,"title":{},"body":{"injectables/GamificationService.html":{}}}],["this.http.get(`${environment.appurl}/api/gamification/locked",{"_index":1509,"title":{},"body":{"injectables/GamificationService.html":{}}}],["this.http.get(`${environment.appurl}/api/gamification/unlocked",{"_index":1505,"title":{},"body":{"injectables/GamificationService.html":{}}}],["this.http.get(`${environment.appurl}/api/notifications/achievementnotifications/${username",{"_index":2750,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.http.get(`${environment.appurl}/api/notifications/follownotifications/${authenticatedusername",{"_index":2748,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.http.get(`${environment.appurl}/api/notifications/hasunread/${username",{"_index":2758,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.http.get(`${environment.appurl}/api/notifications/medianotifications/${username",{"_index":2770,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.http.get(`${environment.appurl}/api/notifications/messagenotifications/${authenticatedusername",{"_index":2751,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.http.get(`${environment.appurl}/api/notifications/replynotifications/${username",{"_index":2749,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.http.post(`${environment.appurl}/api/account/forgot",{"_index":1231,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.http.post(`${environment.appurl}/api/account/login",{"_index":1234,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.http.post(`${environment.appurl}/api/account/register",{"_index":1226,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.http.post(`${environment.appurl}/api/account/resend",{"_index":1228,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.http.post(`${environment.appurl}/api/admin/ban",{"_index":414,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.http.post(`${environment.appurl}/api/gamification/awardmedal",{"_index":1507,"title":{},"body":{"injectables/GamificationService.html":{}}}],["this.http.post(`${environment.appurl}/api/notifications/achievementnotifications/mark",{"_index":2755,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.http.post(`${environment.appurl}/api/notifications/follownotifications/mark",{"_index":2752,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.http.post(`${environment.appurl}/api/notifications/medianotifications/mark",{"_index":2771,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.http.post(`${environment.appurl}/api/notifications/messagenotifications/mark",{"_index":2756,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.http.post(`${environment.appurl}/api/notifications/notify",{"_index":2768,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.http.post(`${environment.appurl}/api/notifications/replynotifications/mark",{"_index":2754,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.http.post(url",{"_index":423,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.http.put(`${environment.appurl}/api/account/confirm",{"_index":1227,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.http.put(`${environment.appurl}/api/account/reset",{"_index":1233,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.http.put(`${environment.appurl}/api/admin/change",{"_index":432,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.http.put(`${environment.appurl}/api/admin/unban",{"_index":430,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.id",{"_index":256,"title":{},"body":{"classes/Actor.html":{}}}],["this.initcategories",{"_index":710,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["this.initializeform",{"_index":1943,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["this.initializegooglebutton",{"_index":1942,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.isactive",{"_index":2668,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.isbanpopupvisible",{"_index":2520,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.isfollowing",{"_index":2319,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.isgenreselected",{"_index":3174,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.isloading",{"_index":1769,"title":{},"body":{"components/LoadingComponent.html":{}}}],["this.ismoderator",{"_index":2275,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.isprofilepublic",{"_index":2258,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.isread",{"_index":2686,"title":{},"body":{"classes/NotificationModel.html":{}}}],["this.lastseason",{"_index":3308,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["this.lastseason.nativeelement",{"_index":3309,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["this.loadbannedvsregistereddata",{"_index":569,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["this.loadingservice.hide",{"_index":1802,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["this.loadingservice.loading",{"_index":1770,"title":{},"body":{"components/LoadingComponent.html":{}}}],["this.loadingservice.show",{"_index":1797,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["this.loadingsubject.asobservable",{"_index":1810,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingsubject.next(false",{"_index":1816,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingsubject.next(true",{"_index":1815,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadprofiletypes",{"_index":568,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["this.loaduserrole",{"_index":2205,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.lockedmedals",{"_index":1479,"title":{},"body":{"components/GamificationComponent.html":{}}}],["this.loggedusername",{"_index":2203,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{}}}],["this.loginform",{"_index":1944,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get(\"email\")!.value",{"_index":2032,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get(\"password\")!.value",{"_index":2034,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get(fieldname)!.value",{"_index":2029,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.valid",{"_index":1957,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.medals",{"_index":2477,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.media",{"_index":1384,"title":{},"body":{"classes/FavoriteActor.html":{}}}],["this.mediacast",{"_index":1385,"title":{},"body":{"classes/FavoriteActor.html":{}}}],["this.mediaid",{"_index":2104,"title":{},"body":{"classes/MediaNotificationModel.html":{},"classes/ReplyNotificationModel.html":{}}}],["this.medianame",{"_index":2105,"title":{},"body":{"classes/MediaNotificationModel.html":{}}}],["this.mediaphoto",{"_index":2106,"title":{},"body":{"classes/MediaNotificationModel.html":{}}}],["this.mediatype",{"_index":3003,"title":{},"body":{"classes/ReplyNotificationModel.html":{}}}],["this.message",{"_index":2684,"title":{},"body":{"classes/NotificationModel.html":{}}}],["this.messagetext.trim",{"_index":1554,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["this.mode",{"_index":3465,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["this.mode.includes('forgot",{"_index":3472,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["this.mode.includes('resend",{"_index":3470,"title":{},"body":{"components/SendEmailComponent.html":{}}}],["this.name",{"_index":257,"title":{},"body":{"classes/Actor.html":{}}}],["this.naturalsort(a",{"_index":2577,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.ngzone.run",{"_index":2000,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.notificationservice.hasunreadnotifications(this.loggedusername",{"_index":2651,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.notificationservice.notifynewepisode",{"_index":850,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["this.originalsearchresult",{"_index":3201,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.originalsearchresult.filter((result",{"_index":3199,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.page",{"_index":2562,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.pagesize",{"_index":2561,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.passwordform",{"_index":3033,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.passwordform.get('newpassword')?.value",{"_index":3035,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.passwordform.get(fieldname)!.value",{"_index":3037,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.passwordform.valid",{"_index":3034,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.pendingfollowrequests",{"_index":2648,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.processsearchresults(result",{"_index":3222,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.profileform",{"_index":2277,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.profileform.get('gender')?.disable",{"_index":2302,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.profileform.patchvalue",{"_index":2306,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.profilephoto",{"_index":1409,"title":{},"body":{"classes/FollowerProfile.html":{},"classes/Profile.html":{}}}],["this.profileservice.alreadyfollows(this.loggedusername",{"_index":2266,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.profileservice.alreadyfollows(usernameauthenticated",{"_index":2317,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.profileservice.followuser(this.loggedusername",{"_index":2327,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.profileservice.getfollowers(this.currentusername).subscribe(followers",{"_index":2355,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.profileservice.getfollowing(this.currentusername).subscribe(following",{"_index":2360,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.profileservice.getpendingfollowrequests(this.loggedusername",{"_index":2647,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.profileservice.getuserdata(username",{"_index":2303,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.profileservice.getuserdata(username).pipe(takeuntil(this.unsubscribed$)).subscribe",{"_index":2286,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.profileservice.getuserdata(username).subscribe",{"_index":2256,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.profileservice.getuserprofiles().pipe",{"_index":2529,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.profileservice.getuserprofiles().pipe(takeuntil(this.unsubscribed$)).subscribe",{"_index":2367,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.profileservice.getuserprofilesnotloggedin(this.loggedusername).pipe(takeuntil(this.unsubscribed$)).subscribe",{"_index":2216,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.profileservice.getuserwatchedmedia(this.currentuser).pipe",{"_index":738,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["this.profileservice.unfollowuser(this.loggedusername",{"_index":2333,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.profilestatus",{"_index":2847,"title":{},"body":{"classes/Profile.html":{}}}],["this.provider",{"_index":2068,"title":{},"body":{"classes/LoginWithExternal.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{}}}],["this.refreshuser",{"_index":878,"title":{},"body":{"components/AppComponent.html":{}}}],["this.registerform",{"_index":2907,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["this.registerform.get(\"username\")!.value",{"_index":2916,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["this.registerform.get('username')?.value",{"_index":2911,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["this.registerform.get(fieldname)!.value",{"_index":2914,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["this.registerform.valid",{"_index":2910,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["this.registrationform",{"_index":2944,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registrationform.get(\"email\")!.value",{"_index":2955,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registrationform.get(\"username\")!.value",{"_index":2954,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registrationform.get(fieldname)!.value",{"_index":2953,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registrationform.valid",{"_index":2951,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.returnurl",{"_index":1940,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route",{"_index":3209,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.route.params.subscribe(params",{"_index":2201,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.route.queryparams.subscribe(params",{"_index":3179,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":3292,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["this.route.snapshot.queryparammap.get('scrolltolastseason",{"_index":3301,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["this.router.getcurrentnavigation",{"_index":3484,"title":{},"body":{"components/SuspendedAccountComponent.html":{}}}],["this.router.navigate",{"_index":558,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/SearchComponent.html":{}}}],["this.router.navigate([\"/account/login",{"_index":1262,"title":{},"body":{"injectables/AuthorizationGuard.html":{}}}],["this.router.navigate(['/admin",{"_index":2667,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.router.navigate(['/home",{"_index":2673,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.router.navigate(['/profile",{"_index":2670,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.router.navigate(['/search",{"_index":2663,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.router.navigatebyurl",{"_index":2001,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{}}}],["this.router.navigatebyurl(\"/account/login",{"_index":3032,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router.navigatebyurl(\"/home",{"_index":1246,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.router.navigatebyurl('/account/confirm",{"_index":1959,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.router.navigatebyurl('/account/login",{"_index":2803,"title":{},"body":{"components/PendingVerificationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["this.router.navigatebyurl('/account/register",{"_index":2906,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["this.router.navigatebyurl('/account/send",{"_index":2805,"title":{},"body":{"components/PendingVerificationComponent.html":{}}}],["this.router.navigatebyurl('/home",{"_index":1962,"title":{},"body":{"components/LoginComponent.html":{},"components/PendingVerificationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["this.router.navigatebyurl('/suspendedaccount",{"_index":1966,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigatebyurl(`/account/register/third",{"_index":2022,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.router.navigatebyurl(this.returnurl",{"_index":1960,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.params.subscribe(params",{"_index":1466,"title":{},"body":{"components/GamificationComponent.html":{}}}],["this.router.snapshot.parammap.get('id",{"_index":3423,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["this.router.snapshot.parammap.get('seasonnumber",{"_index":3424,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["this.savesubmittedvalues",{"_index":1972,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/SendEmailComponent.html":{}}}],["this.scrolltolastseason",{"_index":3303,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["this.searchform",{"_index":3160,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchform.controls['type'].setvalue(newtype",{"_index":3170,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchform.get('moviename')?.value",{"_index":3202,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchform.get('total_pages')?.value",{"_index":3192,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchform.get('type')?.value",{"_index":3203,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchform.patchvalue",{"_index":3224,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchform.setvalue",{"_index":3191,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchform.value",{"_index":3218,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchform.value.moviename",{"_index":3189,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchform.value.total_pages",{"_index":3228,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchform.value.type",{"_index":3169,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchquery",{"_index":2661,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.searchquerysource.asobservable",{"_index":3263,"title":{},"body":{"components/SearchServiceComponent.html":{}}}],["this.searchquerysource.next(searchquery",{"_index":3271,"title":{},"body":{"components/SearchServiceComponent.html":{}}}],["this.searchresult",{"_index":3198,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchterm",{"_index":2555,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.selectedgenreid",{"_index":3175,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.selectedgenreid?.tostring",{"_index":3188,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.selecteduser",{"_index":2545,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.selecteduserforban",{"_index":2519,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.selectedusername",{"_index":2547,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.service.bannerapidata",{"_index":1568,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["this.service.fetchactionandadvetureseries",{"_index":840,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["this.service.fetchactionmovies",{"_index":727,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{}}}],["this.service.fetchadventuremovies",{"_index":728,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{}}}],["this.service.fetchanimationmovies",{"_index":730,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{}}}],["this.service.fetchanimationseries",{"_index":843,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["this.service.fetchcomedymovies",{"_index":729,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{}}}],["this.service.fetchdocumentarymovies",{"_index":731,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{}}}],["this.service.fetchdramaseries",{"_index":841,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["this.service.fetchmysteryseries",{"_index":842,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["this.service.fetchsciencefictionmovies",{"_index":732,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{}}}],["this.service.fetchthrillermovies",{"_index":733,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{}}}],["this.service.fetchtopratedseries",{"_index":838,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-3.html":{}}}],["this.service.getairingseries",{"_index":839,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["this.service.getsearchmovie(searchvalue).subscribe((result",{"_index":3223,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.service.getsearchserie(searchvalue).subscribe((result",{"_index":3221,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.service.getseriedetails(id).subscribe(async",{"_index":3431,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["this.service.getseriedetails(id).subscribe(result",{"_index":3297,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["this.service.getserieseasoninfo(id",{"_index":3427,"title":{},"body":{"components/SeasonDetailsInfoComponent.html":{}}}],["this.service.getsimilarmovie(id",{"_index":747,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"interfaces/MovieCategory-2.html":{}}}],["this.service.getsimilarserie(id",{"_index":834,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["this.service.trendingmovieapidata",{"_index":726,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{}}}],["this.setbannedvsregisteredchartoptions",{"_index":580,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["this.setformfields(this.currentusername",{"_index":2207,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.setimages(this.currentusername",{"_index":2208,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.setprofiletypepiechartoptions",{"_index":576,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["this.setstaticdatapiechartoptions",{"_index":570,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["this.setuser(user",{"_index":1224,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.showallfavorites",{"_index":2421,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.showallfollowers",{"_index":2461,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.showallfollowing",{"_index":2468,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.showallmoviestowatch",{"_index":2442,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.showallmovieswatched",{"_index":2435,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.showallseriestowatch",{"_index":2455,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.showallserieswatched",{"_index":2449,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.showexpandedsuggestions",{"_index":2475,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.showfavorites",{"_index":2417,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.showfiveotherusers",{"_index":2473,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.showfollowers",{"_index":2459,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.showfollowing",{"_index":2466,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.showmedals",{"_index":2419,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.showmenu",{"_index":2656,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.showmoviestowatch",{"_index":2440,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.showmovieswatched",{"_index":2433,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.shownoresults",{"_index":2558,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.showseriestowatch",{"_index":2453,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.showserieswatched",{"_index":2447,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.sortalphabetically",{"_index":2222,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.submitform(1",{"_index":3162,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.submitform(this.currentpage",{"_index":3193,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.submitted",{"_index":1954,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["this.submittedvalues",{"_index":1956,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.submittedvalues[\"email",{"_index":2031,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SendEmailComponent.html":{}}}],["this.submittedvalues[\"password",{"_index":2033,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.submittedvalues[\"username",{"_index":2915,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.submittedvalues[fieldname",{"_index":2030,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["this.success",{"_index":2801,"title":{},"body":{"components/PendingVerificationComponent.html":{}}}],["this.targetuserid",{"_index":1396,"title":{},"body":{"classes/FollowNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/ReplyNotificationModel.html":{}}}],["this.title.settitle(\"watchers",{"_index":879,"title":{},"body":{"components/AppComponent.html":{}}}],["this.togglefavoriteslist",{"_index":2438,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.togglefollowers",{"_index":2424,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.togglefollowersdisplay",{"_index":2464,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.togglefollowing",{"_index":2425,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.togglefollowingdisplay",{"_index":2471,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.togglemedalslist",{"_index":2430,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.togglemoviestowatchlist",{"_index":2428,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.togglemovieswatchedlist",{"_index":2429,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.toggleseriestowatchlist",{"_index":2427,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.toggleserieswatchedlist",{"_index":2426,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.token",{"_index":3031,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.totalbannedusers",{"_index":583,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["this.totalcomments",{"_index":613,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["this.totalpagesarray.length",{"_index":3229,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.totalpagesarray.slice(start",{"_index":3230,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.totalprivateprofiles",{"_index":602,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["this.totalpublicprofiles",{"_index":603,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["this.totalregisteredusers",{"_index":584,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["this.triggeredbyuserid",{"_index":2683,"title":{},"body":{"classes/NotificationModel.html":{}}}],["this.triggeredbyuserphoto",{"_index":1397,"title":{},"body":{"classes/FollowNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/ReplyNotificationModel.html":{}}}],["this.unlockedmedals",{"_index":1473,"title":{},"body":{"components/GamificationComponent.html":{}}}],["this.unsubscribed$.complete",{"_index":2241,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.unsubscribed$.next",{"_index":2240,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.updatesearch(1",{"_index":3161,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.updatesearch(newpage",{"_index":3235,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.updateselecteduser",{"_index":2221,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.userid",{"_index":2067,"title":{},"body":{"classes/LoginWithExternal.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{}}}],["this.usermedalid",{"_index":247,"title":{},"body":{"classes/AchievementNotificationModel.html":{}}}],["this.usermediaid",{"_index":2107,"title":{},"body":{"classes/MediaNotificationModel.html":{}}}],["this.username",{"_index":1382,"title":{},"body":{"classes/FavoriteActor.html":{},"classes/FollowerProfile.html":{},"classes/RegisterWithExternal.html":{}}}],["this.usernamereceiver.trim",{"_index":1553,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["this.userphoto",{"_index":2264,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.usersource.asobservable",{"_index":1202,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.usersource.next(null",{"_index":1218,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.usersource.next(user",{"_index":1249,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.usersprofiles",{"_index":2368,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.usersprofilesmod",{"_index":2217,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.usersprofilesmod.filter(user",{"_index":2556,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.usersprofilesmod.find(u",{"_index":2546,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.usersprofilesmod.length",{"_index":2224,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.watchedmovies",{"_index":2399,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.watchedseries",{"_index":2402,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.watchlatermovies",{"_index":2412,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["this.watchlaterseries",{"_index":2413,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["thriller",{"_index":723,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-2.html":{},"components/SearchComponent.html":{}}}],["til",{"_index":1909,"title":{},"body":{"components/LoginComponent.html":{}}}],["timeout",{"_index":3304,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["tipo",{"_index":346,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GamificationService.html":{},"classes/NotificationModel.html":{},"classes/ReplyNotificationModel.html":{},"components/SearchComponent.html":{},"interfaces/UserMedia.html":{}}}],["tipos",{"_index":509,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"injectables/NotificationService.html":{}}}],["title",{"_index":593,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AppComponent.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["titlebutton",{"_index":1295,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["titlepopup",{"_index":1296,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["toastmodule",{"_index":973,"title":{},"body":{"modules/AppModule.html":{}}}],["toastnotificationconfigmodule",{"_index":969,"title":{},"body":{"modules/AppModule.html":{}}}],["toastnotificationconfigmodule.forroot",{"_index":994,"title":{},"body":{"modules/AppModule.html":{}}}],["tocar",{"_index":3359,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["todas",{"_index":708,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/GamificationService.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{}}}],["todo",{"_index":3357,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["todos",{"_index":83,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/SearchComponent.html":{}}}],["toggleallfiveotherusers",{"_index":2472,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["toggleexpandedsuggestions",{"_index":2474,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["togglefavoriteslist",{"_index":2416,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["togglefavoriteslistdisplay",{"_index":2420,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["togglefavoritesscroll",{"_index":2422,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["togglefollowers",{"_index":2458,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["togglefollowersdisplay",{"_index":2460,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["togglefollowersscroll",{"_index":2462,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["togglefollowing",{"_index":2465,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["togglefollowingdisplay",{"_index":2467,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["togglefollowingscroll",{"_index":2469,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["togglemedalslist",{"_index":2418,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["togglemenu",{"_index":2599,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["togglemenu(event",{"_index":2633,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["togglemoviestowatchlist",{"_index":2439,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["togglemoviestowatchlistdisplay",{"_index":2441,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["togglemovieswatchedlist",{"_index":2432,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["togglemovieswatchedlistdisplay",{"_index":2434,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["toggleseriestowatchlist",{"_index":2452,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["toggleseriestowatchlistdisplay",{"_index":2454,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["toggleserieswatchedlist",{"_index":2446,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["toggleserieswatchedlistdisplay",{"_index":2448,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["toggleshowall",{"_index":647,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{}}}],["toggleshowall(categoryname",{"_index":691,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{}}}],["toggletowatchmoviesscroll",{"_index":2443,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["toggletowatchseriesscroll",{"_index":2456,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["togglewatchedmoviesscroll",{"_index":2436,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["togglewatchedseriesscroll",{"_index":2450,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["token",{"_index":338,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"interfaces/ConfirmEmail.html":{},"injectables/GamificationService.html":{},"classes/LoginWithExternal.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/RegisterWithExternal.html":{},"components/RegistrationComponent.html":{},"interfaces/ResetPassword.html":{},"components/ResetPasswordComponent.html":{},"classes/User.html":{}}}],["top",{"_index":1647,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["total",{"_index":361,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/SearchComponent.html":{}}}],["total_pages",{"_index":3151,"title":{},"body":{"components/SearchComponent.html":{}}}],["totalbannedusers",{"_index":452,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["totalcomments",{"_index":453,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["totalmente",{"_index":1730,"title":{},"body":{"components/HomeComponent.html":{}}}],["totalpages",{"_index":3234,"title":{},"body":{"components/SearchComponent.html":{}}}],["totalpagesarray",{"_index":3059,"title":{},"body":{"components/SearchComponent.html":{}}}],["totalprivateprofiles",{"_index":454,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["totalpublicprofiles",{"_index":455,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["totalregisteredusers",{"_index":456,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["totalusers",{"_index":610,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["tradicional",{"_index":2923,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["transferir",{"_index":1403,"title":{},"body":{"classes/FollowerProfile.html":{},"interfaces/MedalsDto.html":{}}}],["transform",{"_index":1622,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingComponent.html":{}}}],["transition",{"_index":1624,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["transmitidas",{"_index":796,"title":{},"body":{"components/AllSeriesPageComponent.html":{}}}],["transparent",{"_index":1685,"title":{},"body":{"components/HomeComponent.html":{},"components/RegistrationComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["trata",{"_index":1147,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RegistrationComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["trending",{"_index":2227,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["triggeredbyuserid",{"_index":225,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/FollowNotificationModel.html":{},"classes/MediaNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"classes/ReplyNotificationModel.html":{}}}],["triggeredbyuserphoto",{"_index":1395,"title":{},"body":{"classes/FollowNotificationModel.html":{},"classes/MessageNotificationModel.html":{},"classes/ReplyNotificationModel.html":{}}}],["true",{"_index":590,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"modules/AppModule.html":{},"injectables/AuthorizationGuard.html":{},"injectables/DialogService.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SendEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":2377,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["ts",{"_index":1977,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["tslib",{"_index":3632,"title":{},"body":{"dependencies.html":{}}}],["tv",{"_index":1566,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{},"components/SearchComponent.html":{}}}],["type",{"_index":235,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"classes/Actor.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"interfaces/ChatWithMessages.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmEmail.html":{},"injectables/DialogService.html":{},"classes/FavoriteActor.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoadingComponent.html":{},"interceptors/LoadingInterceptor.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"interfaces/Message.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"interfaces/Register.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"interfaces/ResetPassword.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{},"interfaces/UserRatingMedia.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":545,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/GamificationComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["types/google",{"_index":3619,"title":{},"body":{"dependencies.html":{}}}],["têm",{"_index":1308,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["título",{"_index":1316,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/MedalsDto.html":{},"components/SearchComponent.html":{}}}],["títulos",{"_index":3404,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["u.username",{"_index":2498,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["um",{"_index":300,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChatWithMessages.html":{},"interfaces/ConfirmEmail.html":{},"injectables/DialogService.html":{},"classes/FollowerProfile.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"classes/LoginWithExternal.html":{},"interfaces/MedalsDto.html":{},"interfaces/Message.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"interfaces/Register.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SendEmailComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{}}}],["uma",{"_index":30,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interfaces/MedalsDto.html":{},"interfaces/Message.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"interfaces/UserMedia.html":{}}}],["unban",{"_index":2513,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["unban(username",{"_index":2512,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["unbanning",{"_index":2516,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["unbanuser",{"_index":290,"title":{},"body":{"injectables/AdminService.html":{}}}],["unbanuser(username",{"_index":376,"title":{},"body":{"injectables/AdminService.html":{}}}],["undefined",{"_index":537,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"interfaces/Message.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"components/PendingVerificationComponent.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["underline",{"_index":3393,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["unfollowuser",{"_index":2332,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["uniquemovieids",{"_index":752,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["uniquemovieids.add(movie.id",{"_index":758,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["uniquemovieids.has(movie.id",{"_index":757,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["uniquemovies",{"_index":753,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["uniquemovies.slice(0",{"_index":760,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["uniquemovies.unshift(movie",{"_index":759,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["uniquerecommendedmovies",{"_index":767,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["unit",{"_index":3666,"title":{},"body":{"index.html":{}}}],["unlockedmedals",{"_index":1442,"title":{},"body":{"components/GamificationComponent.html":{}}}],["unreadmessages",{"_index":2851,"title":{},"body":{"interfaces/ProfileChat.html":{}}}],["unsubscribed",{"_index":2137,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{}}}],["unívoca",{"_index":2079,"title":{},"body":{"interfaces/MedalsDto.html":{}}}],["up",{"_index":405,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GamificationService.html":{}}}],["up',this.searchquery",{"_index":2665,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["updatesearch",{"_index":3057,"title":{},"body":{"components/SearchComponent.html":{}}}],["updatesearch(page",{"_index":3089,"title":{},"body":{"components/SearchComponent.html":{}}}],["updateselecteduser",{"_index":2544,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["uppercase",{"_index":1623,"title":{},"body":{"components/HomeComponent.html":{}}}],["url",{"_index":212,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"injectables/AdminService.html":{},"interfaces/ChatWithMessages.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"interfaces/MedalsDto.html":{},"classes/MediaNotificationModel.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"components/SearchComponent.html":{}}}],["us'},{'name",{"_index":105,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["us.component",{"_index":938,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["us.component.css",{"_index":18,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us.component.html",{"_index":16,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us.component.ts",{"_index":11,"title":{},"body":{"components/AboutUsComponent.html":{},"coverage.html":{}}}],["us/about",{"_index":10,"title":{},"body":{"components/AboutUsComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["usa",{"_index":3183,"title":{},"body":{"components/SearchComponent.html":{}}}],["usado",{"_index":3497,"title":{},"body":{"classes/User.html":{}}}],["usando",{"_index":1361,"title":{},"body":{"injectables/DialogService.html":{},"components/LoginComponent.html":{}}}],["use",{"_index":3658,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":996,"title":{},"body":{"modules/AppModule.html":{}}}],["usehash",{"_index":1036,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["user",{"_index":387,"title":{"classes/User.html":{}},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationGuard.html":{},"injectables/GamificationService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["user(response.user.email",{"_index":1243,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["user.isbanned",{"_index":2500,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["user.jwt",{"_index":402,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/GamificationService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/NotificationService.html":{}}}],["user.username",{"_index":1216,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"interfaces/MovieCategory-1.html":{}}}],["user.username?.tolowercase().includes(this.searchterm.tolowercase",{"_index":2557,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["user/${encodeuricomponent(username",{"_index":431,"title":{},"body":{"injectables/AdminService.html":{}}}],["userdata",{"_index":2257,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["userdata.birthdate",{"_index":2309,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["userdata.coverphoto",{"_index":2294,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["userdata.description",{"_index":2307,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["userdata.followers",{"_index":2261,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["userdata.following",{"_index":2263,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["userdata.gender",{"_index":2308,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["userdata.profilephoto",{"_index":2265,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["userdata.profilestatus",{"_index":2259,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["userid",{"_index":2055,"title":{},"body":{"classes/LoginWithExternal.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{}}}],["userkey",{"_index":3699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usermedalid",{"_index":208,"title":{},"body":{"classes/AchievementNotificationModel.html":{}}}],["usermedia",{"_index":2099,"title":{"interfaces/UserMedia.html":{}},"body":{"classes/MediaNotificationModel.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/UserMedia.html":{},"interfaces/UserRatingMedia.html":{},"coverage.html":{}}}],["usermediaid",{"_index":2098,"title":{},"body":{"classes/MediaNotificationModel.html":{},"injectables/NotificationService.html":{}}}],["username",{"_index":303,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChatWithMessages.html":{},"classes/FavoriteActor.html":{},"classes/FollowerProfile.html":{},"injectables/GamificationService.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"interfaces/Register.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"interfaces/UserRatingMedia.html":{}}}],["username.textcontent",{"_index":2305,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["usernameauthenticated",{"_index":2314,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["usernamereceiver",{"_index":1516,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["usernametocheck",{"_index":2315,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["usernametocheck).subscribe(isfollowing",{"_index":2318,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["userphoto",{"_index":2135,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["userratingmedia",{"_index":3504,"title":{"interfaces/UserRatingMedia.html":{}},"body":{"interfaces/UserRatingMedia.html":{},"coverage.html":{}}}],["users",{"_index":437,"title":{},"body":{"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{}}}],["usersource",{"_index":1096,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["usersprofiles",{"_index":2138,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["usersprofilesmod",{"_index":2183,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["uso",{"_index":2717,"title":{},"body":{"injectables/NotificationService.html":{},"components/SearchComponent.html":{}}}],["usuário",{"_index":1864,"title":{},"body":{"components/LoginComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["usuários",{"_index":1819,"title":{},"body":{"components/LoginComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{}}}],["utiliza",{"_index":3009,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["utilizada",{"_index":2073,"title":{},"body":{"interfaces/MedalsDto.html":{}}}],["utilizadas",{"_index":3492,"title":{},"body":{"classes/User.html":{}}}],["utilizado",{"_index":352,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"classes/FollowerProfile.html":{},"injectables/GamificationService.html":{},"interfaces/MedalsDto.html":{},"interfaces/MovieCategory-1.html":{}}}],["utilizador",{"_index":204,"title":{},"body":{"classes/AchievementNotificationModel.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChatWithMessages.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmEmail.html":{},"classes/FollowNotificationModel.html":{},"classes/FollowerProfile.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"components/HomeComponent.html":{},"interfaces/Login.html":{},"classes/LoginWithExternal.html":{},"interfaces/MedalsDto.html":{},"interfaces/Message.html":{},"classes/MessageNotificationModel.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"classes/Profile.html":{},"interfaces/ProfileChat.html":{},"interfaces/Register.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"classes/ReplyNotificationModel.html":{},"components/SearchComponent.html":{},"classes/User.html":{},"interfaces/UserMedia.html":{}}}],["utilizadores",{"_index":29,"title":{},"body":{"components/AboutUsComponent.html":{},"injectables/AdminService.html":{},"components/AdminStatisticsComponent.html":{},"injectables/AuthenticationService.html":{},"classes/FollowerProfile.html":{},"components/GamificationComponent.html":{},"injectables/GamificationService.html":{},"interfaces/MedalsDto.html":{},"interfaces/MovieCategory-1.html":{},"injectables/NotificationService.html":{},"classes/Profile.html":{},"components/SearchComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["utilizadors",{"_index":494,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"interfaces/ChatWithMessages.html":{}}}],["utilizados",{"_index":2299,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["utilizando",{"_index":1111,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/LoginWithExternal.html":{},"classes/RegisterWithExternal.html":{},"components/RegisterWithThirdPartyComponent.html":{}}}],["validando",{"_index":2884,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["validators",{"_index":1929,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["validators.email",{"_index":2945,"title":{},"body":{"components/RegistrationComponent.html":{},"components/SendEmailComponent.html":{}}}],["validators.maxlength(12",{"_index":2950,"title":{},"body":{"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.maxlength(20",{"_index":2909,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{}}}],["validators.minlength(4",{"_index":2908,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{}}}],["validators.minlength(8",{"_index":2946,"title":{},"body":{"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.pattern(\"(?=.*[a",{"_index":2947,"title":{},"body":{"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.required",{"_index":1946,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["validação",{"_index":1539,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["validações",{"_index":1877,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["valor",{"_index":1692,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{}}}],["valores",{"_index":1904,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/SearchComponent.html":{},"components/SendEmailComponent.html":{}}}],["value",{"_index":535,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AuthenticationButtonComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDialogComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{},"miscellaneous/variables.html":{}}}],["value.message",{"_index":1971,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["var",{"_index":102,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"injectables/AuthenticationService.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["variable",{"_index":3600,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":3693,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variável",{"_index":2243,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["vazios",{"_index":1523,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["ver",{"_index":2247,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"components/SeasonDetailsComponent.html":{}}}],["verdadeira",{"_index":2320,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["verdadeiramente",{"_index":53,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["verdadeiro",{"_index":2483,"title":{},"body":{"interfaces/MovieCategory-1.html":{},"injectables/NotificationService.html":{}}}],["verem",{"_index":1430,"title":{},"body":{"components/GamificationComponent.html":{}}}],["verifica",{"_index":555,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"components/NavMenuComponent.html":{},"injectables/NotificationService.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["verificado",{"_index":1892,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendEmailComponent.html":{}}}],["verificando",{"_index":2790,"title":{},"body":{"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["verificar",{"_index":1910,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MovieCategory-1.html":{},"components/PendingVerificationComponent.html":{}}}],["verification",{"_index":2782,"title":{},"body":{"components/PendingVerificationComponent.html":{}}}],["verification'},{'name",{"_index":152,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"components/BlockedAccountComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/FooterComponent.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["verification.component",{"_index":1073,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{}}}],["verification.component.css",{"_index":2784,"title":{},"body":{"components/PendingVerificationComponent.html":{}}}],["verification.component.html",{"_index":2783,"title":{},"body":{"components/PendingVerificationComponent.html":{}}}],["verification.component.ts",{"_index":2773,"title":{},"body":{"components/PendingVerificationComponent.html":{},"coverage.html":{}}}],["verification.component.ts:20",{"_index":2786,"title":{},"body":{"components/PendingVerificationComponent.html":{}}}],["verification.component.ts:37",{"_index":2789,"title":{},"body":{"components/PendingVerificationComponent.html":{}}}],["verification.component.ts:79",{"_index":2792,"title":{},"body":{"components/PendingVerificationComponent.html":{}}}],["verification.component.ts:86",{"_index":2788,"title":{},"body":{"components/PendingVerificationComponent.html":{}}}],["verification/pending",{"_index":1072,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/PendingVerificationComponent.html":{},"coverage.html":{}}}],["verificação",{"_index":1148,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/PendingVerificationComponent.html":{}}}],["verifique",{"_index":2807,"title":{},"body":{"components/PendingVerificationComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["vermelho",{"_index":1612,"title":{},"body":{"components/HomeComponent.html":{}}}],["version",{"_index":3642,"title":{},"body":{"index.html":{},"properties.html":{}}}],["versus",{"_index":503,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["verticalmente",{"_index":1597,"title":{},"body":{"components/HomeComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["via",{"_index":3670,"title":{},"body":{"index.html":{}}}],["view",{"_index":3306,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["viewchild",{"_index":1928,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{}}}],["viewchild('googlebutton",{"_index":1919,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["viewchild('lastseason",{"_index":3290,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["vindas",{"_index":1603,"title":{},"body":{"components/HomeComponent.html":{}}}],["visibilidade",{"_index":2635,"title":{},"body":{"components/NavMenuComponent.html":{},"classes/Profile.html":{}}}],["vista",{"_index":2393,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["vistas",{"_index":2445,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["vistos",{"_index":2431,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["visual",{"_index":2092,"title":{},"body":{"interfaces/MedalsDto.html":{}}}],["visualizado",{"_index":2200,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["visualizar",{"_index":2126,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["visualização",{"_index":2075,"title":{},"body":{"interfaces/MedalsDto.html":{},"components/NavMenuComponent.html":{}}}],["voc",{"_index":3347,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["void",{"_index":478,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"components/AppComponent.html":{},"components/AuthenticationButtonComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/GamificationComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/LoginComponent.html":{},"interfaces/MovieCategory.html":{},"interfaces/MovieCategory-1.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{},"components/NavMenuComponent.html":{},"components/PendingVerificationComponent.html":{},"components/RegisterWithThirdPartyComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SearchServiceComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{},"components/SendEmailComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["volta",{"_index":2887,"title":{},"body":{"components/RegisterWithThirdPartyComponent.html":{}}}],["voltar",{"_index":616,"title":{},"body":{"components/AdminStatisticsComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SeasonDetailsInfoComponent.html":{}}}],["votadas",{"_index":1565,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MovieCategory.html":{}}}],["vs",{"_index":594,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["war",{"_index":3125,"title":{},"body":{"components/SearchComponent.html":{}}}],["warning",{"_index":984,"title":{},"body":{"modules/AppModule.html":{}}}],["watchedmedia",{"_index":741,"title":{},"body":{"components/AllMoviesPageComponent.html":{},"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-2.html":{},"interfaces/MovieCategory-3.html":{}}}],["watchedmovies",{"_index":2173,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["watchedseries",{"_index":2174,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["watchedseriesids",{"_index":844,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["watchedseriesids.has(series.id",{"_index":848,"title":{},"body":{"components/AllSeriesPageComponent.html":{},"interfaces/MovieCategory-3.html":{}}}],["watchers",{"_index":1424,"title":{},"body":{"components/FooterComponent.html":{}}}],["watchersworld&#64;gmail.com",{"_index":1418,"title":{},"body":{"components/FooterComponent.html":{}}}],["watchersworld@gmail.com",{"_index":1423,"title":{},"body":{"components/FooterComponent.html":{}}}],["watchersworldclient",{"_index":3638,"title":{},"body":{"index.html":{}}}],["watcherworldsuserkey",{"_index":3700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["watchlatermovies",{"_index":2175,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["watchlaterseries",{"_index":2176,"title":{},"body":{"interfaces/MovieCategory-1.html":{}}}],["web",{"_index":3496,"title":{},"body":{"classes/User.html":{}}}],["webkit",{"_index":1682,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingComponent.html":{}}}],["websocket",{"_index":1858,"title":{},"body":{"components/LoginComponent.html":{}}}],["weight",{"_index":1620,"title":{},"body":{"components/HomeComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["western",{"_index":3127,"title":{},"body":{"components/SearchComponent.html":{}}}],["white",{"_index":1614,"title":{},"body":{"components/HomeComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["white[_ngcontent",{"_index":3397,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["white_container",{"_index":3349,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["width",{"_index":1367,"title":{},"body":{"injectables/DialogService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/RegistrationComponent.html":{},"components/SeasonDetailsComponent.html":{},"components/SuspendedAccountComponent.html":{}}}],["window",{"_index":1975,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["window.innerheight",{"_index":3313,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["window.scrollto",{"_index":3315,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["without",{"_index":2671,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["works",{"_index":3272,"title":{},"body":{"components/SearchServiceComponent.html":{}}}],["world",{"_index":880,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"miscellaneous/variables.html":{}}}],["wrap",{"_index":3396,"title":{},"body":{"components/SeasonDetailsComponent.html":{}}}],["x",{"_index":1669,"title":{},"body":{"components/HomeComponent.html":{}}}],["y",{"_index":1667,"title":{},"body":{"components/HomeComponent.html":{}}}],["yes",{"_index":488,"title":{},"body":{"components/AdminStatisticsComponent.html":{}}}],["z",{"_index":1774,"title":{},"body":{"components/LoadingComponent.html":{}}}],["z])(?=.*[a",{"_index":2948,"title":{},"body":{"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["z])(?=.*\\\\d).{8",{"_index":2949,"title":{},"body":{"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["zona",{"_index":1856,"title":{},"body":{"components/LoginComponent.html":{}}}],["zone.js",{"_index":3634,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":904,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutUsComponent.html":{"url":"components/AboutUsComponent.html","title":"component - AboutUsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutUsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/about-us/about-us.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about-us\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./about-us.component.html\n            \n\n\n\n            \n                styleUrl\n                ./about-us.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrl: './about-us.component.css'\n})\nexport class AboutUsComponent {\n\n}\n\n    \n\n    \n        \n  \n    Sobre Nós\n    \n      Procuramos proporcionar aos utilizadores uma experiência cinematográfica envolvente,\n      cheia de funcionalidades e recursos que ofereçam o máximo de informação e entretenimento.\n      Estamos empenhados em elevar os padrões e em criar algo verdadeiramente notável no cenário digital.\n      Durante este primeiro ano, alcançámos diversos marcos e enfrentámos desafios com dedicação e entusiasmo.\n      Estamos ansiosos por continuar a aprimorar a nossa aplicação e por proporcionar aos utilizadores uma jornada cinematográfica ainda mais rica nos próximos anos.\n      Agradecemos a todos os membros da equipa pelo esforço contínuo e dedicação.\n    \n\n    \n      \n        \n        Eduardo Silveiro \n      \n      \n        \n        Diogo Carreira \n      \n      \n        \n        Nuno Jesus \n      \n      \n        \n        João Silva \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sobre Nós          Procuramos proporcionar aos utilizadores uma experiência cinematográfica envolvente,      cheia de funcionalidades e recursos que ofereçam o máximo de informação e entretenimento.      Estamos empenhados em elevar os padrões e em criar algo verdadeiramente notável no cenário digital.      Durante este primeiro ano, alcançámos diversos marcos e enfrentámos desafios com dedicação e entusiasmo.      Estamos ansiosos por continuar a aprimorar a nossa aplicação e por proporcionar aos utilizadores uma jornada cinematográfica ainda mais rica nos próximos anos.      Agradecemos a todos os membros da equipa pelo esforço contínuo e dedicação.                              Eduardo Silveiro                             Diogo Carreira                             Nuno Jesus                             João Silva             '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminStatisticsComponent', 'selector': 'app-admin-statistics'},{'name': 'AllMoviesPageComponent', 'selector': 'app-all-movies-page'},{'name': 'AllSeriesPageComponent', 'selector': 'app-all-series-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'authentication-button'},{'name': 'BlockedAccountComponent', 'selector': 'app-blocked-account'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GamificationComponent', 'selector': 'app-gamification'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MovieDetailsComponent', 'selector': 'app-movie-details'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'PendingVerificationComponent', 'selector': 'app-pending-verification'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterWithThirdPartyComponent', 'selector': 'app-register-with-third-party'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchServiceComponent', 'selector': 'app-search-service'},{'name': 'SeasonDetailsComponent', 'selector': 'app-season-details'},{'name': 'SeasonDetailsInfoComponent', 'selector': 'app-season-details-info'},{'name': 'SendEmailComponent', 'selector': 'app-send-email'},{'name': 'SeriesDetailsComponent', 'selector': 'app-series-details'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'SuspendedAccountComponent', 'selector': 'app-suspended-account'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutUsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AchievementNotificationModel.html":{"url":"classes/AchievementNotificationModel.html","title":"class - AchievementNotificationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AchievementNotificationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/notifications/models/achievement-notification-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Modelo para notificações de conquistas, como a obtenção de medalhas.\nEstende o modelo base de notificação para incluir o ID da medalha do utilizador e a foto da conquista.\nPropriedades:\n\nuserMedalId: Identificador da medalha do utilizador associada à notificação.\nachievementPhoto: URL ou caminho da foto representando a conquista ou medalha obtida.\n\n\n            \n\n            \n                Extends\n            \n            \n                            NotificationModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                achievementPhoto\n                            \n                            \n                                userMedalId\n                            \n                            \n                                createdAt\n                            \n                            \n                                eventType\n                            \n                            \n                                isRead\n                            \n                            \n                                message\n                            \n                            \n                                triggeredByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(triggeredByUserId: string, message: string, createdAt: Date, isRead: boolean, eventType: string, userMedalId: number, achievementPhoto: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/notifications/models/achievement-notification-model.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        triggeredByUserId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createdAt\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isRead\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userMedalId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        achievementPhoto\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        achievementPhoto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/notifications/models/achievement-notification-model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userMedalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/notifications/models/achievement-notification-model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         NotificationModel\n\n                            \n                        \n                    \n                        \n                                Defined in         NotificationModel:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         NotificationModel\n\n                            \n                        \n                    \n                        \n                                Defined in         NotificationModel:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         NotificationModel\n\n                            \n                        \n                    \n                        \n                                Defined in         NotificationModel:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         NotificationModel\n\n                            \n                        \n                    \n                        \n                                Defined in         NotificationModel:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggeredByUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         NotificationModel\n\n                            \n                        \n                    \n                        \n                                Defined in         NotificationModel:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotificationModel } from \"./notification-model\";\n\n/**\n * Modelo para notificações de conquistas, como a obtenção de medalhas.\n * Estende o modelo base de notificação para incluir o ID da medalha do utilizador e a foto da conquista.\n *\n * Propriedades:\n * - userMedalId: Identificador da medalha do utilizador associada à notificação.\n * - achievementPhoto: URL ou caminho da foto representando a conquista ou medalha obtida.\n */\nexport class AchievementNotificationModel extends NotificationModel {\n  userMedalId: number;\n  achievementPhoto: string;\n\n  constructor(\n    triggeredByUserId: string,\n    message: string,\n    createdAt: Date,\n    isRead: boolean,\n    eventType: string,\n    userMedalId: number,\n    achievementPhoto: string\n  ) {\n    super(triggeredByUserId, message, createdAt, isRead, eventType);\n    this.achievementPhoto = achievementPhoto;\n    this.userMedalId = userMedalId;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Actor.html":{"url":"classes/Actor.html","title":"class - Actor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Actor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/media/media-models/actor.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actorId: number, actorName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/media/media-models/actor.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actorId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actorName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/media/media-models/actor.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/media/media-models/actor.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Actor {\n  id: number;\n  name: string;\n\n  constructor(actorId: number, actorName: string) {\n    this.id = actorId;\n    this.name = actorName;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/admin/service/admin.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Este serviço é responsável pela gestão de operações administrativas,\nincluindo a administração de utilizadores, a alteração de papéis de utilizadores,\ne a recolha de estatísticas gerais sobre o sistema.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                banUserPermanently\n                            \n                            \n                                BanUserTemporarily\n                            \n                            \n                                changeRoleToModerator\n                            \n                            \n                                changeRoleToUser\n                            \n                            \n                                deleteUserByUsername\n                            \n                            \n                                getHeaders\n                            \n                            \n                                getJWT\n                            \n                            \n                                getTotalBannedUsers\n                            \n                            \n                                getTotalComments\n                            \n                            \n                                getTotalPrivateProfiles\n                            \n                            \n                                getTotalPublicProfiles\n                            \n                            \n                                getTotalRegisteredUsers\n                            \n                            \n                                getUserRole\n                            \n                            \n                                unbanUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/service/admin.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        banUserPermanently\n                        \n                    \n                \n            \n            \n                \nbanUserPermanently(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/service/admin.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Proíbe permanentemente um utilizador de aceder ao sistema.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome de utilizador a ser banido permanentemente.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Um Observable que emite o resultado da operação de proibição.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BanUserTemporarily\n                        \n                    \n                \n            \n            \n                \nBanUserTemporarily(username: string, banDurationInDays: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/service/admin.service.ts:72\n                        \n                    \n\n\n            \n                \n                        Proíbe temporariamente um utilizador de aceder ao sistema.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome de utilizador a ser banido temporariamente.\n\n                                            \n                                        \n                                        \n                                                banDurationInDays\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    A duração da proibição em dias.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Um Observable que emite o resultado da operação de proibição.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeRoleToModerator\n                        \n                    \n                \n            \n            \n                \nchangeRoleToModerator(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/service/admin.service.ts:118\n                        \n                    \n\n\n            \n                \n                        Altera o papel de um utilizador para Moderador.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome de utilizador do utilizador cujo papel será alterado para Moderador.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Um Observable que emite o resultado da operação de alteração de papel.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeRoleToUser\n                        \n                    \n                \n            \n            \n                \nchangeRoleToUser(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/service/admin.service.ts:132\n                        \n                    \n\n\n            \n                \n                        Altera o papel de um utilizador para Utilizador.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome de utilizador do utilizador cujo papel será alterado para Utilizador.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Um Observable que emite o resultado da operação de alteração de papel.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUserByUsername\n                        \n                    \n                \n            \n            \n                \ndeleteUserByUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/service/admin.service.ts:85\n                        \n                    \n\n\n            \n                \n                        Apaga um utilizador do sistema pelo seu nome de utilizador.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome de utilizador do utilizador a ser apagado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Um Observable que emite o resultado da operação de apagar.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeaders\n                        \n                    \n                \n            \n            \n                \ngetHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/service/admin.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Constrói os cabeçalhos HTTP para inclusão do token JWT nas requisições à API.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                Um objeto HttpHeaders configurado com o tipo de conteúdo e o token JWT.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getJWT\n                        \n                    \n                \n            \n            \n                \ngetJWT()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/service/admin.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Recupera o token JWT do localStorage do navegador. Este token é utilizado para\nautenticação nas requisições à API.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                O token JWT ou 'No JWT' se o token não estiver presente.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalBannedUsers\n                        \n                    \n                \n            \n            \n                \ngetTotalBannedUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/service/admin.service.ts:155\n                        \n                    \n\n\n            \n                \n                        Obtém o número total de utilizadores proibidos no sistema.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Um Observable que emite o número total de utilizadores proibidos.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalComments\n                        \n                    \n                \n            \n            \n                \ngetTotalComments()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/service/admin.service.ts:185\n                        \n                    \n\n\n            \n                \n                        Obtém o número total de comentários feitos no sistema.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Um Observable que emite o número total de comentários.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalPrivateProfiles\n                        \n                    \n                \n            \n            \n                \ngetTotalPrivateProfiles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/service/admin.service.ts:165\n                        \n                    \n\n\n            \n                \n                        Obtém o número total de perfis privados no sistema.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Um Observable que emite o número total de perfis privados.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalPublicProfiles\n                        \n                    \n                \n            \n            \n                \ngetTotalPublicProfiles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/service/admin.service.ts:175\n                        \n                    \n\n\n            \n                \n                        Obtém o número total de perfis públicos no sistema.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Um Observable que emite o número total de perfis públicos.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalRegisteredUsers\n                        \n                    \n                \n            \n            \n                \ngetTotalRegisteredUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/service/admin.service.ts:145\n                        \n                    \n\n\n            \n                \n                        Obtém o número total de utilizadores registados no sistema.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Um Observable que emite o número total de utilizadores registados.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserRole\n                        \n                    \n                \n            \n            \n                \ngetUserRole(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/service/admin.service.ts:97\n                        \n                    \n\n\n            \n                \n                        Obtém o papel de um utilizador no sistema.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome de utilizador do utilizador cujo papel é solicitado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Um Observable que emite os papéis do utilizador.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unbanUser\n                        \n                    \n                \n            \n            \n                \nunbanUser(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/service/admin.service.ts:107\n                        \n                    \n\n\n            \n                \n                        Revoga a proibição de um utilizador, permitindo o seu acesso ao sistema novamente.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome de utilizador do utilizador a ser desproibido.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Um Observable que emite o resultado da operação de desproibição.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { User } from '../../authentication/models/user';\nimport { environment } from '../../../environments/environment.development';\nimport { Profile } from '../../profile/models/profile';\n\n/**\n * Este serviço é responsável pela gestão de operações administrativas,\n * incluindo a administração de utilizadores, a alteração de papéis de utilizadores,\n * e a recolha de estatísticas gerais sobre o sistema.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  /**\n   * Recupera o token JWT do localStorage do navegador. Este token é utilizado para\n   * autenticação nas requisições à API.\n   * \n   * @returns O token JWT ou 'No JWT' se o token não estiver presente.\n   */\n  getJWT() {\n    const key = localStorage.getItem(environment.userKey);\n    if (key) {\n      const user = JSON.parse(key) as User;\n      return user.jwt;\n    } else {\n      return 'No JWT';\n    }\n  }\n\n  /**\n   * Constrói os cabeçalhos HTTP para inclusão do token JWT nas requisições à API.\n   * \n   * @returns Um objeto HttpHeaders configurado com o tipo de conteúdo e o token JWT.\n   */\n  getHeaders() {\n    const jwt = this.getJWT();\n\n    // Set up the headers with the authentication token\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${jwt}`\n    });\n\n    return headers;\n  }\n\n  /**\n  * Proíbe permanentemente um utilizador de aceder ao sistema.\n  * \n  * @param username O nome de utilizador a ser banido permanentemente.\n  * @returns Um Observable que emite o resultado da operação de proibição.\n  */\n  banUserPermanently(username: string): Observable {\n    const headers = this.getHeaders();\n    return this.http.post(`${environment.appUrl}/api/admin/ban-user-permanently/${encodeURIComponent(username)}`, {}, { headers });\n  }\n\n  /**\n   * Proíbe temporariamente um utilizador de aceder ao sistema.\n   * \n   * @param username O nome de utilizador a ser banido temporariamente.\n   * @param banDurationInDays A duração da proibição em dias.\n   * @returns Um Observable que emite o resultado da operação de proibição.\n   */\n  BanUserTemporarily(username: string, banDurationInDays: number): Observable {\n    const headers = this.getHeaders();\n    // Append the ban duration as a query parameter\n    const url = `${environment.appUrl}/api/admin/ban-user-temporarily/${encodeURIComponent(username)}?banDurationInDays=${banDurationInDays}`;\n    return this.http.post(url, {}, { headers });\n  }\n\n  /**\n   * Apaga um utilizador do sistema pelo seu nome de utilizador.\n   * \n   * @param username O nome de utilizador do utilizador a ser apagado.\n   * @returns Um Observable que emite o resultado da operação de apagar.\n   */\n  deleteUserByUsername(username: string): Observable {\n    const headers = this.getHeaders();\n    return this.http.delete(`${environment.appUrl}/api/admin/users/${encodeURIComponent(username)}`,\n      { headers, responseType: 'text' }); // Expecting a text response\n  }\n\n  /**\n  * Obtém o papel de um utilizador no sistema.\n  * \n  * @param username O nome de utilizador do utilizador cujo papel é solicitado.\n  * @returns Um Observable que emite os papéis do utilizador.\n  */\n  getUserRole(username: string): Observable {\n    return this.http.get(`${environment.appUrl}/api/admin/getUserRole/${username}`);\n  }\n\n  /**\n   * Revoga a proibição de um utilizador, permitindo o seu acesso ao sistema novamente.\n   * \n   * @param username O nome de utilizador do utilizador a ser desproibido.\n   * @returns Um Observable que emite o resultado da operação de desproibição.\n   */\n  unbanUser(username: string): Observable {\n    const headers = this.getHeaders();\n    return this.http.put(`${environment.appUrl}/api/admin/unban-user/${encodeURIComponent(username)}`, {}, { headers });\n  }\n\n  /**\n   * Altera o papel de um utilizador para Moderador.\n   * \n   * @param username O nome de utilizador do utilizador cujo papel será alterado para Moderador.\n   * @returns Um Observable que emite o resultado da operação de alteração de papel.\n   */\n  changeRoleToModerator(username: string): Observable {\n    const headers = this.getHeaders();\n    return this.http.put(`${environment.appUrl}/api/admin/change-role-to-moderator/${encodeURIComponent(username)}`, {}, {\n      headers: headers,\n      responseType: 'text'\n    });\n  }\n\n  /**\n   * Altera o papel de um utilizador para Utilizador.\n   * \n   * @param username O nome de utilizador do utilizador cujo papel será alterado para Utilizador.\n   * @returns Um Observable que emite o resultado da operação de alteração de papel.\n   */\n  changeRoleToUser(username: string): Observable {\n    const headers = this.getHeaders();\n    return this.http.put(`${environment.appUrl}/api/admin/change-role-to-user/${encodeURIComponent(username)}`, {}, {\n      headers: headers,\n      responseType: 'text'\n    });\n  }\n\n  /**\n   * Obtém o número total de utilizadores registados no sistema.\n   * \n   * @returns Um Observable que emite o número total de utilizadores registados.\n   */\n  getTotalRegisteredUsers(): Observable {\n    const headers = this.getHeaders();\n    return this.http.get(`${environment.appUrl}/api/admin/total-registered-users`, { headers });\n  }\n\n  /**\n   * Obtém o número total de utilizadores proibidos no sistema.\n   * \n   * @returns Um Observable que emite o número total de utilizadores proibidos.\n   */\n  getTotalBannedUsers(): Observable {\n    const headers = this.getHeaders();\n    return this.http.get(`${environment.appUrl}/api/admin/total-banned-users`, { headers });\n  }\n\n  /**\n   * Obtém o número total de perfis privados no sistema.\n   * \n   * @returns Um Observable que emite o número total de perfis privados.\n   */\n  getTotalPrivateProfiles(): Observable {\n    const headers = this.getHeaders();\n    return this.http.get(`${environment.appUrl}/api/admin/total-private-profiles`, { headers });\n  }\n\n  /**\n  * Obtém o número total de perfis públicos no sistema.\n  * \n  * @returns Um Observable que emite o número total de perfis públicos.\n  */\n  getTotalPublicProfiles(): Observable {\n    const headers = this.getHeaders();\n    return this.http.get(`${environment.appUrl}/api/admin/total-public-profiles`, { headers });\n  }\n\n  /**\n   * Obtém o número total de comentários feitos no sistema.\n   * \n   * @returns Um Observable que emite o número total de comentários.\n   */\n  getTotalComments(): Observable {\n    const headers = this.getHeaders();\n    return this.http.get(`${environment.appUrl}/api/admin/total-comments`, { headers });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminStatisticsComponent.html":{"url":"components/AdminStatisticsComponent.html","title":"component - AdminStatisticsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminStatisticsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin-statistics/admin-statistics.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-statistics\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./admin-statistics.component.html\n            \n\n\n\n            \n                styleUrl\n                ./admin-statistics.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartBannedVsRegistered\n                            \n                            \n                                chartProfileTypes\n                            \n                            \n                                chartStaticData\n                            \n                            \n                                Highcharts\n                            \n                            \n                                totalBannedUsers\n                            \n                            \n                                totalComments\n                            \n                            \n                                totalPrivateProfiles\n                            \n                            \n                                totalPublicProfiles\n                            \n                            \n                                totalRegisteredUsers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fetchProfileCounts\n                            \n                            \n                                    Private\n                                fetchTotalBannedUsers\n                            \n                            \n                                    Private\n                                fetchTotalComments\n                            \n                            \n                                    Private\n                                fetchTotalRegisteredUsers\n                            \n                            \n                                loadBannedVsRegisteredData\n                            \n                            \n                                loadProfileTypes\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setBannedVsRegisteredChartOptions\n                            \n                            \n                                setProfileTypePieChartOptions\n                            \n                            \n                                setStaticDataPieChartOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(adminService: AdminService, authService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin-statistics/admin-statistics.component.ts:24\n                            \n                        \n\n                \n                    \n                            Construtor da classe AdminStatisticsComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O serviço responsável por operações administrativas.\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O serviço de autenticação do utilizador.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O serviço de roteamento para navegação entre páginas.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fetchProfileCounts\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchProfileCounts(callback?: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin-statistics/admin-statistics.component.ts:242\n                        \n                    \n\n\n            \n                \n                        Busca o total de perfis privados e chama a função de retorno, se fornecida.\nEm seguida, busca o total de perfis públicos e chama a função de retorno novamente.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Uma função de retorno opcional para chamar após a conclusão da busca de perfis privados e públicos.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fetchTotalBannedUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchTotalBannedUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin-statistics/admin-statistics.component.ts:216\n                        \n                    \n\n\n            \n                \n                        Busca o total de utilizadors banidos.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fetchTotalComments\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchTotalComments()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin-statistics/admin-statistics.component.ts:228\n                        \n                    \n\n\n            \n                \n                        Busca o total de comentários.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fetchTotalRegisteredUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchTotalRegisteredUsers(callback?: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin-statistics/admin-statistics.component.ts:200\n                        \n                    \n\n\n            \n                \n                        Busca o total de utilizadors registrados e chama a função de retorno, se fornecida.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Uma função de retorno opcional para chamar após a conclusão da busca.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadBannedVsRegisteredData\n                        \n                    \n                \n            \n            \n                \nloadBannedVsRegisteredData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin-statistics/admin-statistics.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Carrega os dados de utilizadors banidos versus utilizadors registrados e define as opções do gráfico correspondente.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadProfileTypes\n                        \n                    \n                \n            \n            \n                \nloadProfileTypes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin-statistics/admin-statistics.component.ts:72\n                        \n                    \n\n\n            \n                \n                        Carrega os tipos de perfil (público/privado) e define as opções do gráfico de pizza correspondente.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin-statistics/admin-statistics.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBannedVsRegisteredChartOptions\n                        \n                    \n                \n            \n            \n                \nsetBannedVsRegisteredChartOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin-statistics/admin-statistics.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Define as opções do gráfico de pizza para exibir a comparação entre utilizadors banidos e registrados.\nCertifica-se de que os dados necessários estão carregados antes de configurar o gráfico.\nSe os dados de utilizadors banidos e registrados estiverem disponíveis, configura as opções do gráfico.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                void\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setProfileTypePieChartOptions\n                        \n                    \n                \n            \n            \n                \nsetProfileTypePieChartOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin-statistics/admin-statistics.component.ts:135\n                        \n                    \n\n\n            \n                \n                        Define as opções do gráfico de pizza para exibir a distribuição de perfis privados e públicos.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                void\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStaticDataPieChartOptions\n                        \n                    \n                \n            \n            \n                \nsetStaticDataPieChartOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin-statistics/admin-statistics.component.ts:168\n                        \n                    \n\n\n            \n                \n                        Define as opções do gráfico de pizza para exibir a distribuição de conteúdo estático, como filmes e séries.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                void\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chartBannedVsRegistered\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/admin-statistics/admin-statistics.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartProfileTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/admin-statistics/admin-statistics.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartStaticData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/admin-statistics/admin-statistics.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Highcharts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Highcharts\n                    \n                \n                    \n                        \n                                Defined in src/app/admin-statistics/admin-statistics.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalBannedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/admin-statistics/admin-statistics.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalComments\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/admin-statistics/admin-statistics.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPrivateProfiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/admin-statistics/admin-statistics.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPublicProfiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/admin-statistics/admin-statistics.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalRegisteredUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/admin-statistics/admin-statistics.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AdminService } from '../admin/service/admin.service';\nimport { AuthenticationService } from '../authentication/services/authentication.service';\nimport { Router } from '@angular/router';\nimport * as Highcharts from 'highcharts';\n\n\n@Component({\n  selector: 'app-admin-statistics',\n  templateUrl: './admin-statistics.component.html',\n  styleUrl: './admin-statistics.component.css'\n})\nexport class AdminStatisticsComponent {\n\n  totalRegisteredUsers: number | undefined;\n  totalBannedUsers: number | undefined;\n  totalPrivateProfiles: number | undefined;\n  totalPublicProfiles: number | undefined;\n  totalComments: number | undefined;\n\n  chartProfileTypes: any; \n  Highcharts: typeof Highcharts = Highcharts; // passar 'Highcharts' para o componente HTML\n  chartBannedVsRegistered: any;\n  chartStaticData: any;\n\n\n/**\n * Construtor da classe AdminStatisticsComponent.\n * \n * @param adminService O serviço responsável por operações administrativas.\n * @param authService O serviço de autenticação do utilizador.\n * @param router O serviço de roteamento para navegação entre páginas.\n */\n  constructor(\n    private adminService: AdminService,\n    private authService: AuthenticationService,\n    private router: Router \n) { }\n  ngOnInit(): void {\n    const currentUser = this.authService.getLoggedInUserName();\n    if (currentUser) {\n      // Obtem as roles do utilizador atual\n      this.authService.getUserRole(currentUser).subscribe({\n        next: (roles) => {\n          // Verifica se o utilizador tem a role de admin\n          if (!roles.includes('Admin')) {\n            this.router.navigate(['/']); // Redireciona para a página inicial se não for admin\n            return;\n          }\n          // Se for admin, executa as funções de busca\n          this.fetchTotalRegisteredUsers();\n          this.fetchTotalBannedUsers();\n          this.fetchProfileCounts();\n          this.fetchTotalComments();\n          this.loadProfileTypes();\n          this.loadBannedVsRegisteredData();\n          this.setStaticDataPieChartOptions();\n\n\n        },\n        error: (error) => console.error(\"Error fetching user roles:\", error)\n      });\n    } else {\n      // Se não estiver logado ou se o nome do utilizador não estiver disponível, redireciona\n      this.router.navigate(['/']);\n    }\n  }\n\n/**\n * Carrega os tipos de perfil (público/privado) e define as opções do gráfico de pizza correspondente.\n */\n  loadProfileTypes(): void {\n    this.fetchProfileCounts(() => {\n      this.setProfileTypePieChartOptions();\n    });\n  }\n\n/**\n * Carrega os dados de utilizadors banidos versus utilizadors registrados e define as opções do gráfico correspondente.\n */\n  loadBannedVsRegisteredData(): void {\n    // Executa em paralelo o carregamento dos utilizadors banidos e registrados\n    this.fetchTotalBannedUsers();\n    this.fetchTotalRegisteredUsers(() => {\n      this.setBannedVsRegisteredChartOptions();\n    });\n  }\n\n  /**\n * Define as opções do gráfico de pizza para exibir a comparação entre utilizadors banidos e registrados.\n * \n * Certifica-se de que os dados necessários estão carregados antes de configurar o gráfico.\n * \n * @remarks\n * Se os dados de utilizadors banidos e registrados estiverem disponíveis, configura as opções do gráfico.\n * \n * @returns void\n */\n  setBannedVsRegisteredChartOptions(): void {\n    // Assegura-se de que os dados necessários estão carregados\n    if (this.totalBannedUsers !== undefined && this.totalRegisteredUsers !== undefined) {\n      this.chartBannedVsRegistered = {\n        chart: {\n          type: 'pie',\n          options3d: {\n            enabled: true,\n            alpha: 45\n          }\n        },\n        title: {\n          text: 'Utilizadores Banidos vs Registrados'\n        },\n        plotOptions: {\n          pie: {\n            innerSize: 100,\n            depth: 45\n          }\n        },\n        series: [{\n          name: 'Quantidade',\n          data: [\n            ['Utilizadores Banidos', this.totalBannedUsers],\n            ['Utilizadores Registrados', this.totalRegisteredUsers]\n          ]\n        }]\n      };\n    }\n  }\n\n  /**\n * Define as opções do gráfico de pizza para exibir a distribuição de perfis privados e públicos.\n * \n * @returns void\n */\n  setProfileTypePieChartOptions(): void {\n    this.chartProfileTypes = {\n      chart: {\n        type: 'pie',\n        options3d: {\n          enabled: true,\n          alpha: 45\n        }\n      },\n      title: {\n        text: 'Distribuição de Perfis Privados e Públicos'\n      },\n      plotOptions: {\n        pie: {\n          innerSize: 100,\n          depth: 45\n        }\n      },\n      series: [{\n        name: 'Quantidade',\n        data: [\n          ['Perfis Privados', this.totalPrivateProfiles],\n          ['Perfis Públicos', this.totalPublicProfiles]\n        ]\n      }]\n    };\n  }\n\n  /**\n * Define as opções do gráfico de pizza para exibir a distribuição de conteúdo estático, como filmes e séries.\n * \n * @returns void\n */\n  setStaticDataPieChartOptions(): void {\n    this.chartStaticData = {\n      chart: {\n        type: 'pie',\n        options3d: {\n          enabled: true,\n          alpha: 45\n        }\n      },\n      title: {\n        text: 'Distribuição de Conteúdo'\n      },\n      plotOptions: {\n        pie: {\n          innerSize: 100,\n          depth: 45\n        }\n      },\n      series: [{\n        name: 'Quantidade',\n        data: [\n          ['Filmes', 1004099],\n          ['Séries/TV Shows', 170368],\n        ]\n      }]\n    };\n  }\n\n  /**\n * Busca o total de utilizadors registrados e chama a função de retorno, se fornecida.\n * @param callback Uma função de retorno opcional para chamar após a conclusão da busca.\n */\n  private fetchTotalRegisteredUsers(callback?: () => void): void {\n    this.adminService.getTotalRegisteredUsers().subscribe({\n      next: (totalUsers) => {\n        this.totalRegisteredUsers = totalUsers;\n        if (callback) callback();\n      },\n      error: (error) => console.error(\"Error fetching total registered users:\", error)\n    });\n  }\n\n\n\n\n/**\n * Busca o total de utilizadors banidos.\n */\n  private fetchTotalBannedUsers(): void {\n    this.adminService.getTotalBannedUsers().subscribe({\n      next: (total) => {\n        this.totalBannedUsers = total;\n      },\n      error: (error) => console.error(\"Error fetching total banned users:\", error)\n    });\n  }\n\n  /**\n * Busca o total de comentários.\n */\n  private fetchTotalComments(): void {\n    this.adminService.getTotalComments().subscribe({\n      next: (total) => {\n        this.totalComments = total;\n      },\n      error: (error) => console.error(\"Error fetching total comments :\", error)\n    });\n  }\n\n  /**\n * Busca o total de perfis privados e chama a função de retorno, se fornecida.\n * Em seguida, busca o total de perfis públicos e chama a função de retorno novamente.\n * @param callback Uma função de retorno opcional para chamar após a conclusão da busca de perfis privados e públicos.\n */\n  private fetchProfileCounts(callback?: () => void): void {\n    this.adminService.getTotalPrivateProfiles().subscribe({\n      next: (total) => {\n        this.totalPrivateProfiles = total;\n        if (callback) callback();\n      },\n      error: (error) => console.error(\"Error fetching total private profiles:\", error)\n    });\n\n    this.adminService.getTotalPublicProfiles().subscribe({\n      next: (total) => {\n        this.totalPublicProfiles = total;\n        if (callback) callback();\n      },\n      error: (error) => console.error(\"Error fetching total public profiles:\", error)\n    });\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n         Voltar\n      \n      Estatísticas de Adminstração\n    \n\n    \n    \n\n    \n      Utilizadores\n\n      \n        \n        \n          \n            \n              Utilizadores Registados\n              {{ totalRegisteredUsers }}\n            \n          \n        \n\n        \n        \n          \n            \n              Utilizadores Banidos\n              {{ totalBannedUsers }}\n            \n          \n        \n      \n    \n\n    \n    \n      \n      \n    \n\n\n    \n      \n        \n        \n          \n            \n              Total de Utilizadores com Perfil Privado:\n               {{ totalPrivateProfiles }}\n            \n          \n        \n\n        \n        \n          \n            \n              Total de Utilizadores com Perfil Publico:\n               {{ totalPublicProfiles }}\n            \n          \n        \n      \n    \n\n    \n      \n      \n    \n\n\n    \n      \n      Media\n\n      \n        \n        \n          \n            \n               Total de Filmes:\n                1 004 099\n            \n          \n        \n\n        \n        \n          \n            \n              Total de Series/Tv Shows:\n               170 368 \n            \n          \n        \n      \n    \n\n    \n      \n      \n    \n\n    \n      \n        \n        \n          \n            \n              Comentários em Media\n              {{ totalComments }}\n            \n          \n        \n\n        \n        \n          \n            \n              Aproximadamente um Total de Episodios: \n               4 493 577 \n            \n          \n        \n      \n    \n\n\n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     Voltar            Estatísticas de Adminstração                      Utilizadores                                                          Utilizadores Registados              {{ totalRegisteredUsers }}                                                                                  Utilizadores Banidos              {{ totalBannedUsers }}                                                                                                                              Total de Utilizadores com Perfil Privado:               {{ totalPrivateProfiles }}                                                                                  Total de Utilizadores com Perfil Publico:               {{ totalPublicProfiles }}                                                                            Media                                                           Total de Filmes:                1 004 099                                                                                  Total de Series/Tv Shows:               170 368                                                                                                                           Comentários em Media              {{ totalComments }}                                                                                  Aproximadamente um Total de Episodios:                4 493 577                                           '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminStatisticsComponent', 'selector': 'app-admin-statistics'},{'name': 'AllMoviesPageComponent', 'selector': 'app-all-movies-page'},{'name': 'AllSeriesPageComponent', 'selector': 'app-all-series-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'authentication-button'},{'name': 'BlockedAccountComponent', 'selector': 'app-blocked-account'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GamificationComponent', 'selector': 'app-gamification'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MovieDetailsComponent', 'selector': 'app-movie-details'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'PendingVerificationComponent', 'selector': 'app-pending-verification'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterWithThirdPartyComponent', 'selector': 'app-register-with-third-party'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchServiceComponent', 'selector': 'app-search-service'},{'name': 'SeasonDetailsComponent', 'selector': 'app-season-details'},{'name': 'SeasonDetailsInfoComponent', 'selector': 'app-season-details-info'},{'name': 'SendEmailComponent', 'selector': 'app-send-email'},{'name': 'SeriesDetailsComponent', 'selector': 'app-series-details'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'SuspendedAccountComponent', 'selector': 'app-suspended-account'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminStatisticsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AllMoviesPageComponent.html":{"url":"components/AllMoviesPageComponent.html","title":"component - AllMoviesPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AllMoviesPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/media/movies/all-movies-page/all-movies-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-all-movies-page\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./all-movies-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./all-movies-page.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                currentUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchMovies\n                            \n                            \n                                fetchRecommendedMovies\n                            \n                            \n                                getCategoryActiveIndex\n                            \n                            \n                                getCategoryResults\n                            \n                            \n                                getRows\n                            \n                            \n                                initCategories\n                            \n                            \n                                nextCategory\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                prevCategory\n                            \n                            \n                                toggleShowAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: Router, service: MovieApiServiceComponent, authService: AuthenticationService, profileService: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/media/movies/all-movies-page/all-movies-page.component.ts:28\n                            \n                        \n\n                \n                    \n                            Construtor da classe.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço de roteamento.\n\n                                                        \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        MovieApiServiceComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço de API de filmes.\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço de autenticação.\n\n                                                        \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço de perfil de utilizador.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchMovies\n                        \n                    \n                \n            \n            \n                \nfetchMovies()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/movies/all-movies-page/all-movies-page.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Método executado quando o componente é inicializado.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchRecommendedMovies\n                        \n                    \n                \n            \n            \n                \nfetchRecommendedMovies()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/movies/all-movies-page/all-movies-page.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Busca os filmes recomendados com base no histórico do utilizador.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategoryActiveIndex\n                        \n                    \n                \n            \n            \n                \ngetCategoryActiveIndex(categoryName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/movies/all-movies-page/all-movies-page.component.ts:150\n                        \n                    \n\n\n            \n                \n                        Obtém o índice ativo da categoria especificada.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome da categoria.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                O índice ativo da categoria.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategoryResults\n                        \n                    \n                \n            \n            \n                \ngetCategoryResults(categoryName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/movies/all-movies-page/all-movies-page.component.ts:139\n                        \n                    \n\n\n            \n                \n                        Obtém os resultados da categoria especificada.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome da categoria.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                Uma matriz contendo os resultados da categoria.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRows\n                        \n                    \n                \n            \n            \n                \ngetRows(movies: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/movies/all-movies-page/all-movies-page.component.ts:200\n                        \n                    \n\n\n            \n                \n                        Converte uma matriz de filmes em uma matriz de linhas, cada uma contendo até 4 filmes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                movies\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    A matriz de filmes.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                Uma matriz de linhas de filmes.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initCategories\n                        \n                    \n                \n            \n            \n                \ninitCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/movies/all-movies-page/all-movies-page.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Inicializa as categorias de filmes.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextCategory\n                        \n                    \n                \n            \n            \n                \nnextCategory(categoryName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/movies/all-movies-page/all-movies-page.component.ts:160\n                        \n                    \n\n\n            \n                \n                        Navega para o próximo lote de resultados da categoria especificada.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome da categoria.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/movies/all-movies-page/all-movies-page.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Método executado quando o componente é inicializado.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prevCategory\n                        \n                    \n                \n            \n            \n                \nprevCategory(categoryName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/movies/all-movies-page/all-movies-page.component.ts:174\n                        \n                    \n\n\n            \n                \n                        Navega para o lote de resultados anterior da categoria especificada.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome da categoria.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShowAll\n                        \n                    \n                \n            \n            \n                \ntoggleShowAll(categoryName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/movies/all-movies-page/all-movies-page.component.ts:187\n                        \n                    \n\n\n            \n                \n                        Alterna a exibição de todos os resultados da categoria especificada.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome da categoria.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MovieCategory[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/media/movies/all-movies-page/all-movies-page.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/media/movies/all-movies-page/all-movies-page.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MovieApiServiceComponent } from '../../api/movie-api-service/movie-api-service.component';\nimport { AuthenticationService } from '../../../authentication/services/authentication.service';\nimport { ProfileService } from '../../../profile/services/profile.service';\nimport { flatMap, forkJoin, map, switchMap } from 'rxjs';\n\n\n\ninterface MovieCategory {\n  name: string;\n  results: any[];\n  activeIndex: number;\n  showAll: boolean; \n\n}\n@Component({\n  selector: 'app-all-movies-page',\n  templateUrl: './all-movies-page.component.html',\n  styleUrl: './all-movies-page.component.css'\n})\n\n/**\n * Componente responsável por exibir todas as categorias de filmes.\n */\nexport class AllMoviesPageComponent {\n  categories: MovieCategory[] = [];\n  currentUser: any;\n\n\n   /**\n   * Construtor da classe.\n   * @param route Serviço de roteamento.\n   * @param service Serviço de API de filmes.\n   * @param authService Serviço de autenticação.\n   * @param profileService Serviço de perfil de utilizador.\n   */\n  constructor(private route: Router,\n    private service: MovieApiServiceComponent,\n    private authService: AuthenticationService,\n    private profileService: ProfileService,\n\n) { }\n\n  /** Método executado quando o componente é inicializado. */\n  ngOnInit(): void {\n    this.currentUser = this.authService.getLoggedInUserName();\n    this.initCategories();\n    this.fetchRecommendedMovies();\n  }\n  /** Inicializa as categorias de filmes. */\n\n  initCategories() {\n    this.categories = [\n      { name: 'Filmes em Destaque', results: [], activeIndex: 0, showAll: false },\n      { name: 'Filmes de Ação', results: [], activeIndex: 0, showAll: false },\n      { name: 'Filmes de Aventura', results: [], activeIndex: 0, showAll: false },\n      { name: 'Filmes de Comédia', results: [], activeIndex: 0, showAll: false },\n      { name: 'Filmes de Animação', results: [], activeIndex: 0, showAll: false },\n      { name: 'Filmes Documentário', results: [], activeIndex: 0, showAll: false },\n      { name: 'Filmes de Ficção Científica', results: [], activeIndex: 0, showAll: false },\n      { name: 'Filmes de Thriller', results: [], activeIndex: 0, showAll: false },\n    ];\n\n    this.fetchMovies();\n  }\n\n  /** Método executado quando o componente é inicializado. */\n  fetchMovies() {\n    const fetchMethods = [\n     \n      this.service.trendingMovieApiData(),\n      this.service.fetchActionMovies(),\n      this.service.fetchAdventureMovies(),\n      this.service.fetchComedyMovies(),\n      this.service.fetchAnimationMovies(),\n      this.service.fetchDocumentaryMovies(),\n      this.service.fetchScienceFictionMovies(),\n      this.service.fetchThrillerMovies(),\n    ];\n\n    fetchMethods.forEach((fetchMethod, index) => {\n      fetchMethod.subscribe((result) => {\n        this.categories[index].results = result.results;\n      });\n    });\n  }\n\n  /** Busca os filmes recomendados com base no histórico do utilizador. */\n\n  fetchRecommendedMovies(): void {\n    this.profileService.getUserWatchedMedia(this.currentUser).pipe(\n      switchMap((watchedMedia: any[]) => {\n        const movieIds = watchedMedia\n          .filter(media => media.type === 'movie')\n          .map(media => media.mediaId);\n        return forkJoin(movieIds.map(id => this.service.getSimilarMovie(id)));\n      }),\n      map(movieArrays => movieArrays.flatMap(movies => movies.results)),\n      map(recommendedMovies => {\n        const uniqueMovieIds = new Set();\n        const uniqueMovies = [];\n        console.log(recommendedMovies);\n        for (const movie of recommendedMovies) {\n          if (movie.poster_path && !uniqueMovieIds.has(movie.id)) {\n            uniqueMovieIds.add(movie.id);\n            uniqueMovies.unshift(movie); \n          }\n        }\n\n        return uniqueMovies.slice(0, 100);\n      })\n    ).subscribe((uniqueRecommendedMovies: any[]) => {\n      const recommendedCategoryIndex = this.categories.findIndex(category => category.name === 'Filmes Sugeridos');\n      if (recommendedCategoryIndex !== -1) {\n\n        this.categories[recommendedCategoryIndex].results = [\n          ...uniqueRecommendedMovies,\n          ...this.categories[recommendedCategoryIndex].results,\n        ];\n      } else {\n\n        this.categories.unshift({\n          name: 'Filmes Sugeridos',\n          results: uniqueRecommendedMovies,\n          activeIndex: 0,\n          showAll: false\n        });\n      }\n    });\n  }\n\n\n  /**\n   * Obtém os resultados da categoria especificada.\n   * @param categoryName O nome da categoria.\n   * @returns Uma matriz contendo os resultados da categoria.\n   */\n  getCategoryResults(categoryName: string): any[] {\n    const category = this.categories.find(cat => cat.name === categoryName);\n    return category ? category.results : [];\n  }\n\n    /**\n   * Obtém o índice ativo da categoria especificada.\n   * @param categoryName O nome da categoria.\n   * @returns O índice ativo da categoria.\n   */\n\n  getCategoryActiveIndex(categoryName: string): number {\n    const category = this.categories.find(cat => cat.name === categoryName);\n    return category ? category.activeIndex : 0;\n  }\n\n\n   /**\n   * Navega para o próximo lote de resultados da categoria especificada.\n   * @param categoryName O nome da categoria.\n   */\n  nextCategory(categoryName: string) {\n    const category = this.categories.find(cat => cat.name === categoryName);\n    if (category) {\n      const batchSize = 4; // Defina o tamanho do lote aqui\n      const newIndex = category.activeIndex + batchSize;\n      category.activeIndex = newIndex >= category.results.length ? 0 : newIndex;\n    }\n  }\n\n    /**\n   * Navega para o lote de resultados anterior da categoria especificada.\n   * @param categoryName O nome da categoria.\n   */\n\n  prevCategory(categoryName: string) {\n    const category = this.categories.find(cat => cat.name === categoryName);\n    if (category) {\n      const batchSize = 4; // Defina o tamanho do lote aqui\n      const newIndex = category.activeIndex - batchSize;\n      category.activeIndex = newIndex  cat.name === categoryName);\n    if (category) {\n      category.showAll = !category.showAll;\n    }\n  }\n\n  \n  /**\n   * Converte uma matriz de filmes em uma matriz de linhas, cada uma contendo até 4 filmes.\n   * @param movies A matriz de filmes.\n   * @returns Uma matriz de linhas de filmes.\n   */\n  getRows(movies: any[]) {\n    const rows = [];\n    for (let i = 0; i \n    \n\n    \n        \n  \n    \n      {{ category?.name }}\n      {{ category?.showAll ? 'Mostrar menos' : 'Expandir' }}\n    \n    \n      &lt;\n      \n        \n      \n      &gt;\n    \n    \n      \n\n        \n          \n        \n\n\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ category?.name }}      {{ category?.showAll ? \\'Mostrar menos\\' : \\'Expandir\\' }}                                        >                                                    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminStatisticsComponent', 'selector': 'app-admin-statistics'},{'name': 'AllMoviesPageComponent', 'selector': 'app-all-movies-page'},{'name': 'AllSeriesPageComponent', 'selector': 'app-all-series-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'authentication-button'},{'name': 'BlockedAccountComponent', 'selector': 'app-blocked-account'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GamificationComponent', 'selector': 'app-gamification'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MovieDetailsComponent', 'selector': 'app-movie-details'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'PendingVerificationComponent', 'selector': 'app-pending-verification'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterWithThirdPartyComponent', 'selector': 'app-register-with-third-party'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchServiceComponent', 'selector': 'app-search-service'},{'name': 'SeasonDetailsComponent', 'selector': 'app-season-details'},{'name': 'SeasonDetailsInfoComponent', 'selector': 'app-season-details-info'},{'name': 'SendEmailComponent', 'selector': 'app-send-email'},{'name': 'SeriesDetailsComponent', 'selector': 'app-series-details'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'SuspendedAccountComponent', 'selector': 'app-suspended-account'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AllMoviesPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AllSeriesPageComponent.html":{"url":"components/AllSeriesPageComponent.html","title":"component - AllSeriesPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AllSeriesPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/media/series/all-series-page/all-series-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-all-series-page\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./all-series-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./all-series-page.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                currentUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchAiringAndWatchedSeriesAndNotify\n                            \n                            \n                                fetchMovies\n                            \n                            \n                                fetchRecommendedSeries\n                            \n                            \n                                getCategoryActiveIndex\n                            \n                            \n                                getCategoryResults\n                            \n                            \n                                getRows\n                            \n                            \n                                initCategories\n                            \n                            \n                                nextCategory\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                prevCategory\n                            \n                            \n                                toggleShowAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: Router, service: MovieApiServiceComponent, authService: AuthenticationService, notificationService: NotificationService, profileService: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/media/series/all-series-page/all-series-page.component.ts:30\n                            \n                        \n\n                \n                    \n                            Construtor da classe AllSeriesPageComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O serviço de roteamento.\n\n                                                        \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        MovieApiServiceComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O serviço da API de filmes.\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O serviço de autenticação.\n\n                                                        \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O serviço de notificações.\n\n                                                        \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O serviço de perfil do utilizador.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchAiringAndWatchedSeriesAndNotify\n                        \n                    \n                \n            \n            \n                \nfetchAiringAndWatchedSeriesAndNotify()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/series/all-series-page/all-series-page.component.ts:216\n                        \n                    \n\n\n            \n                \n                        Busca as séries que estão sendo transmitidas hoje e notifica o utilizador sobre novos episódios disponíveis.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchMovies\n                        \n                    \n                \n            \n            \n                \nfetchMovies()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/series/all-series-page/all-series-page.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Recupera as séries para cada categoria e as atualiza na respectiva categoria.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchRecommendedSeries\n                        \n                    \n                \n            \n            \n                \nfetchRecommendedSeries()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/series/all-series-page/all-series-page.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Recupera as séries recomendadas para o utilizador e as adiciona à categoria \"Séries Sugeridas\".\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategoryActiveIndex\n                        \n                    \n                \n            \n            \n                \ngetCategoryActiveIndex(categoryName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/series/all-series-page/all-series-page.component.ts:154\n                        \n                    \n\n\n            \n                \n                        Retorna o índice ativo da categoria especificada.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome da categoria.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                O índice ativo da categoria.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategoryResults\n                        \n                    \n                \n            \n            \n                \ngetCategoryResults(categoryName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/series/all-series-page/all-series-page.component.ts:144\n                        \n                    \n\n\n            \n                \n                        Retorna os resultados da categoria especificada.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome da categoria.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                Um array contendo os resultados da categoria.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRows\n                        \n                    \n                \n            \n            \n                \ngetRows(movies: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/series/all-series-page/all-series-page.component.ts:205\n                        \n                    \n\n\n            \n                \n                        Divide os filmes em linhas de 4 filmes cada.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                movies\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Um array de filmes.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                Um array de linhas de filmes, cada uma contendo até 4 filmes.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initCategories\n                        \n                    \n                \n            \n            \n                \ninitCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/series/all-series-page/all-series-page.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Inicializa as categorias de séries com os nomes e resultados iniciais.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextCategory\n                        \n                    \n                \n            \n            \n                \nnextCategory(categoryName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/series/all-series-page/all-series-page.component.ts:164\n                        \n                    \n\n\n            \n                \n                        Avança para o próximo lote de resultados da categoria especificada.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome da categoria.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/series/all-series-page/all-series-page.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Método executado ao inicializar o componente.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prevCategory\n                        \n                    \n                \n            \n            \n                \nprevCategory(categoryName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/series/all-series-page/all-series-page.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Retrocede para o lote anterior de resultados da categoria especificada.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome da categoria.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShowAll\n                        \n                    \n                \n            \n            \n                \ntoggleShowAll(categoryName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/series/all-series-page/all-series-page.component.ts:192\n                        \n                    \n\n\n            \n                \n                        Alterna a exibição de todos os resultados da categoria especificada.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome da categoria.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MovieCategory[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/media/series/all-series-page/all-series-page.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/media/series/all-series-page/all-series-page.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MovieApiServiceComponent } from '../../api/movie-api-service/movie-api-service.component';\nimport { AuthenticationService } from '../../../authentication/services/authentication.service';\nimport { ProfileService } from '../../../profile/services/profile.service';\nimport { forkJoin, map, switchMap } from 'rxjs';\nimport { NotificationService } from '../../../notifications/services/notification.service';\nimport { MediaNotificationModel } from '../../../notifications/models/media-notification-model';\n\n\ninterface MovieCategory {\n  name: string;\n  results: any[];\n  activeIndex: number;\n  showAll: boolean;\n\n}\n\n@Component({\n  selector: 'app-all-series-page',\n  templateUrl: './all-series-page.component.html',\n  styleUrl: './all-series-page.component.css'\n})\n\n/**\n * A classe `AllSeriesPageComponent` representa o componente da página que exibe todas as séries.\n */\nexport class AllSeriesPageComponent {\n  categories: MovieCategory[] = [];\n  currentUser: any;\n\n  /**\n   * Construtor da classe `AllSeriesPageComponent`.\n   * \n   * @param route O serviço de roteamento.\n   * @param service O serviço da API de filmes.\n   * @param authService O serviço de autenticação.\n   * @param notificationService O serviço de notificações.\n   * @param profileService O serviço de perfil do utilizador.\n   */\n  constructor(private route: Router,\n    private service: MovieApiServiceComponent,\n    private authService: AuthenticationService,\n    private notificationService: NotificationService,\n    private profileService: ProfileService) { }\n\n     /**\n   * Método executado ao inicializar o componente.\n   */\n  ngOnInit(): void {\n    this.currentUser = this.authService.getLoggedInUserName();\n    this.initCategories();\n    this.fetchRecommendedSeries();\n    this.fetchAiringAndWatchedSeriesAndNotify();\n  }\n\n/**\n   * Recupera as séries recomendadas para o utilizador e as adiciona à categoria \"Séries Sugeridas\".\n   */\n  fetchRecommendedSeries(): void {\n    this.profileService.getUserWatchedMedia(this.currentUser).pipe(\n      switchMap((watchedMedia: any[]) => {\n        const movieIds = watchedMedia\n          .filter(media => media.type === 'serie')\n          .map(media => media.mediaId);\n        return forkJoin(movieIds.map(id => this.service.getSimilarSerie(id)));\n      }),\n      map(movieArrays => movieArrays.flatMap(movies => movies.results)),\n      map(recommendedMovies => {\n        const uniqueMovieIds = new Set();\n        const uniqueMovies = [];\n        console.log(recommendedMovies);\n        for (const movie of recommendedMovies) {\n          if (movie.poster_path && !uniqueMovieIds.has(movie.id)) {\n            uniqueMovieIds.add(movie.id);\n            uniqueMovies.unshift(movie);\n          }\n        }\n\n        return uniqueMovies.slice(0, 100);\n      })\n    ).subscribe((uniqueRecommendedMovies: any[]) => {\n      const recommendedCategoryIndex = this.categories.findIndex(category => category.name === 'Series Sugeridas');\n      if (recommendedCategoryIndex !== -1) {\n\n        this.categories[recommendedCategoryIndex].results = [\n          ...uniqueRecommendedMovies,\n          ...this.categories[recommendedCategoryIndex].results,\n        ];\n      } else {\n\n        this.categories.unshift({\n          name: 'Series Sugeridas',\n          results: uniqueRecommendedMovies,\n          activeIndex: 0,\n          showAll: false\n        });\n      }\n    });\n  }\n   /**\n   * Inicializa as categorias de séries com os nomes e resultados iniciais.\n   */\n  initCategories() {\n    this.categories = [\n      { name: 'Séries em Destaque', results: [], activeIndex: 0, showAll: false },\n      { name: 'Séries em Produção', results: [], activeIndex: 0, showAll: false },\n      { name: 'Séries de Ação e Aventura', results: [], activeIndex: 0, showAll: false },\n      { name: 'Séries de Drama', results: [], activeIndex: 0, showAll: false },\n      { name: 'Séries de Mistério', results: [], activeIndex: 0, showAll: false },\n      { name: 'Séries de Animação', results: [], activeIndex: 0, showAll: false },\n\n    ];\n\n    this.fetchMovies();\n  } \n\n /**\n   * Recupera as séries para cada categoria e as atualiza na respectiva categoria.\n   */\n  fetchMovies() {\n    const fetchMethods = [\n      this.service.fetchTopRatedSeries(),\n      this.service.getAiringSeries(),\n      this.service.fetchActionAndAdvetureSeries(),\n      this.service.fetchDramaSeries(),\n      this.service.fetchMysterySeries(),\n      this.service.fetchAnimationSeries(),\n  ];\n\n    fetchMethods.forEach((fetchMethod, index) => {\n      fetchMethod.subscribe((result) => {\n        this.categories[index].results = result.results;\n      });\n    });\n  }\n\n/**\n * Retorna os resultados da categoria especificada.\n * \n * @param categoryName O nome da categoria.\n * @returns Um array contendo os resultados da categoria.\n */\n  getCategoryResults(categoryName: string): any[] {\n    const category = this.categories.find(cat => cat.name === categoryName);\n    return category ? category.results : [];\n  }\n/**\n * Retorna o índice ativo da categoria especificada.\n * \n * @param categoryName O nome da categoria.\n * @returns O índice ativo da categoria.\n */\n  getCategoryActiveIndex(categoryName: string): number {\n    const category = this.categories.find(cat => cat.name === categoryName);\n    return category ? category.activeIndex : 0;\n  }\n\n/**\n * Avança para o próximo lote de resultados da categoria especificada.\n * \n * @param categoryName O nome da categoria.\n */\n  nextCategory(categoryName: string) {\n    const category = this.categories.find(cat => cat.name === categoryName);\n    if (category) {\n      const batchSize = 4; // Defina o tamanho do lote aqui\n      const newIndex = category.activeIndex + batchSize;\n      category.activeIndex = newIndex >= category.results.length ? 0 : newIndex;\n    }\n  }\n\n/**\n * Retrocede para o lote anterior de resultados da categoria especificada.\n * \n * @param categoryName O nome da categoria.\n */\n  prevCategory(categoryName: string) {\n    const category = this.categories.find(cat => cat.name === categoryName);\n    if (category) {\n      const batchSize = 4; // Defina o tamanho do lote aqui\n      const newIndex = category.activeIndex - batchSize;\n      category.activeIndex = newIndex  cat.name === categoryName);\n    if (category) {\n      category.showAll = !category.showAll;\n    }\n  }\n\n/**\n * Divide os filmes em linhas de 4 filmes cada.\n * \n * @param movies Um array de filmes.\n * @returns Um array de linhas de filmes, cada uma contendo até 4 filmes.\n */\n  getRows(movies: any[]) {\n    const rows = [];\n    for (let i = 0; i  {\n        const watchedSeriesIds = new Set(results.watchedMedia.map(media => media.mediaId));\n        const airingSeriesToNotify = results.airingToday.results.filter(\n          (series: any) => watchedSeriesIds.has(series.id)\n        );\n\n        return forkJoin(\n          airingSeriesToNotify.map((series: any) => \n            this.notificationService.notifyNewEpisode(\n              new MediaNotificationModel(\n                this.currentUser,\n                `Novo episódio disponível para ${series.name}!`,\n                new Date(),\n                false,\n                'NewMedia',\n                series.mediaId,\n                series.name,\n                series.poster_path,\n                series.id, \n              )\n            )\n          )\n        );\n      })\n    ).subscribe({\n      next: () => console.log('Notificações para novos episódios enviadas com sucesso.'),\n      error: (error) => console.error('Erro ao enviar notificações para novos episódios', error)\n    });\n  }\n\n\n\n\n\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ category?.name }}\n      {{ category?.showAll ? 'Mostrar menos' : 'Expandir' }}\n    \n    \n      &lt;\n      \n        \n      \n      &gt;\n    \n    \n      \n        \n                  \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ category?.name }}      {{ category?.showAll ? \\'Mostrar menos\\' : \\'Expandir\\' }}                                        >                                                    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminStatisticsComponent', 'selector': 'app-admin-statistics'},{'name': 'AllMoviesPageComponent', 'selector': 'app-all-movies-page'},{'name': 'AllSeriesPageComponent', 'selector': 'app-all-series-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'authentication-button'},{'name': 'BlockedAccountComponent', 'selector': 'app-blocked-account'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GamificationComponent', 'selector': 'app-gamification'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MovieDetailsComponent', 'selector': 'app-movie-details'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'PendingVerificationComponent', 'selector': 'app-pending-verification'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterWithThirdPartyComponent', 'selector': 'app-register-with-third-party'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchServiceComponent', 'selector': 'app-search-service'},{'name': 'SeasonDetailsComponent', 'selector': 'app-season-details'},{'name': 'SeasonDetailsInfoComponent', 'selector': 'app-season-details-info'},{'name': 'SendEmailComponent', 'selector': 'app-send-email'},{'name': 'SeriesDetailsComponent', 'selector': 'app-series-details'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'SuspendedAccountComponent', 'selector': 'app-suspended-account'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AllSeriesPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                refreshUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthenticationService, title: Title, chatService: ChatService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        refreshUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Component, HostListener, OnInit } from '@angular/core';\nimport { AuthenticationService } from './authentication/services/authentication.service';\nimport { Title } from '@angular/platform-browser';\nimport { ChatService } from './chat/services/chat.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private http: HttpClient, private authService: AuthenticationService, private title: Title, private chatService: ChatService) { }\n\n  ngOnInit() {\n    this.refreshUser();\n    this.title.setTitle(\"Watchers World\");\n    this.chatService.startConnectionAndListen();\n  }\n\n  private refreshUser() {\n    const jwt = this.authService.getJWT();\n    if (jwt) {\n      this.authService.refreshUser(jwt).subscribe({\n        next: _ => { },\n        error: _ => {\n          this.authService.logout();\n        }\n      });\n    } else {\n      this.authService.refreshUser(null).subscribe();\n    }\n  }\n\n\n}\n\n    \n\n    \n        \n  \n  \n  \n    \n  \n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminStatisticsComponent', 'selector': 'app-admin-statistics'},{'name': 'AllMoviesPageComponent', 'selector': 'app-all-movies-page'},{'name': 'AllSeriesPageComponent', 'selector': 'app-all-series-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'authentication-button'},{'name': 'BlockedAccountComponent', 'selector': 'app-blocked-account'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GamificationComponent', 'selector': 'app-gamification'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MovieDetailsComponent', 'selector': 'app-movie-details'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'PendingVerificationComponent', 'selector': 'app-pending-verification'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterWithThirdPartyComponent', 'selector': 'app-register-with-third-party'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchServiceComponent', 'selector': 'app-search-service'},{'name': 'SeasonDetailsComponent', 'selector': 'app-season-details'},{'name': 'SeasonDetailsInfoComponent', 'selector': 'app-season-details-info'},{'name': 'SendEmailComponent', 'selector': 'app-send-email'},{'name': 'SeriesDetailsComponent', 'selector': 'app-series-details'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'SuspendedAccountComponent', 'selector': 'app-suspended-account'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAboutUsComponent\n\nAboutUsComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutUsComponent->AppModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAdminStatisticsComponent\n\nAdminStatisticsComponent\n\nAppModule -->\n\nAdminStatisticsComponent->AppModule\n\n\n\n\n\nAllMoviesPageComponent\n\nAllMoviesPageComponent\n\nAppModule -->\n\nAllMoviesPageComponent->AppModule\n\n\n\n\n\nAllSeriesPageComponent\n\nAllSeriesPageComponent\n\nAppModule -->\n\nAllSeriesPageComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChatComponent\n\nChatComponent\n\nAppModule -->\n\nChatComponent->AppModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nAppModule -->\n\nConfirmDialogComponent->AppModule\n\n\n\n\n\nEditProfileComponent\n\nEditProfileComponent\n\nAppModule -->\n\nEditProfileComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nGamificationComponent\n\nGamificationComponent\n\nAppModule -->\n\nGamificationComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoadingComponent\n\nLoadingComponent\n\nAppModule -->\n\nLoadingComponent->AppModule\n\n\n\n\n\nMovieDetailsComponent\n\nMovieDetailsComponent\n\nAppModule -->\n\nMovieDetailsComponent->AppModule\n\n\n\n\n\nNavMenuComponent\n\nNavMenuComponent\n\nAppModule -->\n\nNavMenuComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nAppModule -->\n\nSearchComponent->AppModule\n\n\n\n\n\nSearchServiceComponent\n\nSearchServiceComponent\n\nAppModule -->\n\nSearchServiceComponent->AppModule\n\n\n\n\n\nSeasonDetailsComponent\n\nSeasonDetailsComponent\n\nAppModule -->\n\nSeasonDetailsComponent->AppModule\n\n\n\n\n\nSeasonDetailsInfoComponent\n\nSeasonDetailsInfoComponent\n\nAppModule -->\n\nSeasonDetailsInfoComponent->AppModule\n\n\n\n\n\nSeriesDetailsComponent\n\nSeriesDetailsComponent\n\nAppModule -->\n\nSeriesDetailsComponent->AppModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nAppModule -->\n\nStatisticsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nChatService\n\nChatService\n\nAppModule -->\n\nChatService->AppModule\n\n\n\n\n\nDialogService\n\nDialogService\n\nAppModule -->\n\nDialogService->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\nLoadingInterceptor\n\nLoadingInterceptor\n\nAppModule -->\n\nLoadingInterceptor->AppModule\n\n\n\n\n\nMovieApiServiceComponent\n\nMovieApiServiceComponent\n\nAppModule -->\n\nMovieApiServiceComponent->AppModule\n\n\n\nAppModule -->\n\nMovieApiServiceComponent->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutUsComponent\n                        \n                        \n                            AdminComponent\n                        \n                        \n                            AdminStatisticsComponent\n                        \n                        \n                            AllMoviesPageComponent\n                        \n                        \n                            AllSeriesPageComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            ChatComponent\n                        \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            EditProfileComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            GamificationComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoadingComponent\n                        \n                        \n                            MovieDetailsComponent\n                        \n                        \n                            NavMenuComponent\n                        \n                        \n                            NotificationsComponent\n                        \n                        \n                            ProfileComponent\n                        \n                        \n                            SearchComponent\n                        \n                        \n                            SearchServiceComponent\n                        \n                        \n                            SeasonDetailsComponent\n                        \n                        \n                            SeasonDetailsInfoComponent\n                        \n                        \n                            SeriesDetailsComponent\n                        \n                        \n                            StatisticsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ChatService\n                        \n                        \n                            DialogService\n                        \n                        \n                            JwtInterceptor\n                        \n                        \n                            LoadingInterceptor\n                        \n                        \n                            MovieApiServiceComponent\n                        \n                        \n                            MovieApiServiceComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons';\nimport { HomeComponent } from './home/home.component';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ProfileComponent } from './profile/profile/profile.component';\nimport { JwtInterceptor } from './interceptors/jwt.interceptor';\nimport { LoadingInterceptor } from './interceptors/loading/loading-interceptor.service'\nimport { EditProfileComponent } from './profile/edit-profile/edit-profile.component';\nimport { FormsModule } from '@angular/forms';\nimport { AboutUsComponent } from './about-us/about-us.component';\nimport { AllMoviesPageComponent } from './media/movies/all-movies-page/all-movies-page.component';\nimport { MovieApiServiceComponent } from './media/api/movie-api-service/movie-api-service.component';\nimport { AllSeriesPageComponent } from './media/series/all-series-page/all-series-page.component';\nimport { MovieDetailsComponent } from './media/movies/movie-details/movie-details.component';\nimport { SeriesDetailsComponent } from './media/series/series-details/series-details.component';\nimport { LoadingComponent } from './loader/loading/loading.component';\nimport { SearchComponent } from './media/search/search.component';\nimport { SearchServiceComponent } from './media/search-service/search-service.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { SeasonDetailsComponent } from './season-details/season-details.component';\nimport { SeasonDetailsInfoComponent } from './season-details-info/season-details-info.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { StatisticsComponent } from './statistics/statistics.component';\nimport { NotificationsComponent } from './notifications/notifications/notifications.component';\nimport { GamificationComponent } from './gamification/gamification.component';\nimport { ChatService } from './chat/services/chat.service';\nimport { AdminStatisticsComponent } from './admin-statistics/admin-statistics.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\nimport { DialogService } from './confirm-dialog/services/dialog.service';\nimport { ConfirmBoxConfigModule, DialogConfigModule, NgxAwesomePopupModule, ToastNotificationConfigModule } from '@costlydeveloper/ngx-awesome-popup';\nimport { ToastModule } from 'primeng/toast'\nimport { MessageService } from 'primeng/api'\n\n\n\nimport { HighchartsChartModule } from 'highcharts-angular';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavMenuComponent,\n    FooterComponent,\n    ProfileComponent,\n    EditProfileComponent,\n    AboutUsComponent,\n    AllMoviesPageComponent,\n    AllSeriesPageComponent,\n    MovieDetailsComponent,\n    SeriesDetailsComponent,\n    LoadingComponent,\n    SearchComponent,\n    SearchServiceComponent,\n    AdminComponent,\n    SeasonDetailsComponent,\n    SeasonDetailsInfoComponent,\n    NotificationsComponent,\n    ChatComponent,\n    StatisticsComponent,\n    GamificationComponent,\n    AdminStatisticsComponent,\n    ConfirmDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    ToastModule,\n    HttpClientModule,\n    AppRoutingModule, FontAwesomeModule, ReactiveFormsModule, FormsModule, MatDialogModule,\n    NgxAwesomePopupModule.forRoot({\n      colorList: {\n        success: '#3caea3', \n        info: '#2f8ee5', \n        warning: '#ffc107', \n        danger: '#e46464', \n        customOne: '#3ebb1a',\n        customTwo: '#bd47fa',\n      },\n    }),\n    ConfirmBoxConfigModule.forRoot(),\n\n    DialogConfigModule.forRoot(), \n    ToastNotificationConfigModule.forRoot(),\n    AppRoutingModule, FontAwesomeModule, ReactiveFormsModule, FormsModule\n    , HighchartsChartModule\n\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true },\n    MovieApiServiceComponent,\n    MovieApiServiceComponent,\n    SearchServiceComponent,\n    ChatService,\n    DialogService,\n    MessageService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(library: FaIconLibrary) {\n    library.addIcons(faGoogle);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\nimport { ProfileComponent } from './profile/profile/profile.component';\nimport { AuthorizationGuard } from './guards/authorization.guard';\nimport { EditProfileComponent } from './profile/edit-profile/edit-profile.component';\nimport { AboutUsComponent } from './about-us/about-us.component';\nimport { AllMoviesPageComponent } from './media/movies/all-movies-page/all-movies-page.component';\nimport { AllSeriesPageComponent } from './media/series/all-series-page/all-series-page.component';\nimport { MovieDetailsComponent } from './media/movies/movie-details/movie-details.component';\nimport { SeriesDetailsComponent } from './media/series/series-details/series-details.component';\nimport { SearchComponent } from './media/search/search.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { SeasonDetailsComponent } from './season-details/season-details.component';\nimport { SeasonDetailsInfoComponent } from './season-details-info/season-details-info.component';\nimport { SuspendedAccountComponent } from './authentication/suspended-account/suspended-account.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { StatisticsComponent } from './statistics/statistics.component';\nimport { NotificationsComponent } from './notifications/notifications/notifications.component';\nimport { GamificationComponent } from './gamification/gamification.component';\nimport { AdminStatisticsComponent } from './admin-statistics/admin-statistics.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    canActivate: [AuthorizationGuard],\n    children: [\n      { path: 'profile', component: ProfileComponent }\n    ]\n  },\n  { path: 'home', component: HomeComponent },\n  { path: 'profile/:username', component: ProfileComponent },\n  { path: 'editProfile/:username', component: EditProfileComponent },\n  { path: 'account', loadChildren: () => \"import('./authentication/authentication.module').then(module => module.AuthenticationModule)\" },\n  { path: 'about-us', component: AboutUsComponent },\n  { path: 'all-movies-page', component: AllMoviesPageComponent },\n  { path: 'all-series-page', component: AllSeriesPageComponent },\n  { path: 'movie/:id', component: MovieDetailsComponent },\n  { path: 'serie/:id', component: SeriesDetailsComponent },\n  { path: 'admin', component: AdminComponent },\n  { path: 'notifications/:username', component: NotificationsComponent },\n  { path: 'suspendedAccount', component: SuspendedAccountComponent },\n  { path: 'chat', component: ChatComponent },\n  { path: 'chat/:username', component: ChatComponent },\n  { path: 'gamification/:username', component: GamificationComponent }, \n  { path: 'search', component: SearchComponent },\n  { path: 'search/:searchTerm', component: SearchComponent },\n  { path: 'serie/:id/season', component: SeasonDetailsComponent },\n  { path: 'serie/:id/season/:seasonNumber', component: SeasonDetailsInfoComponent },\n  { path: 'statistics/:username', component: StatisticsComponent },\n  { path: 'admin-statistics',component: AdminStatisticsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: false}), ReactiveFormsModule],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthenticationButtonComponent.html":{"url":"components/AuthenticationButtonComponent.html","title":"component - AuthenticationButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthenticationButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/authentication/components/authentication-button/authentication-button.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                authentication-button\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./authentication-button.component.html\n            \n\n\n\n            \n                styleUrl\n                ./authentication-button.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                            \n                                buttonType\n                            \n                            \n                                icon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/authentication/components/authentication-button/authentication-button.component.ts:12\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/authentication/components/authentication-button/authentication-button.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/authentication/components/authentication-button/authentication-button.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/authentication/components/authentication-button/authentication-button.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        buttonClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/authentication/components/authentication-button/authentication-button.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/components/authentication-button/authentication-button.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'authentication-button',\n  templateUrl: './authentication-button.component.html',\n  styleUrl: './authentication-button.component.css'\n})\nexport class AuthenticationButtonComponent {\n  @Input() buttonText: string = \"\";\n  @Input() buttonType: string = \"\";\n  @Input() icon: string = \"\";\n  @Output() buttonClick = new EventEmitter();\n\n  constructor() { }\n\n  onClick(): void {\n    this.buttonClick.emit();\n  }\n}\n\n    \n\n    \n        \n\n    \n    {{ buttonText }}\n \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ buttonText }} '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminStatisticsComponent', 'selector': 'app-admin-statistics'},{'name': 'AllMoviesPageComponent', 'selector': 'app-all-movies-page'},{'name': 'AllSeriesPageComponent', 'selector': 'app-all-series-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'authentication-button'},{'name': 'BlockedAccountComponent', 'selector': 'app-blocked-account'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GamificationComponent', 'selector': 'app-gamification'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MovieDetailsComponent', 'selector': 'app-movie-details'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'PendingVerificationComponent', 'selector': 'app-pending-verification'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterWithThirdPartyComponent', 'selector': 'app-register-with-third-party'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchServiceComponent', 'selector': 'app-search-service'},{'name': 'SeasonDetailsComponent', 'selector': 'app-season-details'},{'name': 'SeasonDetailsInfoComponent', 'selector': 'app-season-details-info'},{'name': 'SendEmailComponent', 'selector': 'app-send-email'},{'name': 'SeriesDetailsComponent', 'selector': 'app-series-details'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'SuspendedAccountComponent', 'selector': 'app-suspended-account'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthenticationButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthenticationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_imports\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\n\nAuthenticationButtonComponent\n\nAuthenticationButtonComponent\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nAuthenticationButtonComponent->AuthenticationModule\n\n\n\nAuthenticationModule -->\n\nAuthenticationButtonComponent->AuthenticationModule\n\n\n\n\n\nBlockedAccountComponent\n\nBlockedAccountComponent\n\nAuthenticationModule -->\n\nBlockedAccountComponent->AuthenticationModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthenticationModule -->\n\nLoginComponent->AuthenticationModule\n\n\n\n\n\nPendingVerificationComponent\n\nPendingVerificationComponent\n\nAuthenticationModule -->\n\nPendingVerificationComponent->AuthenticationModule\n\n\n\n\n\nRegisterWithThirdPartyComponent\n\nRegisterWithThirdPartyComponent\n\nAuthenticationModule -->\n\nRegisterWithThirdPartyComponent->AuthenticationModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAuthenticationModule -->\n\nRegistrationComponent->AuthenticationModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthenticationModule -->\n\nResetPasswordComponent->AuthenticationModule\n\n\n\n\n\nSendEmailComponent\n\nSendEmailComponent\n\nAuthenticationModule -->\n\nSendEmailComponent->AuthenticationModule\n\n\n\n\n\nSuspendedAccountComponent\n\nSuspendedAccountComponent\n\nAuthenticationModule -->\n\nSuspendedAccountComponent->AuthenticationModule\n\n\n\n\n\nAuthenticationRoutingModule\n\nAuthenticationRoutingModule\n\nAuthenticationModule -->\n\nAuthenticationRoutingModule->AuthenticationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/authentication/authentication.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthenticationButtonComponent\n                        \n                        \n                            AuthenticationButtonComponent\n                        \n                        \n                            BlockedAccountComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            PendingVerificationComponent\n                        \n                        \n                            RegisterWithThirdPartyComponent\n                        \n                        \n                            RegistrationComponent\n                        \n                        \n                            ResetPasswordComponent\n                        \n                        \n                            SendEmailComponent\n                        \n                        \n                            SuspendedAccountComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthenticationRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthenticationRoutingModule } from './authentication-routing/authentication-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { AuthenticationButtonComponent } from './components/authentication-button/authentication-button.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PendingVerificationComponent } from './pending-verification/pending-verification.component';\nimport { SuspendedAccountComponent } from './suspended-account/suspended-account.component';\nimport { BlockedAccountComponent } from './blocked-account/blocked-account.component';\nimport { SendEmailComponent } from './send-email/send-email.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { RegisterWithThirdPartyComponent } from './register-with-third-party/register-with-third-party.component';\n\n@NgModule({\n  declarations: [\n    AuthenticationButtonComponent,\n    LoginComponent,\n    RegistrationComponent,\n    AuthenticationButtonComponent,\n    PendingVerificationComponent,\n    BlockedAccountComponent,\n    SuspendedAccountComponent,\n    SendEmailComponent,\n    ResetPasswordComponent,\n    RegisterWithThirdPartyComponent,\n  ],\n  imports: [\n    CommonModule,\n    AuthenticationRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n  ],\n  exports: [\n    ReactiveFormsModule,\n    HttpClientModule\n  ]\n})\nexport class AuthenticationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationRoutingModule.html":{"url":"modules/AuthenticationRoutingModule.html","title":"module - AuthenticationRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthenticationRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/authentication/authentication-routing/authentication-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RegistrationComponent } from '../registration/registration.component';\nimport { LoginComponent } from '../login/login.component';\nimport { PendingVerificationComponent } from '../pending-verification/pending-verification.component';\nimport { SendEmailComponent } from '../send-email/send-email.component';\nimport { ResetPasswordComponent } from '../reset-password/reset-password.component';\nimport { RegisterWithThirdPartyComponent } from '../register-with-third-party/register-with-third-party.component';\n\nconst routes: Routes = [\n  { path: 'register', component: RegistrationComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'confirm-email', component: PendingVerificationComponent },\n  { path: 'send-email/:mode', component: SendEmailComponent },\n  { path: 'reset-password', component: ResetPasswordComponent },\n  { path: 'register/third-party/:provider', component: RegisterWithThirdPartyComponent },\n\n];\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AuthenticationRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authentication/services/authentication.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Serviço de autenticação responsável pelo gerenciamento de operações relacionadas à autenticação de utilizadores,\ncomo login, registro, confirmação de email, redefinição de senha, e mais.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user$\n                            \n                            \n                                    Private\n                                userSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmEmail\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                getJWT\n                            \n                            \n                                getLoggedInUserName\n                            \n                            \n                                    Private\n                                getStoredUser\n                            \n                            \n                                getUserRole\n                            \n                            \n                                login\n                            \n                            \n                                loginWithThirdParty\n                            \n                            \n                                logout\n                            \n                            \n                                refreshUser\n                            \n                            \n                                register\n                            \n                            \n                                registerWithThirdParty\n                            \n                            \n                                resendEmailConfirmationLink\n                            \n                            \n                                resetPassword\n                            \n                            \n                                    Private\n                                setUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authentication/services/authentication.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmEmail\n                        \n                    \n                \n            \n            \n                \nconfirmEmail(model: ConfirmEmail)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/services/authentication.service.ts:101\n                        \n                    \n\n\n            \n                \n                        Confirma o email de um utilizador utilizando um token de confirmação.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            ConfirmEmail\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Os dados necessários para a confirmação do email.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Observable da operação de confirmação.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \nforgotPassword(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/services/authentication.service.ts:121\n                        \n                    \n\n\n            \n                \n                        Solicita a redefinição de senha para um utilizador com base no seu email.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O email do utilizador que deseja redefinir sua senha.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Observable da operação de solicitação de redefinição de senha.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getJWT\n                        \n                    \n                \n            \n            \n                \ngetJWT()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/services/authentication.service.ts:212\n                        \n                    \n\n\n            \n                \n                        Recupera o JWT do utilizador autenticado a partir do local storage.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                O JWT se disponível, ou null caso contrário.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoggedInUserName\n                        \n                    \n                \n            \n            \n                \ngetLoggedInUserName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/services/authentication.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Recupera o nome de utilizador do utilizador autenticado atualmente.\n\n\n                        \n                            Returns :     string | null\n\n                        \n                            \n                                O nome de utilizador ou null se nenhum utilizador estiver autenticado.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getStoredUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStoredUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/services/authentication.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Busca o utilizador armazenado localmente (por exemplo, em localStorage).\n\n\n                        \n                            Returns :         User | null\n\n                        \n                            \n                                O utilizador recuperado ou null se nenhum utilizador estiver armazenado.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserRole\n                        \n                    \n                \n            \n            \n                \ngetUserRole(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/services/authentication.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Recupera o(s) papel(is) de um utilizador específico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome de utilizador para consulta.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Observable contendo a lista de papéis do utilizador.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(model: Login)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/services/authentication.service.ts:142\n                        \n                    \n\n\n            \n                \n                        Realiza o login de um utilizador no sistema utilizando as credenciais fornecidas.\nEste método também trata a verificação de confirmação da conta e atualiza o estado do utilizador no sistema.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            Login\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Os dados necessários para o login, incluindo email e senha.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Retorna um observable que emite o resultado da operação de login, contendo o utilizador autenticado e mensagens relevantes.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginWithThirdParty\n                        \n                    \n                \n            \n            \n                \nloginWithThirdParty(model: LoginWithExternal)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/services/authentication.service.ts:187\n                        \n                    \n\n\n            \n                \n                        Realiza o login de um utilizador utilizando credenciais de um provedor externo.\nSemelhante ao registro, após um login bem-sucedido, as informações do utilizador são salvas e seu estado é atualizado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            LoginWithExternal\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Os dados recebidos do provedor externo para autenticação.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Retorna um observable que processa a resposta do servidor e atualiza o estado do utilizador, caso o login seja bem-sucedido.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/services/authentication.service.ts:201\n                        \n                    \n\n\n            \n                \n                        Realiza o logout do utilizador, removendo suas informações de autenticação do local storage e atualizando o estado no serviço.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshUser\n                        \n                    \n                \n            \n            \n                \nrefreshUser(jwt: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/services/authentication.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Atualiza o utilizador autenticado com base em um token JWT.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                jwt\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O JWT a ser utilizado para a atualização do utilizador.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Observable da operação de atualização.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(model: Register)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/services/authentication.service.ts:90\n                        \n                    \n\n\n            \n                \n                        Registra um novo utilizador no sistema.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            Register\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Os dados de registro do utilizador.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Observable da operação de registro.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerWithThirdParty\n                        \n                    \n                \n            \n            \n                \nregisterWithThirdParty(model: RegisterWithExternal)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/services/authentication.service.ts:169\n                        \n                    \n\n\n            \n                \n                        Registra um utilizador no sistema utilizando credenciais de um provedor externo como Google, Facebook, etc.\nApós o registro bem-sucedido, as informações do utilizador são salvas e seu estado é atualizado no sistema.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            RegisterWithExternal\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Os dados recebidos do provedor externo necessários para o registro.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Retorna um observable que processa a resposta do servidor e atualiza o estado do utilizador.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resendEmailConfirmationLink\n                        \n                    \n                \n            \n            \n                \nresendEmailConfirmationLink(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/services/authentication.service.ts:111\n                        \n                    \n\n\n            \n                \n                        Reenvia o link de confirmação de email para um utilizador.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O email do utilizador que requer reenvio do link.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Observable da operação de reenvio.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword(model: ResetPassword)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/services/authentication.service.ts:131\n                        \n                    \n\n\n            \n                \n                        Realiza a redefinição de senha de um utilizador utilizando o modelo de dados necessário.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            ResetPassword\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Os dados necessários para a redefinição de senha.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Observable da operação de redefinição.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/services/authentication.service.ts:227\n                        \n                    \n\n\n            \n                \n                        Atualiza as informações locais do utilizador autenticado e notifica os observadores com o novo estado do utilizador.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O utilizador cujas informações foram atualizadas.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.userSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/services/authentication.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/services/authentication.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Register } from '../models/register';\nimport { environment } from '../../../environments/environment.development';\nimport { Login } from '../models/login';\nimport { User } from '../models/user';\nimport { ReplaySubject, map, of } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { ConfirmEmail } from '../models/confirmEmail';\nimport { ResetPassword } from '../models/resetPassword';\nimport { LoginWithExternal } from '../models/loginWithExternals';\nimport { RegisterWithExternal } from '../models/registerWithExternal';\nimport { ChatService } from '../../chat/services/chat.service';\n\n/**\n * Serviço de autenticação responsável pelo gerenciamento de operações relacionadas à autenticação de utilizadores,\n * como login, registro, confirmação de email, redefinição de senha, e mais.\n *\n * @class AuthenticationService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  private userSource = new ReplaySubject(1); //apenas um user dentro do user source\n  user$ = this.userSource.asObservable();\n\n  constructor(private http: HttpClient, private router : Router) { }\n\n  /**\n   * Recupera o nome de utilizador do utilizador autenticado atualmente.\n   *\n   * @returns O nome de utilizador ou null se nenhum utilizador estiver autenticado.\n   */\n  getLoggedInUserName(): string | null {\n    const user = this.getStoredUser();\n    return user ? user.username : null;\n  }\n\n  /**\n   * Busca o utilizador armazenado localmente (por exemplo, em localStorage).\n   *\n   * @returns O utilizador recuperado ou null se nenhum utilizador estiver armazenado.\n   */\n  private getStoredUser(): User | null {\n    const key = localStorage.getItem(environment.userKey);\n    return key ? JSON.parse(key) : null;\n  }\n\n  /**\n   * Recupera o(s) papel(is) de um utilizador específico.\n   *\n   * @param username O nome de utilizador para consulta.\n   * @returns Observable contendo a lista de papéis do utilizador.\n   */\n  getUserRole(username: string) {\n    return this.http.get(`${environment.appUrl}/api/account/getUserRole/${username}`);\n  }\n\n  /**\n   * Atualiza o utilizador autenticado com base em um token JWT.\n   *\n   * @param jwt O JWT a ser utilizado para a atualização do utilizador.\n   * @returns Observable da operação de atualização.\n   */\n  refreshUser(jwt: string | null) {\n    if (jwt === null) {\n      this.userSource.next(null);\n      return of(undefined);\n    }\n\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Authorization\", \"Bearer \" + jwt);\n\n    return this.http.get(`${environment.appUrl}/api/account/refresh-user-token`, { headers }).pipe(\n      map((user: User) => {\n        if (user) {\n          this.setUser(user);\n        }\n      })\n    );\n  }\n\n  /**\n   * Registra um novo utilizador no sistema.\n   *\n   * @param model Os dados de registro do utilizador.\n   * @returns Observable da operação de registro.\n   */\n  register(model: Register) {\n    console.log(environment.appUrl);\n    return this.http.post(`${environment.appUrl}/api/account/register`, model);\n  }\n\n  /**\n   * Confirma o email de um utilizador utilizando um token de confirmação.\n   *\n   * @param model Os dados necessários para a confirmação do email.\n   * @returns Observable da operação de confirmação.\n   */\n  confirmEmail(model: ConfirmEmail) {\n    return this.http.put(`${environment.appUrl}/api/account/confirm-email`, model);\n  }\n\n  /**\n   * Reenvia o link de confirmação de email para um utilizador.\n   *\n   * @param email O email do utilizador que requer reenvio do link.\n   * @returns Observable da operação de reenvio.\n   */\n  resendEmailConfirmationLink(email: string) {\n    return this.http.post(`${environment.appUrl}/api/account/resend-email-confirmation-link/${email}`, {});\n  }\n\n  /**\n   * Solicita a redefinição de senha para um utilizador com base no seu email.\n   *\n   * @param email O email do utilizador que deseja redefinir sua senha.\n   * @returns Observable da operação de solicitação de redefinição de senha.\n   */\n  forgotPassword(email: string) {\n    return this.http.post(`${environment.appUrl}/api/account/forgot-password/${email}`, {});\n  }\n\n  /**\n   * Realiza a redefinição de senha de um utilizador utilizando o modelo de dados necessário.\n   *\n   * @param model Os dados necessários para a redefinição de senha.\n   * @returns Observable da operação de redefinição.\n   */\n  resetPassword(model: ResetPassword) {\n    return this.http.put(`${environment.appUrl}/api/account/reset-password`, model);\n  }\n\n  /**\n   * Realiza o login de um utilizador no sistema utilizando as credenciais fornecidas.\n   * Este método também trata a verificação de confirmação da conta e atualiza o estado do utilizador no sistema.\n   *\n   * @param model Os dados necessários para o login, incluindo email e senha.\n   * @returns Retorna um observable que emite o resultado da operação de login, contendo o utilizador autenticado e mensagens relevantes.\n   */\n  login(model: Login) {\n    return this.http.post(`${environment.appUrl}/api/account/login`, model).pipe(\n      map((response: any) => {\n        var user: User | undefined;\n        var message = response.message;\n\n        if (response.message === \"A conta está por confirmar!\") {\n          return message;\n        }\n\n        if (response && response.user.email && response.user.jwt && response.user.username) {\n          user = new User(response.user.email, response.user.jwt, response.user.username);\n          this.setUser(user);\n        }\n        \n        return { user, message };\n      }),\n    );\n  }\n\n  /**\n * Registra um utilizador no sistema utilizando credenciais de um provedor externo como Google, Facebook, etc.\n * Após o registro bem-sucedido, as informações do utilizador são salvas e seu estado é atualizado no sistema.\n *\n * @param model Os dados recebidos do provedor externo necessários para o registro.\n * @returns Retorna um observable que processa a resposta do servidor e atualiza o estado do utilizador.\n */\n  registerWithThirdParty(model: RegisterWithExternal) {\n    return this.http.post(`${environment.appUrl}/api/account/register-with-third-party`, model)\n      .pipe(\n        map((user: User) => {\n          if (user) {\n            this.setUser(user);\n          }\n        })\n      );\n  }\n\n  /**\n * Realiza o login de um utilizador utilizando credenciais de um provedor externo.\n * Semelhante ao registro, após um login bem-sucedido, as informações do utilizador são salvas e seu estado é atualizado.\n *\n * @param model Os dados recebidos do provedor externo para autenticação.\n * @returns Retorna um observable que processa a resposta do servidor e atualiza o estado do utilizador, caso o login seja bem-sucedido.\n */\n  loginWithThirdParty(model: LoginWithExternal) {\n    return this.http.post(`${environment.appUrl}/api/account/login-with-third-party`, model)\n      .pipe(\n        map((user: User) => {\n          if (user) {\n            this.setUser(user);\n          }\n        })\n      );\n  }\n\n  /**\n   * Realiza o logout do utilizador, removendo suas informações de autenticação do local storage e atualizando o estado no serviço.\n   */\n  logout() {\n    localStorage.removeItem(environment.userKey);\n    this.userSource.next(null);\n    this.router.navigateByUrl(\"/home\");\n  }\n\n  /**\n   * Recupera o JWT do utilizador autenticado a partir do local storage.\n   *\n   * @returns O JWT se disponível, ou null caso contrário.\n   */\n  getJWT() {\n    const key = localStorage.getItem(environment.userKey);\n    if (key) {\n      const user: User = JSON.parse(key);\n      return user.jwt;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Atualiza as informações locais do utilizador autenticado e notifica os observadores com o novo estado do utilizador.\n   *\n   * @param user O utilizador cujas informações foram atualizadas.\n   */\n  private setUser(user: User) {\n    localStorage.setItem(environment.userKey, JSON.stringify(user));\n    this.userSource.next(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationGuard.html":{"url":"injectables/AuthorizationGuard.html","title":"injectable - AuthorizationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/guards/authorization.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/authorization.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(router: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/guards/authorization.guard.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                router\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from '../authentication/services/authentication.service';\nimport { Observable, map } from 'rxjs';\nimport { User } from '../authentication/models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthorizationGuard{\n  constructor(private authService: AuthenticationService,\n              private router : Router) { }\n\n\n  canActivate(\n    router: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable {\n    return this.authService.user$.pipe(\n      map((user: User | null) => {\n        if (user) {\n          return true;\n        } else {\n          console.log(\"Area restrita.\");\n          this.router.navigate([\"/account/login\"], { queryParams: { returnUrl: state.url } });\n          return false;\n        }\n      })\n    );\n  }\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockedAccountComponent.html":{"url":"components/BlockedAccountComponent.html","title":"component - BlockedAccountComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlockedAccountComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/authentication/blocked-account/blocked-account.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-blocked-account\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./blocked-account.component.html\n            \n\n\n\n            \n                styleUrl\n                ./blocked-account.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-blocked-account',\n  templateUrl: './blocked-account.component.html',\n  styleUrl: './blocked-account.component.css'\n})\nexport class BlockedAccountComponent {\n\n}\n\n    \n\n    \n        \n  0\n  \n  \n\n    \n      \n        A sua conta encontra-se bloqueada.\n      \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  0                      A sua conta encontra-se bloqueada.                  '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminStatisticsComponent', 'selector': 'app-admin-statistics'},{'name': 'AllMoviesPageComponent', 'selector': 'app-all-movies-page'},{'name': 'AllSeriesPageComponent', 'selector': 'app-all-series-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'authentication-button'},{'name': 'BlockedAccountComponent', 'selector': 'app-blocked-account'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GamificationComponent', 'selector': 'app-gamification'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MovieDetailsComponent', 'selector': 'app-movie-details'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'PendingVerificationComponent', 'selector': 'app-pending-verification'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterWithThirdPartyComponent', 'selector': 'app-register-with-third-party'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchServiceComponent', 'selector': 'app-search-service'},{'name': 'SeasonDetailsComponent', 'selector': 'app-season-details'},{'name': 'SeasonDetailsInfoComponent', 'selector': 'app-season-details-info'},{'name': 'SendEmailComponent', 'selector': 'app-send-email'},{'name': 'SeriesDetailsComponent', 'selector': 'app-series-details'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'SuspendedAccountComponent', 'selector': 'app-suspended-account'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlockedAccountComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChatWithMessages.html":{"url":"interfaces/ChatWithMessages.html","title":"interface - ChatWithMessages","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChatWithMessages\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/chat/models/chatWithMessages.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa um chat contendo um conjunto de mensagens entre utilizadors.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            messages\n                                        \n                                \n                                \n                                        \n                                            profilePhoto\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        messages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        messages:         Message[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Message[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Lista de mensagens pertencentes ao chat.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profilePhoto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profilePhoto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URL para a fotografia de perfil do utilizador associado ao chat.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nome de utilizador associado ao chat.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Message } from \"./messages\";\n\n/**\n * Representa um chat contendo um conjunto de mensagens entre utilizadors.\n */\nexport interface ChatWithMessages {\n  /**\n   * Nome de utilizador associado ao chat.\n   */\n  username: string;\n\n  /**\n   * URL para a fotografia de perfil do utilizador associado ao chat.\n   */\n  profilePhoto: string;\n\n  /**\n   * Lista de mensagens pertencentes ao chat.\n   */\n  messages: Message[];\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDialogComponent.html":{"url":"components/ConfirmDialogComponent.html","title":"component - ConfirmDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/confirm-dialog/confirm-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de diálogo de confirmação.\nEste componente é utilizado para mostrar uma caixa de diálogo de confirmação ao utilizador,\npermitindo a ele confirmar ou cancelar uma ação.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-dialog\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./confirm-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./confirm-dialog.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onConfirm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelTextButton\n                            \n                            \n                                classCss\n                            \n                            \n                                confirmationTextButton\n                            \n                            \n                                messagePopup\n                            \n                            \n                                titleButton\n                            \n                            \n                                titlePopup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                confirmAction\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/confirm-dialog/confirm-dialog.component.ts:34\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cancelTextButton\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Cancelar'\n                    \n                \n                        \n                            \n                                    Defined in src/app/confirm-dialog/confirm-dialog.component.ts:31\n                            \n                        \n                \n                    \n                        Texto do botão de cancelar, padrão é \"Cancelar\".\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        classCss\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/confirm-dialog/confirm-dialog.component.ts:23\n                            \n                        \n                \n                    \n                        Classe CSS adicional para estilização do componente.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        confirmationTextButton\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Confirmar'\n                    \n                \n                        \n                            \n                                    Defined in src/app/confirm-dialog/confirm-dialog.component.ts:29\n                            \n                        \n                \n                    \n                        Texto do botão de confirmação, padrão é \"Confirmar\".\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePopup\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Têm a certeza que pretende executar esta ação?'\n                    \n                \n                        \n                            \n                                    Defined in src/app/confirm-dialog/confirm-dialog.component.ts:27\n                            \n                        \n                \n                    \n                        Mensagem no popup de confirmação, padrão é \"Têm a certeza que pretende executar esta ação?\".\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        titleButton\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Confirmar\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/confirm-dialog/confirm-dialog.component.ts:21\n                            \n                        \n                \n                    \n                        Título do botão, padrão é \"Confirmar\".\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        titlePopup\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Confirmação'\n                    \n                \n                        \n                            \n                                    Defined in src/app/confirm-dialog/confirm-dialog.component.ts:25\n                            \n                        \n                \n                    \n                        Título do popup de confirmação, padrão é \"Confirmação\".\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        confirmAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/confirm-dialog/confirm-dialog.component.ts:34\n                            \n                        \n                \n                    \n                        Evento emitido quando a ação é confirmada.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onConfirm\n                        \n                    \n                \n            \n            \n                \nonConfirm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/confirm-dialog/confirm-dialog.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Método chamado ao confirmar a ação no diálogo.\nInicializa uma nova caixa de confirmação e configura suas propriedades e animações.\nAo confirmar, emite o evento confirmAction.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Output, Input, EventEmitter } from '@angular/core';\nimport {\n  ConfirmBoxInitializer,\n  DialogLayoutDisplay,\n  DisappearanceAnimation,\n  AppearanceAnimation\n} from '@costlydeveloper/ngx-awesome-popup';\n\n/**\n * Componente de diálogo de confirmação.\n * Este componente é utilizado para mostrar uma caixa de diálogo de confirmação ao utilizador,\n * permitindo a ele confirmar ou cancelar uma ação.\n */\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrl: './confirm-dialog.component.css'\n})\nexport class ConfirmDialogComponent {\n  /** Título do botão, padrão é \"Confirmar\". */\n  @Input() titleButton: string = \"Confirmar\";\n  /** Classe CSS adicional para estilização do componente. */\n  @Input() classCss?: string;\n  /** Título do popup de confirmação, padrão é \"Confirmação\". */\n  @Input() titlePopup: string = 'Confirmação';\n  /** Mensagem no popup de confirmação, padrão é \"Têm a certeza que pretende executar esta ação?\". */\n  @Input() messagePopup: string = 'Têm a certeza que pretende executar esta ação?';\n  /** Texto do botão de confirmação, padrão é \"Confirmar\". */\n  @Input() confirmationTextButton: string = 'Confirmar';\n  /** Texto do botão de cancelar, padrão é \"Cancelar\". */\n  @Input() cancelTextButton: string = 'Cancelar';\n\n  /** Evento emitido quando a ação é confirmada. */\n  @Output() confirmAction = new EventEmitter();\n\n  constructor() { }\n\n  /**\n   * Método chamado ao confirmar a ação no diálogo.\n   * Inicializa uma nova caixa de confirmação e configura suas propriedades e animações.\n   * Ao confirmar, emite o evento `confirmAction`.\n   */\n  onConfirm(): void {\n    const newConfirmBox = new ConfirmBoxInitializer();\n\n    newConfirmBox.setTitle(this.titlePopup);\n    newConfirmBox.setMessage(this.messagePopup);\n\n    newConfirmBox.setConfig({\n      layoutType: DialogLayoutDisplay.DANGER, \n      animationIn: AppearanceAnimation.NONE, \n      animationOut: DisappearanceAnimation.NONE,\n      buttonPosition: 'right', \n    });\n\n    newConfirmBox.setButtonLabels(this.confirmationTextButton, this.cancelTextButton);\n\n    newConfirmBox.openConfirmBox$().subscribe(resp => {\n      if (resp.success) {\n        this.confirmAction.emit(resp);\n      }\n    });\n  }\n}\n\n    \n\n    \n        {{titleButton}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{titleButton}}'\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminStatisticsComponent', 'selector': 'app-admin-statistics'},{'name': 'AllMoviesPageComponent', 'selector': 'app-all-movies-page'},{'name': 'AllSeriesPageComponent', 'selector': 'app-all-series-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'authentication-button'},{'name': 'BlockedAccountComponent', 'selector': 'app-blocked-account'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GamificationComponent', 'selector': 'app-gamification'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MovieDetailsComponent', 'selector': 'app-movie-details'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'PendingVerificationComponent', 'selector': 'app-pending-verification'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterWithThirdPartyComponent', 'selector': 'app-register-with-third-party'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchServiceComponent', 'selector': 'app-search-service'},{'name': 'SeasonDetailsComponent', 'selector': 'app-season-details'},{'name': 'SeasonDetailsInfoComponent', 'selector': 'app-season-details-info'},{'name': 'SendEmailComponent', 'selector': 'app-send-email'},{'name': 'SeriesDetailsComponent', 'selector': 'app-series-details'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'SuspendedAccountComponent', 'selector': 'app-suspended-account'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfirmEmail.html":{"url":"interfaces/ConfirmEmail.html","title":"interface - ConfirmEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfirmEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authentication/models/confirmEmail.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface para representar os dados necessários para confirmar o endereço de email de um utilizador.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ConfirmEmail {\n  token: string;\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DialogService.html":{"url":"injectables/DialogService.html","title":"injectable - DialogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DialogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/confirm-dialog/services/dialog.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Serviço para gerenciar diálogos de confirmação.\nEste serviço é responsável por abrir diálogos de confirmação através do MatDialog.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openConfirmDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/confirm-dialog/services/dialog.service.ts:12\n                            \n                        \n\n                \n                    \n                            Construtor que injeta o serviço MatDialog.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço MatDialog utilizado para abrir diálogos.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openConfirmDialog\n                        \n                    \n                \n            \n            \n                \nopenConfirmDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/confirm-dialog/services/dialog.service.ts:23\n                        \n                    \n\n\n            \n                \n                        Abre um diálogo de confirmação usando o componente ConfirmDialogComponent.\nEste diálogo é configurado para não ser fechado ao clicar fora dele.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ConfirmDialogComponent } from '../confirm-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n/**\n * Serviço para gerenciar diálogos de confirmação.\n * Este serviço é responsável por abrir diálogos de confirmação através do MatDialog.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService {\n  /**\n   * Construtor que injeta o serviço MatDialog.\n   * @param dialog Serviço MatDialog utilizado para abrir diálogos.\n   */\n  constructor(private dialog: MatDialog) { }\n\n  /**\n   * Abre um diálogo de confirmação usando o componente ConfirmDialogComponent.\n   * Este diálogo é configurado para não ser fechado ao clicar fora dele.\n   */\n  openConfirmDialog() {\n    this.dialog.open(ConfirmDialogComponent, {\n      width: '250px',\n      disableClose: true\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FavoriteActor.html":{"url":"classes/FavoriteActor.html","title":"class - FavoriteActor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FavoriteActor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/media/media-models/fav-actor.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ActorChoiceId\n                            \n                            \n                                Media\n                            \n                            \n                                MediaCast\n                            \n                            \n                                Username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, actorChoiceId: number, mediaId: number, type: string, mediaCast: literal type[])\n                    \n                \n                        \n                            \n                                Defined in src/app/media/media-models/fav-actor.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actorChoiceId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaCast\n                                                  \n                                                        \n                                                                    literal type[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ActorChoiceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/media/media-models/fav-actor.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Media\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/app/media/media-models/fav-actor.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MediaCast\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/media/media-models/fav-actor.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/media/media-models/fav-actor.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FavoriteActor {\n  Username: string;\n  ActorChoiceId: number;\n  Media: { MediaId: number; Type: string };\n  MediaCast: { ActorId: number; ActorName: string }[];\n\n  constructor(\n    username: string,\n    actorChoiceId: number,\n    mediaId: number,\n    type: string,\n    mediaCast: { ActorId: number; ActorName: string }[]\n  ) {\n    this.Username = username;\n    this.ActorChoiceId = actorChoiceId;\n    this.Media = { MediaId: mediaId, Type: type };\n    this.MediaCast = mediaCast.map(mc => ({\n      ActorId: mc.ActorId,\n      ActorName: mc.ActorName\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FollowNotificationModel.html":{"url":"classes/FollowNotificationModel.html","title":"class - FollowNotificationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FollowNotificationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/notifications/models/follow-notification-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Modelo para notificações de novos seguidores. Estende o modelo base de notificação,\nincluindo o ID do utilizador alvo e a foto do utilizador que disparou a notificação.\nPropriedades:\n\ntargetUserId: Identificador do utilizador alvo da notificação.\ntriggeredByUserPhoto: URL ou caminho da foto do utilizador que disparou a notificação.\n\n\n            \n\n            \n                Extends\n            \n            \n                            NotificationModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                targetUserId\n                            \n                            \n                                triggeredByUserPhoto\n                            \n                            \n                                createdAt\n                            \n                            \n                                eventType\n                            \n                            \n                                isRead\n                            \n                            \n                                message\n                            \n                            \n                                triggeredByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(triggeredByUserId: string, message: string, createdAt: Date, isRead: boolean, eventType: string, targetUserId: string, triggeredByUserPhoto: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/notifications/models/follow-notification-model.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        triggeredByUserId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createdAt\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isRead\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        targetUserId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        triggeredByUserPhoto\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        targetUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/notifications/models/follow-notification-model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggeredByUserPhoto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/notifications/models/follow-notification-model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         NotificationModel\n\n                            \n                        \n                    \n                        \n                                Defined in         NotificationModel:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         NotificationModel\n\n                            \n                        \n                    \n                        \n                                Defined in         NotificationModel:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         NotificationModel\n\n                            \n                        \n                    \n                        \n                                Defined in         NotificationModel:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         NotificationModel\n\n                            \n                        \n                    \n                        \n                                Defined in         NotificationModel:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggeredByUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         NotificationModel\n\n                            \n                        \n                    \n                        \n                                Defined in         NotificationModel:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotificationModel } from \"./notification-model\";\n\n/**\n * Modelo para notificações de novos seguidores. Estende o modelo base de notificação,\n * incluindo o ID do utilizador alvo e a foto do utilizador que disparou a notificação.\n *\n * Propriedades:\n * - targetUserId: Identificador do utilizador alvo da notificação.\n * - triggeredByUserPhoto: URL ou caminho da foto do utilizador que disparou a notificação.\n */\nexport class FollowNotificationModel extends NotificationModel {\n  targetUserId: string;\n  triggeredByUserPhoto: string;\n\n  constructor(\n    triggeredByUserId: string,\n    message: string,\n    createdAt: Date,\n    isRead: boolean,\n    eventType: string,\n    targetUserId: string,\n    triggeredByUserPhoto: string\n  ) {\n    super(triggeredByUserId, message, createdAt, isRead, eventType);\n    this.targetUserId = targetUserId;\n    this.triggeredByUserPhoto = triggeredByUserPhoto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FollowerProfile.html":{"url":"classes/FollowerProfile.html","title":"class - FollowerProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FollowerProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/profile/models/follower-profile.ts\n        \n\n\n            \n                Description\n            \n            \n                Modelo para representar o perfil de um seguidor ou utilizador seguido.\nUtilizado para transferir informações básicas sobre relações de seguimento entre utilizadores.\nPropriedades:\n\nusername: Nome de utilizador do perfil.\nprofilePhoto: Caminho ou URL para a foto de perfil do utilizador.\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                profilePhoto\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, profilePhoto: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/models/follower-profile.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profilePhoto\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        profilePhoto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/models/follower-profile.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/models/follower-profile.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FollowerProfile {\n  username: string;\n  profilePhoto: string;\n\n  constructor(username: string, profilePhoto: string) {\n    this.username = username;\n    this.profilePhoto = profilePhoto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.css'\n})\nexport class FooterComponent {\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      Serviço Cliente:\n      \n        Sobre Nós\n        Acessibilidade\n        Termos/Responsabilidade\n\n      \n    \n    \n      Contactar:\n      \n        watchersworld&#64;gmail.com\n      \n    \n\n    \n      Segue-nos:\n      \n        \n        \n        \n        \n      \n    \n  \n  &#64;Watchers World Team, 2024 \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Serviço Cliente:              Sobre Nós        Acessibilidade        Termos/Responsabilidade                    Contactar:              watchersworld@gmail.com                    Segue-nos:                                                    @Watchers World Team, 2024 '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminStatisticsComponent', 'selector': 'app-admin-statistics'},{'name': 'AllMoviesPageComponent', 'selector': 'app-all-movies-page'},{'name': 'AllSeriesPageComponent', 'selector': 'app-all-series-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'authentication-button'},{'name': 'BlockedAccountComponent', 'selector': 'app-blocked-account'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GamificationComponent', 'selector': 'app-gamification'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MovieDetailsComponent', 'selector': 'app-movie-details'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'PendingVerificationComponent', 'selector': 'app-pending-verification'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterWithThirdPartyComponent', 'selector': 'app-register-with-third-party'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchServiceComponent', 'selector': 'app-search-service'},{'name': 'SeasonDetailsComponent', 'selector': 'app-season-details'},{'name': 'SeasonDetailsInfoComponent', 'selector': 'app-season-details-info'},{'name': 'SendEmailComponent', 'selector': 'app-send-email'},{'name': 'SeriesDetailsComponent', 'selector': 'app-series-details'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'SuspendedAccountComponent', 'selector': 'app-suspended-account'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GamificationComponent.html":{"url":"components/GamificationComponent.html","title":"component - GamificationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GamificationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/gamification/gamification.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente responsável por exibir a gamificação do utilizador, incluindo medalhas desbloqueadas e bloqueadas.\nEste componente permite aos utilizadores verem as suas conquistas dentro do sistema e o que ainda podem alcançar,\naumentando a interação e o engajamento com a plataforma.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-gamification\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./gamification.component.html\n            \n\n\n\n            \n                styleUrl\n                ./gamification.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUsername\n                            \n                            \n                                lockedMedals\n                            \n                            \n                                unlockedMedals\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLockedMedals\n                            \n                            \n                                getUnlockedMedals\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gamificationService: GamificationService, router: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/gamification/gamification.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gamificationService\n                                                  \n                                                        \n                                                                        GamificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLockedMedals\n                        \n                    \n                \n            \n            \n                \ngetLockedMedals()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/gamification/gamification.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Recupera as medalhas ainda bloqueadas para o utilizador.\nEste método consulta o serviço de gamificação para obter as medalhas que o utilizador ainda não conseguiu desbloquear.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUnlockedMedals\n                        \n                    \n                \n            \n            \n                \ngetUnlockedMedals()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/gamification/gamification.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Recupera as medalhas desbloqueadas pelo utilizador.\nEste método consulta o serviço de gamificação para obter as medalhas que o utilizador já conseguiu desbloquear.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/gamification/gamification.component.ts:28\n                        \n                    \n\n\n            \n                \n                        Método de inicialização do componente. Obtém o nome do utilizador a partir dos parâmetros da rota\ne chama os métodos para recuperar as medalhas desbloqueadas e bloqueadas.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUsername\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/gamification/gamification.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockedMedals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MedalsDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/gamification/gamification.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockedMedals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MedalsDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/gamification/gamification.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { GamificationService } from './Service/gamification.service';\nimport { MedalsDto } from './models/MedalsDto';\nimport { ActivatedRoute } from '@angular/router';\n\n/**\n * Componente responsável por exibir a gamificação do utilizador, incluindo medalhas desbloqueadas e bloqueadas.\n * Este componente permite aos utilizadores verem as suas conquistas dentro do sistema e o que ainda podem alcançar,\n * aumentando a interação e o engajamento com a plataforma.\n */\n@Component({\n  selector: 'app-gamification',\n  templateUrl: './gamification.component.html',\n  styleUrl: './gamification.component.css'\n})\nexport class GamificationComponent implements OnInit {\n\n  unlockedMedals: MedalsDto[] = [];\n  lockedMedals: MedalsDto[] = [];\n  currentUsername: string | undefined;\n\n  constructor(private gamificationService: GamificationService, private router: ActivatedRoute) { }\n\n  /**\n   * Método de inicialização do componente. Obtém o nome do utilizador a partir dos parâmetros da rota\n   * e chama os métodos para recuperar as medalhas desbloqueadas e bloqueadas.\n   */\n  ngOnInit(): void {\n    this.router.params.subscribe(params => {\n      if (typeof params['username'] === 'string') {\n        this.currentUsername = params['username'];\n      }\n    });\n\n    this.getLockedMedals();\n    this.getUnlockedMedals();\n  }\n\n  /**\n   * Recupera as medalhas desbloqueadas pelo utilizador.\n   * Este método consulta o serviço de gamificação para obter as medalhas que o utilizador já conseguiu desbloquear.\n   */\n  getUnlockedMedals(): void {\n    if (this.currentUsername)\n      this.gamificationService.getUnlockedMedals(this.currentUsername).subscribe({\n        next: (medals) => {\n          this.unlockedMedals = medals;\n        },\n        error: (err) => {\n          console.error('Error retrieving available medals:', err);\n        }\n      });\n  }\n\n  /**\n   * Recupera as medalhas ainda bloqueadas para o utilizador.\n   * Este método consulta o serviço de gamificação para obter as medalhas que o utilizador ainda não conseguiu desbloquear.\n   */\n  getLockedMedals(): void {\n    if (this.currentUsername)\n      this.gamificationService.getLockedMedals(this.currentUsername).subscribe({\n        next: (medals) => {\n          this.lockedMedals = medals;\n        },\n        error: (err) => {\n          console.error('Error retrieving available medals:', err);\n        }\n      });\n  }\n}\n\n    \n\n    \n        \n  Medalhas\n  \n  \n    \n      \n      \n        \n        {{ medal.name }}\n        {{ medal.description }}\n      \n    \n    \n      \n      \n        \n        {{ medal.name }}\n        {{ medal.description }}\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Medalhas                                    {{ medal.name }}        {{ medal.description }}                                          {{ medal.name }}        {{ medal.description }}                    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminStatisticsComponent', 'selector': 'app-admin-statistics'},{'name': 'AllMoviesPageComponent', 'selector': 'app-all-movies-page'},{'name': 'AllSeriesPageComponent', 'selector': 'app-all-series-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'authentication-button'},{'name': 'BlockedAccountComponent', 'selector': 'app-blocked-account'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GamificationComponent', 'selector': 'app-gamification'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MovieDetailsComponent', 'selector': 'app-movie-details'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'PendingVerificationComponent', 'selector': 'app-pending-verification'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterWithThirdPartyComponent', 'selector': 'app-register-with-third-party'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchServiceComponent', 'selector': 'app-search-service'},{'name': 'SeasonDetailsComponent', 'selector': 'app-season-details'},{'name': 'SeasonDetailsInfoComponent', 'selector': 'app-season-details-info'},{'name': 'SendEmailComponent', 'selector': 'app-send-email'},{'name': 'SeriesDetailsComponent', 'selector': 'app-series-details'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'SuspendedAccountComponent', 'selector': 'app-suspended-account'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GamificationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GamificationService.html":{"url":"injectables/GamificationService.html","title":"injectable - GamificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GamificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/gamification/Service/gamification.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Este serviço é responsável pela gestão de operações relacionadas à gamificação,\ncomo a obtenção de medalhas desbloqueadas e bloqueadas pelos utilizadores, a atribuição de medalhas\ne a recolha de informações sobre todas as medalhas disponíveis.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                awardMedal\n                            \n                            \n                                getAvailableMedals\n                            \n                            \n                                getHeaders\n                            \n                            \n                                getJWT\n                            \n                            \n                                getLockedMedals\n                            \n                            \n                                getUnlockedMedals\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/gamification/Service/gamification.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        awardMedal\n                        \n                    \n                \n            \n            \n                \nawardMedal(userName: string, medalName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/gamification/Service/gamification.service.ts:72\n                        \n                    \n\n\n            \n                \n                        Atribui uma medalha a um utilizador específico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome do utilizador ao qual a medalha será atribuída.\n\n                                            \n                                        \n                                        \n                                                medalName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome da medalha a ser atribuída.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Um Observable que emite a lista atualizada de medalhas do utilizador após a atribuição.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAvailableMedals\n                        \n                    \n                \n            \n            \n                \ngetAvailableMedals()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/gamification/Service/gamification.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Obtém todas as medalhas disponíveis no sistema.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Um Observable que emite uma lista de todas as medalhas disponíveis (MedalsDto[]).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeaders\n                        \n                    \n                \n            \n            \n                \ngetHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/gamification/Service/gamification.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Constrói os cabeçalhos HTTP para inclusão do token JWT nas solicitações à API.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                Um objeto HttpHeaders configurado com o tipo de conteúdo e o token JWT.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getJWT\n                        \n                    \n                \n            \n            \n                \ngetJWT()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/gamification/Service/gamification.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Recupera o token JWT do localStorage do navegador. Este token é utilizado para\nautenticação nas requisições à API.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                O token JWT ou 'No JWT' se o token não estiver presente.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLockedMedals\n                        \n                    \n                \n            \n            \n                \ngetLockedMedals(userName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/gamification/Service/gamification.service.ts:92\n                        \n                    \n\n\n            \n                \n                        Obtém as medalhas que ainda estão bloqueadas para um determinado utilizador.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome do utilizador cujas medalhas bloqueadas são solicitadas.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Um Observable que emite uma lista de medalhas bloqueadas (MedalsDto[]).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUnlockedMedals\n                        \n                    \n                \n            \n            \n                \ngetUnlockedMedals(userName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/gamification/Service/gamification.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Obtém as medalhas desbloqueadas por um determinado utilizador.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome do utilizador cujas medalhas desbloqueadas são solicitadas.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Um Observable que emite uma lista de medalhas desbloqueadas (MedalsDto[]).\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { environment } from '../../../environments/environment.development';\nimport { User } from '../../authentication/models/user';\nimport { Observable } from 'rxjs';\nimport { MedalsDto } from '../models/MedalsDto';\n\n/**\n * Este serviço é responsável pela gestão de operações relacionadas à gamificação,\n * como a obtenção de medalhas desbloqueadas e bloqueadas pelos utilizadores, a atribuição de medalhas\n * e a recolha de informações sobre todas as medalhas disponíveis.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GamificationService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Recupera o token JWT do localStorage do navegador. Este token é utilizado para\n   * autenticação nas requisições à API.\n   * \n   * @returns O token JWT ou 'No JWT' se o token não estiver presente.\n   */\n  getJWT() {\n    const key = localStorage.getItem(environment.userKey);\n    if (key) {\n      const user = JSON.parse(key) as User;\n      return user.jwt;\n    } else {\n      return 'No JWT';\n    }\n  }\n\n  /**\n   * Constrói os cabeçalhos HTTP para inclusão do token JWT nas solicitações à API.\n   * \n   * @returns Um objeto HttpHeaders configurado com o tipo de conteúdo e o token JWT.\n   */\n  getHeaders() {\n    const jwt = this.getJWT();\n\n    // Set up the headers with the authentication token\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${jwt}`\n    });\n\n    return headers;\n  }\n\n  /**\n   * Obtém as medalhas desbloqueadas por um determinado utilizador.\n   * \n   * @param userName O nome do utilizador cujas medalhas desbloqueadas são solicitadas.\n   * @returns Um Observable que emite uma lista de medalhas desbloqueadas (MedalsDto[]).\n   */\n  getUnlockedMedals(userName: string): Observable {\n    const headers = this.getHeaders();\n    return this.http.get(`${environment.appUrl}/api/gamification/unlocked-medals/${userName}`, { headers });\n  }\n\n  /**\n  * Atribui uma medalha a um utilizador específico.\n  * \n  * @param userName O nome do utilizador ao qual a medalha será atribuída.\n  * @param medalName O nome da medalha a ser atribuída.\n  * @returns Um Observable que emite a lista atualizada de medalhas do utilizador após a atribuição.\n  */\n  awardMedal(userName: string, medalName: string): Observable {\n    const headers = this.getHeaders();\n    return this.http.post(`${environment.appUrl}/api/gamification/AwardMedal`, { userName, medalName }, { headers });\n  }\n\n  /**\n   * Obtém todas as medalhas disponíveis no sistema.\n   * \n   * @returns Um Observable que emite uma lista de todas as medalhas disponíveis (MedalsDto[]).\n   */\n  getAvailableMedals(): Observable {\n    return this.http.get(`${environment.appUrl}/api/gamification/available-medals`);\n  }\n\n  /**\n   * Obtém as medalhas que ainda estão bloqueadas para um determinado utilizador.\n   * \n   * @param userName O nome do utilizador cujas medalhas bloqueadas são solicitadas.\n   * @returns Um Observable que emite uma lista de medalhas bloqueadas (MedalsDto[]).\n   */\n  getLockedMedals(userName: string): Observable {\n    const headers = this.getHeaders();\n    return this.http.get(`${environment.appUrl}/api/gamification/locked-medals/${userName}`, { headers });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                categories\n                            \n                            \n                                messageText\n                            \n                            \n                                usernameReceiver\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchMovies\n                            \n                            \n                                getCategoryActiveIndex\n                            \n                            \n                                getCategoryResults\n                            \n                            \n                                initCategories\n                            \n                            \n                                logout\n                            \n                            \n                                nextCategory\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                prevCategory\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, chatService: ChatService, router: Router, service: MovieApiServiceComponent, title: Title, meta: Meta)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        MovieApiServiceComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                    Meta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchMovies\n                        \n                    \n                \n            \n            \n                \nfetchMovies()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:82\n                        \n                    \n\n\n            \n                \n                        Inicializa as categorias de filmes.\nDefine as categorias de filmes com seus respectivos resultados vazios e índice ativo como 0.\nEm seguida, chama o método para buscar os filmes para preencher as categorias.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategoryActiveIndex\n                        \n                    \n                \n            \n            \n                \ngetCategoryActiveIndex(categoryName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:129\n                        \n                    \n\n\n            \n                \n                        Obtém o índice ativo da categoria especificada.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome da categoria.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                O índice ativo da categoria.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategoryResults\n                        \n                    \n                \n            \n            \n                \ngetCategoryResults(categoryName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Obtém os resultados da categoria especificada.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome da categoria.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                Um array com os resultados da categoria.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initCategories\n                        \n                    \n                \n            \n            \n                \ninitCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:106\n                        \n                    \n\n\n            \n                \n                        Realiza o logout do utilizador e para a conexão do serviço de chat.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextCategory\n                        \n                    \n                \n            \n            \n                \nnextCategory(categoryName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:138\n                        \n                    \n\n\n            \n                \n                        Avança para a próxima página de resultados da categoria especificada.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome da categoria.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prevCategory\n                        \n                    \n                \n            \n            \n                \nprevCategory(categoryName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:152\n                        \n                    \n\n\n            \n                \n                        Retrocede para a página anterior de resultados da categoria especificada.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome da categoria.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Envia uma mensagem para um utilizador específico.\nVerifica se o nome do utilizador destinatário e a mensagem estão preenchidos antes de enviar.\nSe a validação passar, cria uma mensagem com os dados fornecidos e a envia através do serviço de chat.\nRegistra no console se a mensagem foi enviada com sucesso ou se ocorreu um erro.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthenticationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MovieCategory[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usernameReceiver\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../authentication/services/authentication.service';\nimport { MovieApiServiceComponent } from '../media/api/movie-api-service/movie-api-service.component';\nimport { Meta, Title } from '@angular/platform-browser';\nimport { ChatService } from '../chat/services/chat.service';\nimport { Message } from '../chat/models/messages';\n\ninterface MovieCategory {\n  name: string;\n  results: any[];\n  activeIndex: number;\n  media_type: string;\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  categories: MovieCategory[] = [];\n  usernameReceiver: string = \"\";\n  messageText: string = \"\";\n\n  constructor(public authService: AuthenticationService, private chatService: ChatService, private router: Router, private service: MovieApiServiceComponent, private title: Title, private meta: Meta) { }\n\n  ngOnInit(): void {\n    this.initCategories();\n  }\n\n  /**\n * Envia uma mensagem para um utilizador específico.\n * Verifica se o nome do utilizador destinatário e a mensagem estão preenchidos antes de enviar.\n * Se a validação passar, cria uma mensagem com os dados fornecidos e a envia através do serviço de chat.\n * Registra no console se a mensagem foi enviada com sucesso ou se ocorreu um erro.\n */\n  sendMessage(): void {\n    if (!this.usernameReceiver.trim() || !this.messageText.trim()) {\n      console.log('Nome do utilizador destinatário e mensagem são necessários.');\n      return;\n    }\n\n    var messageToSent: Message = {\n      messageId: undefined,\n      sendUsername: this.authService.getLoggedInUserName()!,\n      text: this.messageText.trim(),\n      sentAt: undefined,\n      readAt: undefined\n    }\n\n    this.chatService.sendMessage(this.usernameReceiver, messageToSent)\n      .then(() => {\n        console.log(\"Mensagem Enviada!\"); \n      })\n      .catch(error => console.error('Erro ao enviar mensagem:', error));\n  }\n\n  initCategories() {\n    this.categories = [\n      { name: 'Banner', results: [], activeIndex: 0, media_type: \"movie\" },\n      { name: 'Filmes em Destaque', results: [], activeIndex: 0, media_type: \"movie\" },\n      { name: 'Séries Mais Votadas', results: [], activeIndex: 0, media_type: \"tv\" },\n      { name: 'Filmes de Ação', results: [], activeIndex: 0, media_type: \"movie\" },\n      { name: 'Filmes de Aventura', results: [], activeIndex: 0, media_type: \"movie\" },\n      { name: 'Filmes de Comédia', results: [], activeIndex: 0, media_type: \"movie\" },\n      { name: 'Filmes de Animação', results: [], activeIndex: 0, media_type: \"movie\" },\n      { name: 'Filmes Documentários', results: [], activeIndex: 0, media_type: \"movie\" },\n      { name: 'Filmes de Ficção Científica', results: [], activeIndex: 0, media_type: \"movie\" },\n      { name: 'Filmes de Thriller', results: [], activeIndex: 0, media_type: \"movie\" },\n    ];\n\n    this.fetchMovies();\n  } \n\n\n  /**\n * Inicializa as categorias de filmes.\n * Define as categorias de filmes com seus respectivos resultados vazios e índice ativo como 0.\n * Em seguida, chama o método para buscar os filmes para preencher as categorias.\n */\n  fetchMovies() {\n    const fetchMethods = [\n      this.service.bannerApiData(),\n      this.service.trendingMovieApiData(),\n      this.service.fetchTopRatedSeries(),\n      this.service.fetchActionMovies(),\n      this.service.fetchAdventureMovies(),\n      this.service.fetchComedyMovies(),\n      this.service.fetchAnimationMovies(),\n      this.service.fetchDocumentaryMovies(),\n      this.service.fetchScienceFictionMovies(),\n      this.service.fetchThrillerMovies(),\n    ];\n\n    fetchMethods.forEach((fetchMethod, index) => {\n      fetchMethod.subscribe((result) => {\n        this.categories[index].results = result.results;\n      });\n    });\n  }\n\n  /**\n * Realiza o logout do utilizador e para a conexão do serviço de chat.\n */\n  logout() {\n    this.authService.logout();\n    this.chatService.stopConnection();\n  }\n\n\n  /**\n * Obtém os resultados da categoria especificada.\n * @param categoryName O nome da categoria.\n * @returns Um array com os resultados da categoria.\n */\n  getCategoryResults(categoryName: string): any[] {\n    const category = this.categories.find(cat => cat.name === categoryName);\n    //console.log(\"category\",category);\n    return category ? category.results : [];\n  }\n\n\n  /**\n * Obtém o índice ativo da categoria especificada.\n * @param categoryName O nome da categoria.\n * @returns O índice ativo da categoria.\n */\n  getCategoryActiveIndex(categoryName: string): number {\n    const category = this.categories.find(cat => cat.name === categoryName);\n    return category ? category.activeIndex : 0;\n  }\n\n  /**\n * Avança para a próxima página de resultados da categoria especificada.\n * @param categoryName O nome da categoria.\n */\n  nextCategory(categoryName: string) {\n    const category = this.categories.find(cat => cat.name === categoryName);\n    if (category) {\n      const batchSize = 4; // Defina o tamanho do lote aqui\n      const newIndex = category.activeIndex + batchSize;\n      category.activeIndex = newIndex >= category.results.length ? 0 : newIndex;\n    }\n  }\n\n  \n/**\n * Retrocede para a página anterior de resultados da categoria especificada.\n * @param categoryName O nome da categoria.\n */\n  prevCategory(categoryName: string) {\n    const category = this.categories.find(cat => cat.name === categoryName);\n    if (category) {\n      const batchSize = 4; // Defina o tamanho do lote aqui\n      const newIndex = category.activeIndex - batchSize;\n      category.activeIndex = newIndex \n    \n\n    \n        \n  \n    Por dar login.\n  \n\n\n  \n    Olá, {{user.username}}!\n  \n  Terminar sessão\n\n\n\n\n  \n    \n      \n        \n      \n    \n\n    \n      \n      Previous\n    \n    \n      \n      Next\n    \n  \n\n\n  \n    \n      \n      \n        {{b.original_title}}\n         {{b.overview}}\n        -->\n      \n    \n  \n\n\n\n\n  \n    {{ category.name }}\n    \n      \n      \n        \n      \n      >\n    \n  \n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                .session-container {\n  padding: 10px;\n  background-color: #f2f2f2; /* Cor de fundo da div */\n  border-radius: 5px;\n  display: flex;\n  align-items: center; /* Alinha verticalmente o conteúdo da div */\n  justify-content: space-between; /* Espaçamento entre o texto de boas-vindas e o botão */\n  height: 50px; /* Altura da div */\n  margin: 20px; /* Margem ao redor da div */\n}\n\n.logout-button {\n  padding: 10px 20px;\n  background-color: #f44336; /* Vermelho para indicar ação de logout */\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: bold;\n  text-transform: uppercase;\n  transition: background-color 0.3s ease;\n}\n\n  .logout-button:hover {\n    background-color: #d32f2f; /* Cor um pouco mais escura ao passar o mouse */\n  }\n\n/* Ajustes responsivos, se necessário */\n@media (max-width: 768px) {\n  .session-container {\n    flex-direction: column; /* Empilha o texto e o botão verticalmente */\n    height: auto; /* Altura automática para acomodar o conteúdo interno */\n  }\n\n  .logout-button {\n    padding: 8px 15px;\n    font-size: 0.8rem;\n    margin-top: 10px; /* Espaçamento acima do botão */\n  }\n\n}\n\n.main-page {\n    height:400px;\n}\n\n.carousel-inner {\n  height: 700px;\n}\n\n  .carousel-inner .carousel-item img {\n    height: 700px;\n    object-fit: cover;\n  }\n\n.carousel-caption h2 {\n  color: #E50914;\n  font-weight: bold;\n  font-size: 30px;\n}\n\n.carousel-caption p {\n  color: #ffffff;\n}\n\n.rowposter {\n  display: flex;\n  overflow-y: hidden;\n  overflow-x: scroll;\n}\n\n.rowimg {\n  max-height: 100px;\n  object-fit: contain;\n  width: 100%;\n  box-sizing: content-box;\n  transition: transform 450ms;\n  margin-right: 7px;\n}\n\n  .rowimg:hover {\n    transform: scale(1.09);\n    cursor: pointer;\n  }\n\n.largeposter {\n  max-height: 300px;\n}\n\n.rowposter::-webkit-scrollbar {\n  display: none;\n}\n.button-nav {\n  font-size: 3.5em;\n  background-color: transparent;\n  border: none;\n  color: dodgerblue;\n}\n\n.row-container {\n  display: flex;\n  align-items: center;\n}\n\n.poster-image {\n  width: 20%; /* Ajuste este valor conforme necessário */\n  position: absolute;\n  bottom: -6em;\n  left: 28px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 15); /* Sombra ao redor da caixa */\n}\n\n.row {\n  margin-top: 5em;\n\n}\n\n\n.custom-btn {\n  color: dodgerblue;\n  background-color: transparent;\n}\n\n.poster-caption-container {\n  display: flex;\n  align-items: center;\n}\n\n.poster-image-container {\n  flex: 1;\n}\n\n.carousel-caption {\n  flex: 2;\n}\n\n.seu-texto {\n  flex: 1;\n}\n.carousel-control-next, .carousel-control-prev {\n  position: absolute;\n  top: 0px;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 6%;\n  height: initial;\n  padding: 0;\n  color: #fff;\n  text-align: center;\n  background: 0 0;\n  border: 0;\n  opacity: .5;\n  transition: opacity .15s ease;\n}\n\n.carousel-dark .carousel-control-next-icon,\n.carousel-dark .carousel-control-prev-icon {\n  filter: brightness(0) saturate(100%) invert(27%) sepia(95%) saturate(6402%) hue-rotate(188deg) brightness(101%) contrast(101%);\n  opacity: 1; /* Garante que o ícone seja totalmente opaco */\n}\n\n.carousel-control-next-icon, .carousel-control-prev-icon {\n  display: inline-block;\n  width: 7rem;\n  height: 4rem;\n  background-repeat: no-repeat;\n  background-position: 50%;\n  background-size: 100% 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Por dar login.        Olá, {{user.username}}!    Terminar sessão                                              Previous                    Next                                {{b.original_title}}         {{b.overview}}        -->                  {{ category.name }}                                    >      '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminStatisticsComponent', 'selector': 'app-admin-statistics'},{'name': 'AllMoviesPageComponent', 'selector': 'app-all-movies-page'},{'name': 'AllSeriesPageComponent', 'selector': 'app-all-series-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'authentication-button'},{'name': 'BlockedAccountComponent', 'selector': 'app-blocked-account'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GamificationComponent', 'selector': 'app-gamification'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MovieDetailsComponent', 'selector': 'app-movie-details'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'PendingVerificationComponent', 'selector': 'app-pending-verification'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterWithThirdPartyComponent', 'selector': 'app-register-with-third-party'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchServiceComponent', 'selector': 'app-search-service'},{'name': 'SeasonDetailsComponent', 'selector': 'app-season-details'},{'name': 'SeasonDetailsInfoComponent', 'selector': 'app-season-details-info'},{'name': 'SendEmailComponent', 'selector': 'app-send-email'},{'name': 'SeriesDetailsComponent', 'selector': 'app-series-details'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'SuspendedAccountComponent', 'selector': 'app-suspended-account'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JwtInterceptor.html":{"url":"interceptors/JwtInterceptor.html","title":"interceptor - JwtInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  JwtInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interceptors/jwt.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/interceptors/jwt.interceptor.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/interceptors/jwt.interceptor.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, take } from 'rxjs';\nimport { AuthenticationService } from '../authentication/services/authentication.service';\n\n@Injectable()\n\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private authService : AuthenticationService) { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    this.authService.user$.pipe(take(1)).subscribe({\n      next: user => {\n        if (user) {\n          //adiciona o header da autorização igual ao do pedido\n          req = req.clone({\n            setHeaders: {\n              Authorization: `Bearer ${user.jwt}`\n            }\n          });\n        }\n      }\n    })\n    return next.handle(req);\n  }\n\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingComponent.html":{"url":"components/LoadingComponent.html","title":"component - LoadingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoadingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/loader/loading/loading.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading\n            \n\n\n\n            \n                styleUrls\n                ./loading.component.css\n            \n\n\n\n            \n                templateUrl\n                ./loading.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/loader/loading/loading.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/loader/loading/loading.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/loader/loading/loading.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { LoadingService } from '../loading-service/loading.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.css']\n})\nexport class LoadingComponent implements OnInit {\n  isLoading: Observable;\n\n  constructor(private loadingService: LoadingService) {\n    this.isLoading = this.loadingService.loading$;\n  }\n\n  ngOnInit(): void {\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./loading.component.css\n                \n                .overlay {\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  background-color: rgba(0,0,0,0.5);\n  z-index: 999;\n}\n\n.loader {\n  border: 5px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 5px solid #3498db;\n  width: 50px;\n  height: 50px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n}\n\n@-webkit-keyframes spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n  }\n\n  100% {\n    -webkit-transform: rotate(360deg);\n  }\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminStatisticsComponent', 'selector': 'app-admin-statistics'},{'name': 'AllMoviesPageComponent', 'selector': 'app-all-movies-page'},{'name': 'AllSeriesPageComponent', 'selector': 'app-all-series-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'authentication-button'},{'name': 'BlockedAccountComponent', 'selector': 'app-blocked-account'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GamificationComponent', 'selector': 'app-gamification'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MovieDetailsComponent', 'selector': 'app-movie-details'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'PendingVerificationComponent', 'selector': 'app-pending-verification'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterWithThirdPartyComponent', 'selector': 'app-register-with-third-party'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchServiceComponent', 'selector': 'app-search-service'},{'name': 'SeasonDetailsComponent', 'selector': 'app-season-details'},{'name': 'SeasonDetailsInfoComponent', 'selector': 'app-season-details-info'},{'name': 'SendEmailComponent', 'selector': 'app-send-email'},{'name': 'SeriesDetailsComponent', 'selector': 'app-series-details'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'SuspendedAccountComponent', 'selector': 'app-suspended-account'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoadingInterceptor.html":{"url":"interceptors/LoadingInterceptor.html","title":"interceptor - LoadingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoadingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interceptors/loading/loading-interceptor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/interceptors/loading/loading-interceptor.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/interceptors/loading/loading-interceptor.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize, tap } from 'rxjs/operators';\nimport { LoadingService } from '../../loader/loading-service/loading.service';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n\n  constructor(private loadingService: LoadingService) { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    this.loadingService.show();\n\n    return next.handle(req).pipe(\n      tap(event => {\n        if (event instanceof HttpResponse) {\n          this.loadingService.hide();\n        }\n      }),\n      finalize(() => this.loadingService.hide())\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingService.html":{"url":"injectables/LoadingService.html","title":"injectable - LoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/loader/loading-service/loading.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading$\n                            \n                            \n                                    Private\n                                loadingSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/loader/loading-service/loading.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/loader/loading-service/loading.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.loadingSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/loader/loading-service/loading.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/loader/loading-service/loading.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n  private loadingSubject = new BehaviorSubject(false);\n  loading$ = this.loadingSubject.asObservable();\n\n  show() {\n    this.loadingSubject.next(true);\n  }\n\n  hide() {\n    this.loadingSubject.next(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Login.html":{"url":"interfaces/Login.html","title":"interface - Login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Login\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authentication/models/login.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface para representar os dados necessários para o login de um utilizador no sistema.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Login {\n  email: string,\n  password: string,\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/authentication/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente responsável pela interface de login de usuários, incluindo autenticação por email/senha e serviços externos como Google.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                banDurationMessage\n                            \n                            \n                                errorMessages\n                            \n                            \n                                    \n                                googleButton\n                            \n                            \n                                loginForm\n                            \n                            \n                                returnUrl\n                            \n                            \n                                submitted\n                            \n                            \n                                submittedValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                connectChatHub\n                            \n                            \n                                    Private\n                                    Async\n                                googleCallBack\n                            \n                            \n                                initializeForm\n                            \n                            \n                                    Private\n                                initializeGoogleButton\n                            \n                            \n                                isFieldModified\n                            \n                            \n                                login\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                saveSubmittedValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, formBuilder: FormBuilder, router: Router, activatedRoute: ActivatedRoute, _renderer2: Renderer2, ngZone: NgZone, chatService: ChatService, _document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/authentication/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                            Construtor para inicializar dependências e configurações.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço de autenticação para gerenciar a autenticação de usuários.\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Construtor de formulários para criação de formulários reativos.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço do router para navegação.\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço de rota ativada para acesso a parâmetros de rota.\n\n                                                        \n                                                \n                                                \n                                                        _renderer2\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Renderer para manipulação de elementos DOM.\n\n                                                        \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço para execução de operações dentro da zona Angular.\n\n                                                        \n                                                \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço de chat para gerenciar conexões de websocket.\n\n                                                        \n                                                \n                                                \n                                                        _document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Documento para acesso ao DOM global.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        connectChatHub\n                        \n                    \n                \n            \n            \n                \n                        \n                    connectChatHub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/login/login.component.ts:248\n                        \n                    \n\n\n            \n                \n                        Inicia a conexão com o serviço de chat através do ChatService, configurando o usuário para receber e enviar mensagens em tempo real.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        googleCallBack\n                        \n                    \n                \n            \n            \n                \n                        \n                    googleCallBack(response: CredentialResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/login/login.component.ts:173\n                        \n                    \n\n\n            \n                \n                        Método de callback para lidar com a autenticação bem-sucedida ou falhas usando o Google One Tap.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                        CredentialResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Resposta da autenticação Google One Tap.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeForm\n                        \n                    \n                \n            \n            \n                \ninitializeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/login/login.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Inicializa o formulário de login com validações básicas.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeGoogleButton\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeGoogleButton()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/login/login.component.ts:151\n                        \n                    \n\n\n            \n                \n                        Configura o botão de login do Google One Tap na página de login. Este método é responsável por carregar a biblioteca do Google, inicializar o botão de login com as configurações desejadas e definir o callback para o processo de autenticação.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldModified\n                        \n                    \n                \n            \n            \n                \nisFieldModified(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/login/login.component.ts:233\n                        \n                    \n\n\n            \n                \n                        Verifica se um campo do formulário foi modificado em relação ao valor originalmente submetido.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome do campo do formulário a ser verificado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Booleano indicando se o valor do campo foi modificado ou não.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/login/login.component.ts:105\n                        \n                    \n\n\n            \n                \n                        Submete o formulário de login e processa a resposta.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/login/login.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Carrega e configura o script externo do Google para o botão de login.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/login/login.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Inicializa o componente e prepara o ambiente, como o botão do Google e o formulário de login.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveSubmittedValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveSubmittedValues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/login/login.component.ts:240\n                        \n                    \n\n\n            \n                \n                        Salva os valores submetidos do formulário de login para comparações futuras. Isso é útil para verificar se os campos foram modificados desde a última submissão.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        banDurationMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/login/login.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/login/login.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        googleButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Default value : new ElementRef({})\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('googleButton', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/login/login.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup([])\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/login/login.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/login/login.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/login/login.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submittedValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/login/login.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Inject, Renderer2, ViewChild, NgZone } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Route, Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { take } from 'rxjs';\nimport { User } from '../models/user';\nimport { CredentialResponse } from 'google-one-tap';\nimport { LoginWithExternal } from '../models/loginWithExternals';\nimport { jwtDecode } from 'jwt-decode';\nimport { DOCUMENT } from '@angular/common';\nimport { ChatService } from '../../chat/services/chat.service';\n\n/**\n * Componente responsável pela interface de login de usuários, incluindo autenticação por email/senha e serviços externos como Google.\n *\n * @Component Decorador que define a classe como um componente Angular com seu seletor e metadados associados.\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.css'\n})\nexport class LoginComponent {\n  @ViewChild('googleButton', { static: true }) googleButton: ElementRef = new ElementRef({});\n  loginForm: FormGroup = new FormGroup([]);\n  submitted = false;\n  errorMessages: any = {};\n  submittedValues: any = {};\n  returnUrl: string | null = null;\n  banDurationMessage: string = '';\n\n  /**\n   * Construtor para inicializar dependências e configurações.\n   *\n   * @param authService Serviço de autenticação para gerenciar a autenticação de usuários.\n   * @param formBuilder Construtor de formulários para criação de formulários reativos.\n   * @param router Serviço do router para navegação.\n   * @param activatedRoute Serviço de rota ativada para acesso a parâmetros de rota.\n   * @param _renderer2 Renderer para manipulação de elementos DOM.\n   * @param ngZone Serviço para execução de operações dentro da zona Angular.\n   * @param chatService Serviço de chat para gerenciar conexões de websocket.\n   * @param _document Documento para acesso ao DOM global.\n   */\n  constructor(\n    private authService: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private _renderer2: Renderer2,\n    private ngZone: NgZone,\n    private chatService: ChatService,\n\n    @Inject(DOCUMENT) private _document: Document\n  ) {\n    this.authService.user$.pipe(take(1)).subscribe({\n      next: (user: User | null) => {\n        if (user) {\n          this.router.navigateByUrl(\"/home\");\n        } else {\n          this.activatedRoute.queryParamMap.subscribe({\n            next: (params: any) => {\n              if (params) {\n                this.returnUrl = params.get('returnUrl');\n              }\n            }\n          })\n        }\n      }\n    });\n  }\n\n  /**\n   * Inicializa o componente e prepara o ambiente, como o botão do Google e o formulário de login.\n   */\n  ngOnInit(): void {\n    this.initializeGoogleButton();\n    this.initializeForm();\n  }\n\n  /**\n   * Inicializa o formulário de login com validações básicas.\n   */\n  initializeForm() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n\n  /**\n   * Carrega e configura o script externo do Google para o botão de login.\n   */\n  ngAfterViewInit() {\n    const script1 = this._renderer2.createElement('script');\n    script1.src = 'https://accounts.google.com/gsi/client';\n    script1.async = 'true';\n    script1.defer = 'true';\n    this._renderer2.appendChild(this._document.body, script1);\n\n  }\n\n  /**\n   * Submete o formulário de login e processa a resposta.\n   */\n  login() {\n    this.submitted = true;\n    this.errorMessages = {};\n    this.submittedValues = {};\n\n    if (this.loginForm.valid) {\n      this.authService.login(this.loginForm.value).subscribe({\n        next: (response: any) => {\n          if (response.message === \"A conta está por confirmar!\") {\n            this.router.navigateByUrl('/account/confirm-email');\n          } else if (this.returnUrl) {\n            this.router.navigateByUrl(this.returnUrl);\n            this.connectChatHub();\n          } else {\n            this.router.navigateByUrl('/home');\n            this.connectChatHub();\n          }\n        },\n        error: (error) => {\n          // Handle the banned user case\n          if (error.error.Field === \"Banned\") {\n            this.router.navigateByUrl('/suspendedAccount');\n            return;\n          }\n\n          // Handle other errors\n          if (error.error.errors) {\n            error.error.errors.forEach((value: any) => {\n              if (!this.errorMessages[value.field]) {\n                this.errorMessages[value.field] = value.message;\n              }\n            });\n            this.saveSubmittedValues();\n          } else {\n            this.errorMessages[error.error.field] = error.error.message;\n            this.saveSubmittedValues();\n          }\n        }\n      });\n    }\n  }\n\n\n  /**\n * Configura o botão de login do Google One Tap na página de login. Este método é responsável por carregar a biblioteca do Google, inicializar o botão de login com as configurações desejadas e definir o callback para o processo de autenticação.\n */\n  private initializeGoogleButton() {\n    (window as any).onGoogleLibraryLoad = () => {\n      //@ts-ignore\n      google.accounts.id.initialize({\n        client_id: '290666772375-5s2b58vflc2ohpc01f7q1hguo9k5gpi7.apps.googleusercontent.com',\n        callback: this.googleCallBack.bind(this),\n        auto_select: false,\n        cancel_on_tap_outside: true\n      });\n      //@ts-ignore\n      google.accounts.id.renderButton(\n        this.googleButton.nativeElement,\n        { size: 'medium', shape: 'rectangular', text: 'signin_with', logo_alignment: 'center' }\n      );\n    };\n  }\n\n  /**\n   * Método de callback para lidar com a autenticação bem-sucedida ou falhas usando o Google One Tap.\n   * \n   * @param response Resposta da autenticação Google One Tap.\n   */\n  private async googleCallBack(response: CredentialResponse) {\n    this.errorMessages = {};\n    this.submittedValues = {};\n\n    if (response.credential) {\n      const decodedToken: any = jwtDecode(response.credential);\n      this.authService.loginWithThirdParty(new LoginWithExternal(response.credential, decodedToken.sub, \"google\", decodedToken.email)).subscribe({\n        next: _ => {\n          this.ngZone.run(() => {\n            if (this.returnUrl) {\n              this.router.navigateByUrl(this.returnUrl);\n              this.connectChatHub();\n            } else {\n              this.router.navigateByUrl('/');\n              this.connectChatHub();\n            }\n          });\n        },\n        error: error => {\n          this.ngZone.run(() => {\n            // Check if the error field indicates the user is banned and handle the message\n            if (error.error.field === \"Banned\") {\n              // Here we assume the backend sends a readable ban duration in the response\n              //this.banDurationMessage = `A sua conta encontra-se suspensa por ${error.error.BanDuration}.`;\n              this.banDurationMessage = `A sua conta encontra-se suspensa.`;\n              this.router.navigateByUrl('/suspendedAccount', { state: { banDurationMessage: this.banDurationMessage } });\n            } else {\n              // Handle other errors by displaying them to the user\n              if (error.error.errors) {\n                // If there are multiple error messages, process them\n                console.log(error.error.errors);\n                error.error.errors.forEach((value: any) => {\n                  this.errorMessages[value.field] = value.message;\n                });\n              } else {\n                // If there's a single error message, display it\n                if (error.error.message === \"Não existe nenhuma conta associada a esse email!\") {\n                  const decodedToken: any = jwtDecode(response.credential);\n                  this.router.navigateByUrl(`/account/register/third-party/google?access_token=${response.credential}&userId=${decodedToken.sub}&email=${decodedToken.email}`);\n                }\n                this.errorMessages[error.error.field] = error.error.message;\n              }\n              this.saveSubmittedValues();\n            }\n          });\n        }\n      });\n    } else {\n      // Handle the case where the Google sign-in response did not include a credential\n      this.errorMessages['googleLogin'] = 'Failed to sign in with Google.';\n      this.saveSubmittedValues();\n    }\n  }\n\n  /**\n * Verifica se um campo do formulário foi modificado em relação ao valor originalmente submetido.\n *\n * @param fieldName O nome do campo do formulário a ser verificado.\n * @returns Booleano indicando se o valor do campo foi modificado ou não.\n */\n  isFieldModified(fieldName: string): boolean {\n    return this.loginForm.get(fieldName)!.value !== this.submittedValues[fieldName];\n  }\n\n  /**\n * Salva os valores submetidos do formulário de login para comparações futuras. Isso é útil para verificar se os campos foram modificados desde a última submissão.\n */\n  private saveSubmittedValues(): void {\n    this.submittedValues[\"email\"] = this.loginForm.get(\"email\")!.value;\n    this.submittedValues[\"password\"] = this.loginForm.get(\"password\")!.value;\n  }\n\n  /**\n * Inicia a conexão com o serviço de chat através do ChatService, configurando o usuário para receber e enviar mensagens em tempo real.\n */\n  private connectChatHub(): void {\n    this.chatService.startConnectionAndListen();\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n    \n\n\n      \n        \n        \n      \n\n      \n        \n          O email é obrigatório!\n        \n        \n          {{ errorMessages['Email'] }}\n        \n        \n          {{ errorMessages['ThirdPartyEmail'] }}\n        \n      \n\n      \n        \n        \n      \n\n      \n        \n          A palavra-passe é obrigatória!\n        \n        \n          {{ errorMessages['Password'] }}\n        \n      \n\n\n      \n      Esqueceu-se da palavra-passe?\n      \n      \n\n      -->\n      \n        Não possui conta?\n          \n        Registe-se aqui!\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            O email é obrigatório!                          {{ errorMessages[\\'Email\\'] }}                          {{ errorMessages[\\'ThirdPartyEmail\\'] }}                                                                  A palavra-passe é obrigatória!                          {{ errorMessages[\\'Password\\'] }}                          Esqueceu-se da palavra-passe?                  -->              Não possui conta?                  Registe-se aqui!            '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminStatisticsComponent', 'selector': 'app-admin-statistics'},{'name': 'AllMoviesPageComponent', 'selector': 'app-all-movies-page'},{'name': 'AllSeriesPageComponent', 'selector': 'app-all-series-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'authentication-button'},{'name': 'BlockedAccountComponent', 'selector': 'app-blocked-account'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GamificationComponent', 'selector': 'app-gamification'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MovieDetailsComponent', 'selector': 'app-movie-details'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'PendingVerificationComponent', 'selector': 'app-pending-verification'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterWithThirdPartyComponent', 'selector': 'app-register-with-third-party'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchServiceComponent', 'selector': 'app-search-service'},{'name': 'SeasonDetailsComponent', 'selector': 'app-season-details'},{'name': 'SeasonDetailsInfoComponent', 'selector': 'app-season-details-info'},{'name': 'SendEmailComponent', 'selector': 'app-send-email'},{'name': 'SeriesDetailsComponent', 'selector': 'app-series-details'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'SuspendedAccountComponent', 'selector': 'app-suspended-account'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginWithExternal.html":{"url":"classes/LoginWithExternal.html","title":"class - LoginWithExternal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginWithExternal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authentication/models/loginWithExternals.ts\n        \n\n\n            \n                Description\n            \n            \n                Classe para armazenar informações necessárias para autenticar um utilizador utilizando credenciais de provedores externos.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                email\n                            \n                            \n                                provider\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accessToken: string, userId: string, provider: string, email: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/authentication/models/loginWithExternals.ts:11\n                            \n                        \n\n                \n                    \n                            Construtor para inicializar um objeto LoginWithExternal com dados de autenticação externa.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        accessToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O token de acesso fornecido pelo serviço externo.\n\n                                                        \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O identificador único do utilizador no serviço externo.\n\n                                                        \n                                                \n                                                \n                                                        provider\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O nome do serviço provedor de identidade externo (ex.: Google, Facebook).\n\n                                                        \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O endereço de email associado à conta do utilizador no serviço externo.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/models/loginWithExternals.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/models/loginWithExternals.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/models/loginWithExternals.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/models/loginWithExternals.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginWithExternal {\n  \n  accessToken: string;\n  userId: string;\n  provider: string;\n  email: string;\n\n  /**\n   * Construtor para inicializar um objeto LoginWithExternal com dados de autenticação externa.\n   * \n   * @param accessToken O token de acesso fornecido pelo serviço externo.\n   * @param userId O identificador único do utilizador no serviço externo.\n   * @param provider O nome do serviço provedor de identidade externo (ex.: Google, Facebook).\n   * @param email O endereço de email associado à conta do utilizador no serviço externo.\n   */\n  constructor(accessToken: string, userId: string, provider: string, email: string)//\n {\n    this.accessToken = accessToken;\n    this.userId = userId;\n    this.provider = provider;\n    this.email = email;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MedalsDto.html":{"url":"interfaces/MedalsDto.html","title":"interface - MedalsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MedalsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/gamification/models/MedalsDto.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface que representa a estrutura de dados para uma medalha no contexto de gamificação.\nEsta estrutura é utilizada para transferir informações sobre as medalhas entre o frontend e o backend,\npermitindo a visualização e gestão das medalhas dentro do sistema.\nPropriedades:\n\nid: Um identificador único para a medalha. É utilizado para referenciar a medalha de forma unívoca no sistema.\nname: O nome da medalha. Representa o título ou nome curto dado à medalha, que é exibido aos utilizadores.\ndescription: Uma descrição detalhada da medalha. Fornece aos utilizadores informações sobre como a medalha pode ser desbloqueada ou o seu significado.\nimage: Um caminho ou URL para a imagem representativa da medalha. Utilizado para exibir uma representação visual da medalha nos interfaces de utilizador.\n\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MedalsDto {\n  id: number;\n  name: string;\n  description: string;\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaNotificationModel.html":{"url":"classes/MediaNotificationModel.html","title":"class - MediaNotificationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaNotificationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/notifications/models/media-notification-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Modelo para notificações relacionadas a novos episódios de mídia, como filmes ou séries.\nEstende o modelo base de notificação para incluir informações específicas da mídia.\nPropriedades:\n\nmediaId: Identificador da mídia associada à notificação.\nmediaName: Nome da mídia associada.\nmediaPhoto: URL ou caminho da foto da mídia associada.\nuserMediaId: Identificador único da relação UserMedia associada à notificação.\n\n\n            \n\n            \n                Extends\n            \n            \n                            NotificationModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mediaId\n                            \n                            \n                                mediaName\n                            \n                            \n                                mediaPhoto\n                            \n                            \n                                userMediaId\n                            \n                            \n                                createdAt\n                            \n                            \n                                eventType\n                            \n                            \n                                isRead\n                            \n                            \n                                message\n                            \n                            \n                                triggeredByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(triggeredByUserId: string, message: string, createdAt: Date, isRead: boolean, eventType: string, mediaId: number, mediaName: string, mediaPhoto: string, userMediaId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/notifications/models/media-notification-model.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        triggeredByUserId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createdAt\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isRead\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaPhoto\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userMediaId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mediaId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/notifications/models/media-notification-model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/notifications/models/media-notification-model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaPhoto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/notifications/models/media-notification-model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userMediaId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/notifications/models/media-notification-model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         NotificationModel\n\n                            \n                        \n                    \n                        \n                                Defined in         NotificationModel:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         NotificationModel\n\n                            \n                        \n                    \n                        \n                                Defined in         NotificationModel:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         NotificationModel\n\n                            \n                        \n                    \n                        \n                                Defined in         NotificationModel:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         NotificationModel\n\n                            \n                        \n                    \n                        \n                                Defined in         NotificationModel:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggeredByUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         NotificationModel\n\n                            \n                        \n                    \n                        \n                                Defined in         NotificationModel:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotificationModel } from \"./notification-model\";\n\n/**\n * Modelo para notificações relacionadas a novos episódios de mídia, como filmes ou séries.\n * Estende o modelo base de notificação para incluir informações específicas da mídia.\n *\n * Propriedades:\n * - mediaId: Identificador da mídia associada à notificação.\n * - mediaName: Nome da mídia associada.\n * - mediaPhoto: URL ou caminho da foto da mídia associada.\n * - userMediaId: Identificador único da relação UserMedia associada à notificação.\n */\nexport class MediaNotificationModel extends NotificationModel {\n  mediaId: number;\n  mediaName: string;\n  mediaPhoto: string;\n  userMediaId: number;\n\n  constructor(\n    triggeredByUserId: string,\n    message: string,\n    createdAt: Date,\n    isRead: boolean,\n    eventType: string,\n    mediaId: number,\n    mediaName: string,\n    mediaPhoto: string,\n    userMediaId: number\n  ) {\n    super(triggeredByUserId, message, createdAt, isRead, eventType);\n    this.mediaId = mediaId;\n    this.mediaName = mediaName;\n    this.mediaPhoto = mediaPhoto;\n    this.userMediaId = userMediaId;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/chat/models/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Define a estrutura para uma mensagem dentro de um chat.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            messageId\n                                        \n                                \n                                \n                                        \n                                            readAt\n                                        \n                                \n                                \n                                        \n                                            sendUsername\n                                        \n                                \n                                \n                                        \n                                            sentAt\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        messageId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        messageId:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador único da mensagem.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        readAt:     Date | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data e hora em que a mensagem foi lida pelo destinatário.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sendUsername\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sendUsername:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nome de utilizador do remetente da mensagem.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sentAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sentAt:     Date | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data e hora em que a mensagem foi enviada.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Texto da mensagem enviada.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n  /**\n   * Identificador único da mensagem.\n   */\n  messageId: string | undefined;\n\n  /**\n   * Nome de utilizador do remetente da mensagem.\n   */\n  sendUsername: string;\n\n  /**\n   * Texto da mensagem enviada.\n   */\n  text: string;\n\n  /**\n   * Data e hora em que a mensagem foi enviada.\n   */\n  sentAt: Date | undefined;\n\n  /**\n   * Data e hora em que a mensagem foi lida pelo destinatário.\n   */\n  readAt: Date | undefined;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageNotificationModel.html":{"url":"classes/MessageNotificationModel.html","title":"class - MessageNotificationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageNotificationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/notifications/models/message-notification-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Modelo para notificações de mensagens. Estende o modelo de notificação base,\nincluindo propriedades específicas como ID do utilizador alvo e foto do utilizador que disparou a notificação.\nPropriedades:\n\ntargetUserId: Identificador do utilizador alvo da notificação.\ntriggeredByUserPhoto: Foto do utilizador que disparou a notificação.\n\n\n            \n\n            \n                Extends\n            \n            \n                            NotificationModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                targetUserId\n                            \n                            \n                                triggeredByUserPhoto\n                            \n                            \n                                createdAt\n                            \n                            \n                                eventType\n                            \n                            \n                                isRead\n                            \n                            \n                                message\n                            \n                            \n                                triggeredByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(triggeredByUserId: string, message: string, createdAt: Date, isRead: boolean, eventType: string, targetUserId: string, triggeredByUserPhoto: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/notifications/models/message-notification-model.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        triggeredByUserId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createdAt\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isRead\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        targetUserId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        triggeredByUserPhoto\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        targetUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/notifications/models/message-notification-model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggeredByUserPhoto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/notifications/models/message-notification-model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         NotificationModel\n\n                            \n                        \n                    \n                        \n                                Defined in         NotificationModel:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         NotificationModel\n\n                            \n                        \n                    \n                        \n                                Defined in         NotificationModel:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         NotificationModel\n\n                            \n                        \n                    \n                        \n                                Defined in         NotificationModel:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         NotificationModel\n\n                            \n                        \n                    \n                        \n                                Defined in         NotificationModel:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggeredByUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         NotificationModel\n\n                            \n                        \n                    \n                        \n                                Defined in         NotificationModel:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotificationModel } from \"./notification-model\";\n\n/**\n * Modelo para notificações de mensagens. Estende o modelo de notificação base,\n * incluindo propriedades específicas como ID do utilizador alvo e foto do utilizador que disparou a notificação.\n *\n * Propriedades:\n * - targetUserId: Identificador do utilizador alvo da notificação.\n * - triggeredByUserPhoto: Foto do utilizador que disparou a notificação.\n */\nexport class MessageNotificationModel extends NotificationModel {\n  targetUserId: string;\n  triggeredByUserPhoto: string;\n\n  constructor(\n    triggeredByUserId: string,\n    message: string,\n    createdAt: Date,\n    isRead: boolean,\n    eventType: string,\n    targetUserId: string,\n    triggeredByUserPhoto: string\n  ) {\n    super(triggeredByUserId, message, createdAt, isRead, eventType);\n    this.targetUserId = targetUserId;\n    this.triggeredByUserPhoto = triggeredByUserPhoto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MovieCategory.html":{"url":"interfaces/MovieCategory.html","title":"interface - MovieCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MovieCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/home.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activeIndex\n                                        \n                                \n                                \n                                        \n                                            media_type\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            results\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        media_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        media_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        results:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../authentication/services/authentication.service';\nimport { MovieApiServiceComponent } from '../media/api/movie-api-service/movie-api-service.component';\nimport { Meta, Title } from '@angular/platform-browser';\nimport { ChatService } from '../chat/services/chat.service';\nimport { Message } from '../chat/models/messages';\n\ninterface MovieCategory {\n  name: string;\n  results: any[];\n  activeIndex: number;\n  media_type: string;\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  categories: MovieCategory[] = [];\n  usernameReceiver: string = \"\";\n  messageText: string = \"\";\n\n  constructor(public authService: AuthenticationService, private chatService: ChatService, private router: Router, private service: MovieApiServiceComponent, private title: Title, private meta: Meta) { }\n\n  ngOnInit(): void {\n    this.initCategories();\n  }\n\n  /**\n * Envia uma mensagem para um utilizador específico.\n * Verifica se o nome do utilizador destinatário e a mensagem estão preenchidos antes de enviar.\n * Se a validação passar, cria uma mensagem com os dados fornecidos e a envia através do serviço de chat.\n * Registra no console se a mensagem foi enviada com sucesso ou se ocorreu um erro.\n */\n  sendMessage(): void {\n    if (!this.usernameReceiver.trim() || !this.messageText.trim()) {\n      console.log('Nome do utilizador destinatário e mensagem são necessários.');\n      return;\n    }\n\n    var messageToSent: Message = {\n      messageId: undefined,\n      sendUsername: this.authService.getLoggedInUserName()!,\n      text: this.messageText.trim(),\n      sentAt: undefined,\n      readAt: undefined\n    }\n\n    this.chatService.sendMessage(this.usernameReceiver, messageToSent)\n      .then(() => {\n        console.log(\"Mensagem Enviada!\"); \n      })\n      .catch(error => console.error('Erro ao enviar mensagem:', error));\n  }\n\n  initCategories() {\n    this.categories = [\n      { name: 'Banner', results: [], activeIndex: 0, media_type: \"movie\" },\n      { name: 'Filmes em Destaque', results: [], activeIndex: 0, media_type: \"movie\" },\n      { name: 'Séries Mais Votadas', results: [], activeIndex: 0, media_type: \"tv\" },\n      { name: 'Filmes de Ação', results: [], activeIndex: 0, media_type: \"movie\" },\n      { name: 'Filmes de Aventura', results: [], activeIndex: 0, media_type: \"movie\" },\n      { name: 'Filmes de Comédia', results: [], activeIndex: 0, media_type: \"movie\" },\n      { name: 'Filmes de Animação', results: [], activeIndex: 0, media_type: \"movie\" },\n      { name: 'Filmes Documentários', results: [], activeIndex: 0, media_type: \"movie\" },\n      { name: 'Filmes de Ficção Científica', results: [], activeIndex: 0, media_type: \"movie\" },\n      { name: 'Filmes de Thriller', results: [], activeIndex: 0, media_type: \"movie\" },\n    ];\n\n    this.fetchMovies();\n  } \n\n\n  /**\n * Inicializa as categorias de filmes.\n * Define as categorias de filmes com seus respectivos resultados vazios e índice ativo como 0.\n * Em seguida, chama o método para buscar os filmes para preencher as categorias.\n */\n  fetchMovies() {\n    const fetchMethods = [\n      this.service.bannerApiData(),\n      this.service.trendingMovieApiData(),\n      this.service.fetchTopRatedSeries(),\n      this.service.fetchActionMovies(),\n      this.service.fetchAdventureMovies(),\n      this.service.fetchComedyMovies(),\n      this.service.fetchAnimationMovies(),\n      this.service.fetchDocumentaryMovies(),\n      this.service.fetchScienceFictionMovies(),\n      this.service.fetchThrillerMovies(),\n    ];\n\n    fetchMethods.forEach((fetchMethod, index) => {\n      fetchMethod.subscribe((result) => {\n        this.categories[index].results = result.results;\n      });\n    });\n  }\n\n  /**\n * Realiza o logout do utilizador e para a conexão do serviço de chat.\n */\n  logout() {\n    this.authService.logout();\n    this.chatService.stopConnection();\n  }\n\n\n  /**\n * Obtém os resultados da categoria especificada.\n * @param categoryName O nome da categoria.\n * @returns Um array com os resultados da categoria.\n */\n  getCategoryResults(categoryName: string): any[] {\n    const category = this.categories.find(cat => cat.name === categoryName);\n    //console.log(\"category\",category);\n    return category ? category.results : [];\n  }\n\n\n  /**\n * Obtém o índice ativo da categoria especificada.\n * @param categoryName O nome da categoria.\n * @returns O índice ativo da categoria.\n */\n  getCategoryActiveIndex(categoryName: string): number {\n    const category = this.categories.find(cat => cat.name === categoryName);\n    return category ? category.activeIndex : 0;\n  }\n\n  /**\n * Avança para a próxima página de resultados da categoria especificada.\n * @param categoryName O nome da categoria.\n */\n  nextCategory(categoryName: string) {\n    const category = this.categories.find(cat => cat.name === categoryName);\n    if (category) {\n      const batchSize = 4; // Defina o tamanho do lote aqui\n      const newIndex = category.activeIndex + batchSize;\n      category.activeIndex = newIndex >= category.results.length ? 0 : newIndex;\n    }\n  }\n\n  \n/**\n * Retrocede para a página anterior de resultados da categoria especificada.\n * @param categoryName O nome da categoria.\n */\n  prevCategory(categoryName: string) {\n    const category = this.categories.find(cat => cat.name === categoryName);\n    if (category) {\n      const batchSize = 4; // Defina o tamanho do lote aqui\n      const newIndex = category.activeIndex - batchSize;\n      category.activeIndex = newIndex \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MovieCategory-1.html":{"url":"interfaces/MovieCategory-1.html","title":"interface - MovieCategory-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MovieCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/profile/profile/profile.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activeIndex\n                                        \n                                \n                                \n                                        \n                                            media_type\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            results\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        media_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        media_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        results:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ProfileService } from '../services/profile.service';\nimport { Profile } from '../models/profile';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subject, catchError, firstValueFrom, forkJoin, map, mergeMap, of, takeUntil } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../../authentication/services/authentication.service';\nimport { FollowerProfile } from '../models/follower-profile';\nimport { MovieApiServiceComponent } from '../../media/api/movie-api-service/movie-api-service.component';\nimport { UserMedia } from '../models/user-media';\nimport { Title } from '@angular/platform-browser';\nimport { AdminService } from '../../admin/service/admin.service';\nimport { NotificationService } from '../../notifications/services/notification.service';\nimport { GamificationService } from '../../gamification/Service/gamification.service';\nimport { ChatService } from '../../chat/services/chat.service';\nimport { ProfileChat } from '../../chat/models/profileChat';\n\ninterface MovieCategory {\n  name: string;\n  results: any[];\n  activeIndex: number;\n  media_type: string;\n}\n\n/**\n * Componente para a página de perfil do utilizador.\n * Permite visualizar e interagir com o perfil do utilizador, incluindo seguir/desseguir, enviar mensagens e visualizar media favorita.\n */\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrl: './profile.component.css'\n})\nexport class ProfileComponent implements OnInit {\n\n  currentUsername: string | undefined;\n  loggedUserName: string | null = null;\n  isFollowing: boolean = false;\n  loggedUserProfile: Profile | undefined;\n  userPhoto: string | null = null;\n\n  profileForm: FormGroup = new FormGroup({});\n\n  private unsubscribed$ = new Subject();\n\n  message: string | undefined;\n  errorMessages: any;\n\n  usersProfiles: Profile[] = [];\n\n  followersCount: number | undefined;\n  followingCount: number | undefined;\n\n  canViewData: boolean = false;\n  isFollowRequestApproved: boolean = false;\n  isProfilePublic: string | undefined;\n  followRequestSent: boolean = false;\n\n  showFollowers: boolean = true;\n  showFollowing: boolean = true;\n\n  showFavorites: boolean = true;\n  showAllFavorites: boolean = false;\n\n  showMoviesWatched: boolean = true;\n  showAllMoviesWatched: boolean = false;\n\n  showMoviesToWatch: boolean = true;\n  showAllMoviesToWatch: boolean = false;\n\n  showSeriesWatched: boolean = true;\n  showAllSeriesWatched: boolean = false;\n\n  showSeriesToWatch: boolean = true;\n  showAllSeriesToWatch: boolean = false;\n\n  showMedals: boolean = true;\n\n  expandedFollowers: boolean = false;\n  expandedFollowing: boolean = false;\n\n  expandedFavoritesList: boolean = false;\n\n  expandedMoviesWatchList: boolean = false;\n  expandedMoviesToWatchList: boolean = false;\n\n  expandedSeriesWatchList: boolean = false;\n  expandedSeriesToWatchList: boolean = false;\n\n  followers: FollowerProfile[] = [];\n  following: FollowerProfile[] = [];\n\n  showAllFollowing = false;\n  showAllFollowers = false;\n  showFiveOtherUsers = false;\n  showExpandedSuggestions = false;\n\n  categories: MovieCategory[] = [];\n  favoriteMovies: any[] = [];\n  favoriteSeries: any[] = [];\n  watchedMovies: any[] = [];\n  watchedSeries: any[] = [];\n  watchLaterMovies: any[] = [];\n  watchLaterSeries: any[] = [];\n  getMovieDetailResult: any;\n\n  isBanPopupVisible = false;\n  isModerator: boolean = false;\n  banDuration: number | undefined;\n  isBanned?: boolean;\n  selectedUserForBan: string | null = null;\n\n  usersProfilesMod: Profile[] = [];\n  filteredUsersProfiles: Profile[] = [];\n  searchTerm: string = '';\n  showNoResults: boolean = false;\n  selectedUser: Profile | undefined;\n  selectedUsername: string | null = null;\n\n  page: number = 1;\n  pageSize: number = 5;\n  collectionSize!: number;\n\n  medals: any[] = [];\n  showAllMedals = false;\n\n  /**\n * Construtor do componente ProfileComponent.\n * Inicializa os serviços e ferramentas necessárias para a gestão do perfil do utilizador.\n * @param profileService Serviço para interação com dados de perfil do utilizador.\n * @param chatService Serviço para gestão de mensagens e chat.\n * @param formBuilder Ferramenta para criação de formulários reativos.\n * @param route Serviço para interação com a rota ativa.\n * @param authService Serviço de autenticação, utilizado para gestão do estado de login do utilizador.\n * @param service Serviço para interação com a API de media (filmes e séries).\n * @param adminService Serviço para interações específicas de administradores.\n * @param gamificationService Serviço para gestão de elementos de gamificação, como medalhas.\n */\n  constructor(private profileService: ProfileService,\n    private chatService: ChatService,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute, public authService: AuthenticationService,\n    private service: MovieApiServiceComponent, private adminService: AdminService,\n    private gamificationService: GamificationService) { }\n\n  /**\n   * Método chamado imediatamente após a criação do componente.\n   * Subscreve a mudanças na rota ativa e ao estado de autenticação do utilizador para carregar os dados de perfil necessários.\n   * Inicializa o formulário de perfil e carrega dados de media e gamificação associados ao perfil visualizado.\n   */\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      if (typeof params['username'] === 'string') {\n        this.currentUsername = params['username'];\n      }\n      this.authService.user$.subscribe(user => {\n        this.loggedUserName = user ? user.username : null;\n        if (this.currentUsername && this.loggedUserName && this.currentUsername !== this.loggedUserName) {\n          this.checkFollowingStatus(this.loggedUserName, this.currentUsername);\n        }\n      });\n      this.loadUserRole();\n      if (this.currentUsername) {\n        this.getUserProfileInfo(this.currentUsername);\n        this.setFormFields(this.currentUsername);\n        this.setImages(this.currentUsername);\n        this.getFollowersList();\n        this.getFollowingList();\n        this.getFavorites(this.currentUsername);\n        this.getWatchedMedia(this.currentUsername);\n        this.getWatchLaterMedia(this.currentUsername);\n        this.getMedals(this.currentUsername);\n      }\n    });\n    this.loggedUserName = this.authService.getLoggedInUserName();\n    this.getUserProfilesMod();\n    if (this.loggedUserName)\n      this.profileService.getUserProfilesNotLoggedIn(this.loggedUserName).pipe(takeUntil(this.unsubscribed$)).subscribe(\n        (profiles: Profile[]) => {\n          this.usersProfilesMod = profiles;\n          this.filteredUsersProfiles = profiles;\n          this.collectionSize = profiles.length;\n          this.updateSelectedUser();\n          this.sortAlphabetically();\n          this.filterUsers();\n        },\n        error => {\n          console.error(\"Error while fetching users' profiles:\", error);\n        }\n      );\n\n    if (this.usersProfilesMod.length > 0) {\n      this.updateSelectedUser();\n    }\n    this.collectionSize = this.filteredUsersProfiles.length;\n    this.getUserProfiles();\n    this.initializeForm();\n    this.categories = [\n      { name: 'Trending Movies', results: [], activeIndex: 0, media_type: \"movie\" },\n    ];\n    this.fetchTrending();\n  }\n\n  /**\n  * Carrega dados de trending de media da API e atribui os resultados às categorias correspondentes.\n  * Utilizado para exibir media em destaque ou mais popular na página de perfil do utilizador.\n  */\n  fetchTrending() {\n    const fetchMethods = [\n      this.service.trendingMovieApiData(),\n    ];\n\n    fetchMethods.forEach((fetchMethod, index) => {\n      fetchMethod.subscribe((result) => {\n        this.categories[index].results = result.results;\n      });\n    });\n  }\n\n  /**\n  * Método chamado imediatamente antes da destruição do componente.\n  * Responsável por cancelar todas as subscrições ativas para evitar memory leaks.\n  */\n  ngOnDestroy(): void {\n    this.unsubscribed$.next();\n    this.unsubscribed$.complete();\n  }\n\n   /**\n   * Obtém a informação do perfil do utilizador especificado pelo nome de utilizador.\n   * Atualiza a variável de estado `canViewData` baseada no status do perfil e se\n   * o utilizador logado tem permissão para ver o perfil.\n   * \n   * @param username Nome do utilizador do perfil a ser obtido.\n   * @returns Promise Uma promessa que resolve quando a informação do perfil\n   * é obtida com sucesso ou rejeitada em caso de erro.\n   */\n  getUserProfileInfo(username: string): Promise {\n    return new Promise((resolve, reject) => {\n      this.profileService.getUserData(username).subscribe({\n        next: (userData: Profile) => {\n          this.isProfilePublic = userData.profileStatus;\n          this.followersCount = userData.followers;\n          this.followingCount = userData.following;\n          this.userPhoto = userData.profilePhoto;\n\n          if (this.isProfilePublic !== 'Public' && this.loggedUserName && this.loggedUserName !== username) {\n            this.profileService.alreadyFollows(this.loggedUserName, username)\n              .subscribe(isFollowing => {\n                this.canViewData = isFollowing;\n                resolve();\n              }, error => {\n                console.error('Erro ao verificar o status de seguimento', error);\n                this.canViewData = false;\n                reject(error);\n              });\n          } else {\n\n            this.canViewData = true;\n            resolve();\n          }\n        },\n        error: (error) => {\n          console.error(\"Error while fetching user data:\", error);\n          reject(error);\n        }\n      });\n    });\n  }\n\n   /**\n   * Carrega o papel (role) do utilizador logado para determinar se é um moderador.\n   * Atualiza a propriedade `isModerator` baseada nas roles retornadas.\n   */\n  private loadUserRole() {\n    const currentUsername = this.authService.getLoggedInUserName();\n    if (currentUsername) {\n      this.authService.getUserRole(currentUsername).subscribe(roles => {\n        this.isModerator = roles.includes('Moderator');\n      }, error => {\n        console.error('Error fetching roles:', error);\n      });\n    }\n  }\n\n  /**\n  * Inicializa o formulário com os campos padrão.\n  */\n  initializeForm() {\n    this.profileForm = this.formBuilder.group({\n      hobby: [''],\n      gender: ['', { disabled: true }],\n      date: [''],\n    });\n  }\n\n   /**\n   * Define as imagens de perfil e de capa para o utilizador especificado.\n   * \n   * @param username Nome do utilizador para o qual as imagens serão definidas.\n   */\n  setImages(username: string) {\n    this.profileService.getUserData(username).pipe(takeUntil(this.unsubscribed$)).subscribe(\n      (userData: Profile) => {\n        const coverPhotoElement = document.querySelector(\".cover-photo\");\n        const profilePhotoElement = document.querySelector(\".profile-photo\");\n\n        if (coverPhotoElement instanceof HTMLImageElement && profilePhotoElement instanceof HTMLImageElement) {\n          coverPhotoElement.src = userData.coverPhoto;\n          profilePhotoElement.src = userData.profilePhoto;\n        }\n      },\n      error => {\n        if (error.error.errors) {\n          this.errorMessages = error.error.errors;\n        } else {\n          this.errorMessages.push(error.error);\n        }\n      }\n    );\n  }\n\n   /**\n   * Preenche os campos do formulário com os dados do perfil do utilizador.\n   * \n   * @param username Nome do utilizador cujos dados do perfil serão utilizados para preencher o formulário.\n   */\n  setFormFields(username: string) {\n    const userName = document.querySelector(\"h1\");\n    this.profileForm.get('gender')?.disable();\n    this.profileService.getUserData(username)\n      .pipe(takeUntil(this.unsubscribed$))\n      .subscribe({\n        next: (userData: Profile) => {\n          if (userName) { userName.textContent = username; }\n          this.profileForm.patchValue({\n            hobby: userData.description || \"Por definir\",\n            gender: userData.gender || \"Por definir\",\n            date: userData.birthDate ? new Date(userData.birthDate).toISOString().split('T')[0] : '',\n          });\n          this.profileForm.get('gender')?.disable();\n          this.followersCount = userData.followers;\n          this.followingCount = userData.following;\n        },\n        error: (error) => {\n          console.error(\"Error while fetching user data:\", error);\n          if (error.error && error.error.errors) {\n            this.errorMessages = error.error.errors;\n          } else {\n            this.errorMessages.push(error.message || 'An error occurred while fetching user data.');\n          }\n        }\n      });\n  }\n\n   /**\n   * Verifica se o utilizador autenticado segue o utilizador especificado.\n   * Atualiza a propriedade `isFollowing` baseada no resultado.\n   * \n   * @param usernameAuthenticated Nome do utilizador autenticado.\n   * @param usernameToCheck Nome do utilizador a verificar se está a ser seguido.\n   */\n  checkFollowingStatus(usernameAuthenticated: string, usernameToCheck: string): void {\n    this.profileService.alreadyFollows(usernameAuthenticated, usernameToCheck).subscribe(isFollowing => {\n      this.isFollowing = isFollowing;\n    }, error => {\n      console.error('Erro ao verificar o status de seguimento', error);\n    });\n  }\n\n   /**\n   * Define a propriedade `followRequestSent` como verdadeira, indicando que um pedido\n   * de seguimento foi enviado.\n   */\n  requestToFollow(): void {\n    this.followRequestSent = true;\n  }\n\n   /**\n   * Envia um pedido para seguir o utilizador atual. Atualiza as propriedades `isFollowing`\n   * e `followRequestSent` baseadas na resposta.\n   */\n  followUser(): void {\n    if (this.currentUsername && this.loggedUserName) {\n      this.profileService.followUser(this.loggedUserName, this.currentUsername).subscribe({\n        next: () => {\n          if (this.isProfilePublic === 'Private') {\n            this.isFollowing = false;\n            this.followRequestSent = true;\n          } else {\n            this.isFollowing = true;\n            this.followRequestSent = false;\n          }\n        },\n        error: (error) => {\n          console.error('Erro ao seguir utilizador', error);\n        }\n      });\n    } else {\n      console.error('Nome de utilizador atual ou nome de utilizador logado está indefinido.');\n    }\n  }\n\n   /**\n   * Envia um pedido para deixar de seguir o utilizador atual. Atualiza a propriedade `isFollowing`.\n   */\n  unfollowUser(): void {\n    if (this.currentUsername && this.loggedUserName) {\n      this.profileService.unfollowUser(this.loggedUserName, this.currentUsername)\n        .subscribe({\n          next: () => {\n            this.isFollowing = false;\n          },\n          error: (error) => {\n            console.error('Erro ao deixar de seguir utilizador', error);\n          }\n        });\n    } else {\n      console.error('Os nomes de utilizador do perfil logado ou do perfil a ser seguido não estão definidos.');\n    }\n  }\n\n   /**\n   * Inicia uma conversa com o utilizador atual através do serviço de chat.\n   */\n  sendMessageToUser(): void {\n    if (this.currentUsername && this.loggedUserName) {\n      var profile = {\n        userName: this.currentUsername,\n        profilePhoto: this.userPhoto,\n        lastMessage: undefined,\n      } as ProfileChat;\n      this.chatService.selectUser(profile);\n    } else {\n      console.error('Os nomes de utilizador do perfil logado ou do perfil a ser seguido não estão definidos.');\n    }\n  }\n\n   /**\n   * Gera uma lista aleatória de seguidores ou de utilizadores que estão a seguir,\n   * limitada pelo tamanho especificado.\n   * \n   * @param array Array original de seguidores ou seguindo.\n   * @param size Tamanho máximo da lista resultante.\n   * @returns Array de `FollowerProfile` com tamanho máximo especificado e elementos aleatórios.\n   */\n  getRandomFollowslist(array: FollowerProfile[], size: number): FollowerProfile[] {\n    const arrayCopy = [...array];\n    for (let i = arrayCopy.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [arrayCopy[i], arrayCopy[j]] = [arrayCopy[j], arrayCopy[i]];\n    }\n    return arrayCopy.slice(0, size);\n  }\n\n  /**\n  * Obtém e atualiza a lista de seguidores do utilizador atual.\n  */\n  getFollowersList(): void {\n    if (this.currentUsername) {\n      this.profileService.getFollowers(this.currentUsername).subscribe(followers => {\n        this.followers = this.getRandomFollowslist(followers, followers.length);\n      }, error => {\n        console.error(\"Error while fetching followers:\", error);\n      });\n    }\n  }\n\n   /**\n   * Obtém e atualiza a lista de utilizadores que o utilizador atual está a seguir.\n   */\n  getFollowingList(): void {\n    if (this.currentUsername) {\n      this.profileService.getFollowing(this.currentUsername).subscribe(following => {\n        this.following = this.getRandomFollowslist(following, following.length);\n      }, error => {\n        console.error(\"Error while fetching following:\", error);\n      });\n    }\n  }\n\n   /**\n   * Gera uma lista aleatória de outros utilizadores, limitada pelo tamanho especificado.\n   * \n   * @param array Array original de perfis de utilizadores.\n   * @param size Tamanho máximo da lista resultante.\n   * @returns Array de `Profile` com tamanho máximo especificado e elementos aleatórios.\n   */\n  getRandomOtherUsers(array: Profile[], size: number): Profile[] {\n    const arrayCopy = [...array];\n    for (let i = arrayCopy.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [arrayCopy[i], arrayCopy[j]] = [arrayCopy[j], arrayCopy[i]];\n    }\n    return arrayCopy.slice(0, size);\n  }\n\n   /**\n   * Obtém e atualiza a lista de perfis de utilizadores sugeridos, limitada a 5.\n   */\n  getUserProfiles() {\n    this.profileService.getUserProfiles().pipe(takeUntil(this.unsubscribed$)).subscribe(\n      (profiles: Profile[]) => {\n        this.usersProfiles = this.getRandomOtherUsers(profiles, 5);\n      },\n      (error) => {\n        console.error(\"Error while fetching users' profiles:\", error);\n      }\n    );\n  }\n\n  /*----------------------------------------------------------------  FAVORITOS ---------------------------------------------------------------- */\n\n   /**\n   * Obtém e processa a lista de mídias favoritas do utilizador especificado, incluindo filmes e séries.\n   * Para cada mídia, busca detalhes adicionais como descrição e capa.\n   * \n   * @param username Nome do utilizador cujas mídias favoritas serão obtidas.\n   */\n  async getFavorites(username: string): Promise {\n    try {\n      const favorites = await firstValueFrom(this.profileService.getFavoriteMedia(username));\n\n      this.favoriteMovies = favorites.filter(m => m.type === 'movie');\n      this.favoriteSeries = favorites.filter(m => m.type === 'serie');\n\n      for (const movie of this.favoriteMovies) {\n        try {\n          const details = await firstValueFrom(this.service.getMovieDetails(movie.mediaId));\n          movie.details = details;\n        } catch (error) {\n          console.error('Erro ao buscar detalhes do filme favorito', error);\n        }\n      }\n\n      for (const series of this.favoriteSeries) {\n        try {\n          const details = await firstValueFrom(this.service.getSerieDetails(series.mediaId));\n          series.details = details;\n        } catch (error) {\n          console.error('Erro ao buscar detalhes da série favorita', error);\n        }\n      }\n    } catch (error) {\n      console.error('Erro ao buscar mídia favorita para utilizador', username, error);\n    }\n  }\n\n  /*----------------------------------------------------------------  MEDIA JÁ VISTA ---------------------------------------------------------------- */\n\n   /**\n   * Obtém e processa a lista de mídias assistidas pelo utilizador especificado, separando entre filmes e séries.\n   * Busca detalhes adicionais de cada mídia assistida.\n   * \n   * @param username Nome do utilizador cujas mídias assistidas serão obtidas.\n   */\n  async getWatchedMedia(username: string): Promise {\n    try {\n      const media = await firstValueFrom(this.profileService.getUserWatchedMedia(username));\n      this.watchedMovies = media.filter(m => m.type === 'movie').reverse();\n      this.watchedSeries = media.filter(m => m.type === 'serie').reverse();\n\n      await this.fetchWatchedMediaDetails();\n    } catch (error) {\n      console.error('Erro ao buscar mídia assistida para utilizador', username, error);\n    }\n  }\n\n   /**\n   * Busca detalhes adicionais para as mídias assistidas previamente obtidas.\n   */\n  async fetchWatchedMediaDetails(): Promise {\n    for (const movie of this.watchedMovies) {\n      try {\n        const details = await firstValueFrom(this.service.getMovieDetails(movie.mediaId));\n        movie.details = details;\n      } catch (error) {\n        console.error('Erro ao buscar detalhes do filme', error);\n      }\n    }\n\n    for (const series of this.watchedSeries) {\n      try {\n        const details = await firstValueFrom(this.service.getSerieDetails(series.mediaId));\n        series.details = details;\n      } catch (error) {\n        console.error('Erro ao buscar detalhes da série', error);\n      }\n    }\n  }\n\n  /*----------------------------------------------------------------  MEDIA A VER ---------------------------------------------------------------- */\n\n   /**\n   * Obtém e processa a lista de mídias marcadas para ver mais tarde pelo utilizador, incluindo filmes e séries.\n   * Busca detalhes adicionais para cada mídia marcada.\n   * \n   * @param username Nome do utilizador cujas mídias para ver mais tarde serão obtidas.\n   */\n  async getWatchLaterMedia(username: string): Promise {\n    try {\n      const media = await firstValueFrom(this.profileService.getUserWatchLaterMedia(username));\n      this.watchLaterMovies = media.filter(m => m.type === 'movie').reverse();\n      this.watchLaterSeries = media.filter(m => m.type === 'serie').reverse();\n\n      await this.fetchWatchLaterMediaDetails();\n    } catch (error) {\n      console.error('Erro ao buscar mídia para ver mais tarde para o utilizador', username, error);\n    }\n  }\n\n   /**\n   * Busca detalhes adicionais para as mídias marcadas para ver mais tarde previamente obtidas.\n   */\n  async fetchWatchLaterMediaDetails(): Promise {\n    for (const movie of this.watchLaterMovies) {\n      try {\n        const details = await firstValueFrom(this.service.getMovieDetails(movie.mediaId));\n        movie.details = details;\n      } catch (error) {\n        console.error('Erro ao buscar detalhes do filme para ver mais tarde', error);\n      }\n    }\n\n    for (const series of this.watchLaterSeries) {\n      try {\n        const details = await firstValueFrom(this.service.getSerieDetails(series.mediaId));\n        series.details = details;\n      } catch (error) {\n        console.error('Erro ao buscar detalhes da série para ver mais tarde', error);\n      }\n    }\n  }\n\n  /*----------------------------------------------------------------  Favoritos ----------------------------------------------------------------------- */\n\n  toggleFavoritesList(): void {\n    this.showFavorites = !this.showFavorites;\n  }\n\n  toggleMedalsList(): void {\n    this.showMedals = !this.showMedals;\n  }\n\n  toggleFavoritesListDisplay(): void {\n    this.showAllFavorites = !this.showAllFavorites;\n  }\n\n  toggleFavoritesScroll(): void {\n    this.expandedFavoritesList = !this.expandedFavoritesList;\n    this.toggleFollowers();\n    this.toggleFollowing();\n    this.toggleSeriesWatchedList();\n    this.toggleSeriesToWatchList();\n    this.toggleMoviesToWatchList();\n    this.toggleMoviesWatchedList();\n    this.toggleMedalsList();\n  }\n\n  /*----------------------------------------------------------------  Filmes já vistos ---------------------------------------------------------------- */\n\n  toggleMoviesWatchedList(): void {\n    this.showMoviesWatched = !this.showMoviesWatched;\n  }\n\n  toggleMoviesWatchedListDisplay(): void {\n    this.showAllMoviesWatched = !this.showAllMoviesWatched;\n  }\n\n  toggleWatchedMoviesScroll(): void {\n    this.expandedMoviesWatchList = !this.expandedMoviesWatchList;\n    this.toggleFollowers();\n    this.toggleFollowing();\n    this.toggleSeriesWatchedList();\n    this.toggleSeriesToWatchList();\n    this.toggleMoviesToWatchList();\n    this.toggleFavoritesList();\n    this.toggleMedalsList();\n  }\n\n  /*----------------------------------------------------------------  Filmes a ver -------------------------------------------------------------------- */\n\n  toggleMoviesToWatchList(): void {\n    this.showMoviesToWatch = !this.showMoviesToWatch;\n  }\n\n  toggleMoviesToWatchListDisplay(): void {\n    this.showAllMoviesToWatch = !this.showAllMoviesToWatch;\n  }\n\n  toggleToWatchMoviesScroll(): void {\n    this.expandedMoviesToWatchList = !this.expandedMoviesToWatchList;\n    this.toggleFollowers();\n    this.toggleFollowing();\n    this.toggleSeriesWatchedList();\n    this.toggleMoviesWatchedList();\n    this.toggleSeriesToWatchList();\n    this.toggleFavoritesList();\n    this.toggleMedalsList();\n  }\n\n  /*----------------------------------------------------------------  Séries já vistas ---------------------------------------------------------------- */\n\n  toggleSeriesWatchedList(): void {\n    this.showSeriesWatched = !this.showSeriesWatched;\n  }\n\n  toggleSeriesWatchedListDisplay(): void {\n    this.showAllSeriesWatched = !this.showAllSeriesWatched;\n  }\n\n  toggleWatchedSeriesScroll(): void {\n    this.expandedSeriesWatchList = !this.expandedSeriesWatchList;\n    this.toggleFollowers();\n    this.toggleFollowing();\n    this.toggleMoviesWatchedList();\n    this.toggleSeriesToWatchList();\n    this.toggleMoviesToWatchList();\n    this.toggleFavoritesList();\n    this.toggleMedalsList();\n  }\n\n  /*----------------------------------------------------------------  Séries a ver -------------------------------------------------------------------- */\n\n  toggleSeriesToWatchList(): void {\n    this.showSeriesToWatch = !this.showSeriesToWatch;\n  }\n\n  toggleSeriesToWatchListDisplay(): void {\n    this.showAllSeriesToWatch = !this.showAllSeriesToWatch;\n  }\n\n  toggleToWatchSeriesScroll(): void {\n    this.expandedSeriesToWatchList = !this.expandedSeriesToWatchList;\n    this.toggleFollowers();\n    this.toggleFollowing();\n    this.toggleMoviesWatchedList();\n    this.toggleSeriesWatchedList();\n    this.toggleMoviesToWatchList();\n    this.toggleFavoritesList();\n    this.toggleMedalsList();\n  }\n\n  /* Seguidores */\n\n  toggleFollowers() {\n    this.showFollowers = !this.showFollowers;\n  }\n\n  toggleFollowersDisplay(): void {\n    this.showAllFollowers = !this.showAllFollowers;\n  }\n\n  toggleFollowersScroll(): void {\n    this.expandedFollowers = !this.expandedFollowers;\n    this.toggleFollowersDisplay();\n    this.toggleFollowing();\n    this.toggleMoviesWatchedList();\n    this.toggleSeriesWatchedList();\n    this.toggleSeriesToWatchList();\n    this.toggleMoviesToWatchList();\n    this.toggleFavoritesList();\n    this.toggleMedalsList();\n  }\n\n  /* A seguir */\n\n  toggleFollowing() {\n    this.showFollowing = !this.showFollowing;\n  }\n\n  toggleFollowingDisplay(): void {\n    this.showAllFollowing = !this.showAllFollowing;\n  }\n\n  toggleFollowingScroll(): void {\n    this.expandedFollowing = !this.expandedFollowing;\n    this.toggleFollowingDisplay();\n    this.toggleFollowers();\n    this.toggleMoviesWatchedList();\n    this.toggleSeriesWatchedList();\n    this.toggleSeriesToWatchList();\n    this.toggleMoviesToWatchList();\n    this.toggleFavoritesList();\n    this.toggleMedalsList();\n  }\n\n  toggleAllFiveOtherUsers(): void {\n    this.showFiveOtherUsers = !this.showFiveOtherUsers;\n  }\n\n  toggleExpandedSuggestions() {\n    this.showExpandedSuggestions = !this.showExpandedSuggestions;\n  }\n\n\n  //--------------------------------------------------MEDALHAS-------------------------------------------------------------------\n\n  /**\n   * Recupera as medalhas desbloqueadas pelo utilizador.\n   * Este método consulta o serviço de gamificação para obter as medalhas que o utilizador já conseguiu desbloquear.\n   */\n  getMedals(username: string) {\n    if (this.currentUsername) {\n      this.gamificationService.getUnlockedMedals(this.currentUsername).subscribe({\n        next: (medals) => {\n          this.medals = medals;\n        },\n        error: (err) => {\n          console.error('Error retrieving medals:', err);\n        }\n      });\n    } else {\n      console.error('User ID is not defined');\n    }\n  }\n\n  //--------------------------------------------------MODERADOR------------------------------------------------------------------\n\n  /**\n   * Verifica se um utilizador está atualmente banido com base nas datas de início e fim do banimento.\n   * \n   * @param profile O perfil do utilizador a verificar.\n   * @returns Verdadeiro se o utilizador estiver banido, falso caso contrário.\n   */\n  checkIfUserIsBanned(profile: Profile): boolean {\n    try {\n      if (!profile.startBanDate || !profile.endBanDate) {\n        return false;\n      }\n\n      const now = new Date();\n      const startBan = new Date(profile.startBanDate);\n      const endBan = new Date(profile.endBanDate);\n      const isBanned = startBan  {\n        console.log(`User banned temporarily for ${this.banDuration} days`);\n        const user = this.filteredUsersProfiles?.find(u => u.userName === username);\n        this.hideBanPopup();\n        if (user) {\n          user.isBanned = true;\n          this.filteredUsersProfiles = [...this.filteredUsersProfiles!];\n        }\n      },\n      error: error => {\n        console.error(\"Error banning user temporarily:\", error);\n      }\n    });\n  }\n\n  /**\n   * Executa o banimento permanente de um utilizador.\n   * \n   * @param username O nome do utilizador a ser banido permanentemente.\n   */\n  banPerm(username: string | null): void {\n    if (!username) {\n      console.error('Username is undefined, cannot ban user.');\n      return;\n    }\n    console.log(`Attempting to ban user permanently: ${username}`);\n    this.adminService.banUserPermanently(username).subscribe({\n      next: () => {\n        console.log('User banned permanently');\n        const user = this.filteredUsersProfiles?.find(u => u.userName === username);\n        this.hideBanPopup();\n        if (user) {\n          user.isBanned = true;\n        }\n        this.filteredUsersProfiles = [...this.filteredUsersProfiles!];\n      },\n      error: error => {\n        console.error(\"Error banning user:\", error);\n      }\n    });\n  }\n\n  /**\n   * Desbane um utilizador, permitindo-lhe aceder novamente ao sistema.\n   * \n   * @param username O nome do utilizador a ser desbanido.\n   */\n  unban(username: string | undefined): void {\n    if (!username) {\n      console.error('Username is undefined, cannot unban user.');\n      return;\n    }\n    this.adminService.unbanUser(username).subscribe({\n      next: (response) => {\n        console.log(response.message);\n        const user = this.filteredUsersProfiles?.find(u => u.userName === username);\n        if (user) {\n          user.isBanned = false;\n        }\n        this.filteredUsersProfiles = [...this.filteredUsersProfiles!];\n      },\n      error: (error) => {\n        console.error(\"Error unbanning user:\", error);\n      }\n    });\n  }\n\n  /**\n   * Exibe o popup de banimento para um utilizador selecionado.\n   * \n   * @param username O nome do utilizador selecionado para banimento.\n   */\n  showBanPopup(username: string): void {\n    this.selectedUserForBan = username;\n    this.isBanPopupVisible = true;\n  }\n\n  /**\n   * Esconde o popup de banimento e limpa a seleção de utilizador.\n   */\n  hideBanPopup(): void {\n    this.isBanPopupVisible = false;\n    this.selectedUserForBan = null;\n  }\n\n  /**\n   * Obtém e filtra os perfis dos utilizadores, excluindo o do utilizador autenticado e enriquecendo-os com informação de moderador.\n   */\n  getUserProfilesMod() {\n    this.profileService.getUserProfiles().pipe(\n      takeUntil(this.unsubscribed$),\n      map(profiles => profiles.filter(profile => profile.userName !== this.loggedUserName)),\n      mergeMap(profiles => {\n        const filteredProfiles = profiles.filter(profile => profile.userName !== this.loggedUserName);\n        const profilesWithRoles$ = filteredProfiles.map(profile => {\n          return this.adminService.getUserRole(profile.userName).pipe(\n            map(roles => ({\n              ...profile,\n              isBanned: this.checkIfUserIsBanned(profile),\n              isModerator: roles.includes('Moderator'),\n            })),\n            catchError(error => {\n              console.error('Error fetching roles:', profile.userName, error);\n              return of({ ...profile, isModerator: false });\n            })\n          );\n        });\n        return forkJoin(profilesWithRoles$);\n      })\n    ).subscribe(\n      (profiles) => {\n        this.filteredUsersProfiles = profiles;\n        this.collectionSize = profiles.length;\n        this.sortAlphabetically();\n        this.filterUsers();\n\n      },\n      (error) => {\n        console.error(\"Error while fetching users' profiles:\", error);\n      }\n    );\n  }\n\n  /**\n * Atualiza o perfil do utilizador selecionado baseando-se no `selectedUsername`.\n * Busca e atribui o perfil correspondente a `selectedUser`.\n */\n  updateSelectedUser(): void {\n    this.selectedUser = this.usersProfilesMod.find(u => u.userName === this.selectedUsername);\n  }\n\n  /**\n   * Filtra os perfis dos utilizadores conforme o termo de pesquisa `searchTerm`.\n   * Atualiza `showNoResults`, `collectionSize` e `filteredUsersProfiles` para refletir os resultados,\n   * aplicando paginação baseada em `page` e `pageSize`.\n   */\n  filterUsers(): void {\n    let filtered = this.searchTerm ? this.usersProfilesMod.filter(user =>\n      user.userName?.toLowerCase().includes(this.searchTerm.toLowerCase())) : this.usersProfilesMod;\n\n    this.showNoResults = filtered.length === 0;\n    this.collectionSize = filtered.length;\n\n    filtered = filtered.slice((this.page - 1) * this.pageSize, this.page * this.pageSize);\n    this.filteredUsersProfiles = filtered;\n  }\n\n  /**\n   * Navega para a página anterior na lista paginada de utilizadores.\n   * Este método decrementa o contador de página atual e filtra novamente os utilizadores\n   * para refletir a mudança na paginação.\n   */\n  previousPage() {\n    if (this.page > 1) {\n      this.page--;\n      this.filterUsers();\n    }\n  }\n\n  /**\n   * Navega para a próxima página na lista paginada de utilizadores.\n   * Este método incrementa o contador de página atual e filtra novamente os utilizadores\n   * para refletir a mudança na paginação, incluindo a ordenação alfabética dos utilizadores\n   * se necessário.\n   */\n  nextPage() {\n    if (this.page * this.pageSize  1;\n  }\n\n  /**\n  * Verifica se existe uma próxima página disponível para navegação.\n  * \n  * @returns Verdadeiro se o produto da página atual pelo tamanho da página for menor que o tamanho total da coleção,\n  * indicando a existência de uma próxima página.\n  */\n  get hasNextPage(): boolean {\n    return this.page * this.pageSize  this.naturalSort(a, b));\n    this.filterUsers();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MovieCategory-2.html":{"url":"interfaces/MovieCategory-2.html","title":"interface - MovieCategory-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MovieCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/media/movies/all-movies-page/all-movies-page.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activeIndex\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            results\n                                        \n                                \n                                \n                                        \n                                            showAll\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        results:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showAll\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showAll:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MovieApiServiceComponent } from '../../api/movie-api-service/movie-api-service.component';\nimport { AuthenticationService } from '../../../authentication/services/authentication.service';\nimport { ProfileService } from '../../../profile/services/profile.service';\nimport { flatMap, forkJoin, map, switchMap } from 'rxjs';\n\n\n\ninterface MovieCategory {\n  name: string;\n  results: any[];\n  activeIndex: number;\n  showAll: boolean; \n\n}\n@Component({\n  selector: 'app-all-movies-page',\n  templateUrl: './all-movies-page.component.html',\n  styleUrl: './all-movies-page.component.css'\n})\n\n/**\n * Componente responsável por exibir todas as categorias de filmes.\n */\nexport class AllMoviesPageComponent {\n  categories: MovieCategory[] = [];\n  currentUser: any;\n\n\n   /**\n   * Construtor da classe.\n   * @param route Serviço de roteamento.\n   * @param service Serviço de API de filmes.\n   * @param authService Serviço de autenticação.\n   * @param profileService Serviço de perfil de utilizador.\n   */\n  constructor(private route: Router,\n    private service: MovieApiServiceComponent,\n    private authService: AuthenticationService,\n    private profileService: ProfileService,\n\n) { }\n\n  /** Método executado quando o componente é inicializado. */\n  ngOnInit(): void {\n    this.currentUser = this.authService.getLoggedInUserName();\n    this.initCategories();\n    this.fetchRecommendedMovies();\n  }\n  /** Inicializa as categorias de filmes. */\n\n  initCategories() {\n    this.categories = [\n      { name: 'Filmes em Destaque', results: [], activeIndex: 0, showAll: false },\n      { name: 'Filmes de Ação', results: [], activeIndex: 0, showAll: false },\n      { name: 'Filmes de Aventura', results: [], activeIndex: 0, showAll: false },\n      { name: 'Filmes de Comédia', results: [], activeIndex: 0, showAll: false },\n      { name: 'Filmes de Animação', results: [], activeIndex: 0, showAll: false },\n      { name: 'Filmes Documentário', results: [], activeIndex: 0, showAll: false },\n      { name: 'Filmes de Ficção Científica', results: [], activeIndex: 0, showAll: false },\n      { name: 'Filmes de Thriller', results: [], activeIndex: 0, showAll: false },\n    ];\n\n    this.fetchMovies();\n  }\n\n  /** Método executado quando o componente é inicializado. */\n  fetchMovies() {\n    const fetchMethods = [\n     \n      this.service.trendingMovieApiData(),\n      this.service.fetchActionMovies(),\n      this.service.fetchAdventureMovies(),\n      this.service.fetchComedyMovies(),\n      this.service.fetchAnimationMovies(),\n      this.service.fetchDocumentaryMovies(),\n      this.service.fetchScienceFictionMovies(),\n      this.service.fetchThrillerMovies(),\n    ];\n\n    fetchMethods.forEach((fetchMethod, index) => {\n      fetchMethod.subscribe((result) => {\n        this.categories[index].results = result.results;\n      });\n    });\n  }\n\n  /** Busca os filmes recomendados com base no histórico do utilizador. */\n\n  fetchRecommendedMovies(): void {\n    this.profileService.getUserWatchedMedia(this.currentUser).pipe(\n      switchMap((watchedMedia: any[]) => {\n        const movieIds = watchedMedia\n          .filter(media => media.type === 'movie')\n          .map(media => media.mediaId);\n        return forkJoin(movieIds.map(id => this.service.getSimilarMovie(id)));\n      }),\n      map(movieArrays => movieArrays.flatMap(movies => movies.results)),\n      map(recommendedMovies => {\n        const uniqueMovieIds = new Set();\n        const uniqueMovies = [];\n        console.log(recommendedMovies);\n        for (const movie of recommendedMovies) {\n          if (movie.poster_path && !uniqueMovieIds.has(movie.id)) {\n            uniqueMovieIds.add(movie.id);\n            uniqueMovies.unshift(movie); \n          }\n        }\n\n        return uniqueMovies.slice(0, 100);\n      })\n    ).subscribe((uniqueRecommendedMovies: any[]) => {\n      const recommendedCategoryIndex = this.categories.findIndex(category => category.name === 'Filmes Sugeridos');\n      if (recommendedCategoryIndex !== -1) {\n\n        this.categories[recommendedCategoryIndex].results = [\n          ...uniqueRecommendedMovies,\n          ...this.categories[recommendedCategoryIndex].results,\n        ];\n      } else {\n\n        this.categories.unshift({\n          name: 'Filmes Sugeridos',\n          results: uniqueRecommendedMovies,\n          activeIndex: 0,\n          showAll: false\n        });\n      }\n    });\n  }\n\n\n  /**\n   * Obtém os resultados da categoria especificada.\n   * @param categoryName O nome da categoria.\n   * @returns Uma matriz contendo os resultados da categoria.\n   */\n  getCategoryResults(categoryName: string): any[] {\n    const category = this.categories.find(cat => cat.name === categoryName);\n    return category ? category.results : [];\n  }\n\n    /**\n   * Obtém o índice ativo da categoria especificada.\n   * @param categoryName O nome da categoria.\n   * @returns O índice ativo da categoria.\n   */\n\n  getCategoryActiveIndex(categoryName: string): number {\n    const category = this.categories.find(cat => cat.name === categoryName);\n    return category ? category.activeIndex : 0;\n  }\n\n\n   /**\n   * Navega para o próximo lote de resultados da categoria especificada.\n   * @param categoryName O nome da categoria.\n   */\n  nextCategory(categoryName: string) {\n    const category = this.categories.find(cat => cat.name === categoryName);\n    if (category) {\n      const batchSize = 4; // Defina o tamanho do lote aqui\n      const newIndex = category.activeIndex + batchSize;\n      category.activeIndex = newIndex >= category.results.length ? 0 : newIndex;\n    }\n  }\n\n    /**\n   * Navega para o lote de resultados anterior da categoria especificada.\n   * @param categoryName O nome da categoria.\n   */\n\n  prevCategory(categoryName: string) {\n    const category = this.categories.find(cat => cat.name === categoryName);\n    if (category) {\n      const batchSize = 4; // Defina o tamanho do lote aqui\n      const newIndex = category.activeIndex - batchSize;\n      category.activeIndex = newIndex  cat.name === categoryName);\n    if (category) {\n      category.showAll = !category.showAll;\n    }\n  }\n\n  \n  /**\n   * Converte uma matriz de filmes em uma matriz de linhas, cada uma contendo até 4 filmes.\n   * @param movies A matriz de filmes.\n   * @returns Uma matriz de linhas de filmes.\n   */\n  getRows(movies: any[]) {\n    const rows = [];\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MovieCategory-3.html":{"url":"interfaces/MovieCategory-3.html","title":"interface - MovieCategory-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MovieCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/media/series/all-series-page/all-series-page.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activeIndex\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            results\n                                        \n                                \n                                \n                                        \n                                            showAll\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        results:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showAll\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showAll:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MovieApiServiceComponent } from '../../api/movie-api-service/movie-api-service.component';\nimport { AuthenticationService } from '../../../authentication/services/authentication.service';\nimport { ProfileService } from '../../../profile/services/profile.service';\nimport { forkJoin, map, switchMap } from 'rxjs';\nimport { NotificationService } from '../../../notifications/services/notification.service';\nimport { MediaNotificationModel } from '../../../notifications/models/media-notification-model';\n\n\ninterface MovieCategory {\n  name: string;\n  results: any[];\n  activeIndex: number;\n  showAll: boolean;\n\n}\n\n@Component({\n  selector: 'app-all-series-page',\n  templateUrl: './all-series-page.component.html',\n  styleUrl: './all-series-page.component.css'\n})\n\n/**\n * A classe `AllSeriesPageComponent` representa o componente da página que exibe todas as séries.\n */\nexport class AllSeriesPageComponent {\n  categories: MovieCategory[] = [];\n  currentUser: any;\n\n  /**\n   * Construtor da classe `AllSeriesPageComponent`.\n   * \n   * @param route O serviço de roteamento.\n   * @param service O serviço da API de filmes.\n   * @param authService O serviço de autenticação.\n   * @param notificationService O serviço de notificações.\n   * @param profileService O serviço de perfil do utilizador.\n   */\n  constructor(private route: Router,\n    private service: MovieApiServiceComponent,\n    private authService: AuthenticationService,\n    private notificationService: NotificationService,\n    private profileService: ProfileService) { }\n\n     /**\n   * Método executado ao inicializar o componente.\n   */\n  ngOnInit(): void {\n    this.currentUser = this.authService.getLoggedInUserName();\n    this.initCategories();\n    this.fetchRecommendedSeries();\n    this.fetchAiringAndWatchedSeriesAndNotify();\n  }\n\n/**\n   * Recupera as séries recomendadas para o utilizador e as adiciona à categoria \"Séries Sugeridas\".\n   */\n  fetchRecommendedSeries(): void {\n    this.profileService.getUserWatchedMedia(this.currentUser).pipe(\n      switchMap((watchedMedia: any[]) => {\n        const movieIds = watchedMedia\n          .filter(media => media.type === 'serie')\n          .map(media => media.mediaId);\n        return forkJoin(movieIds.map(id => this.service.getSimilarSerie(id)));\n      }),\n      map(movieArrays => movieArrays.flatMap(movies => movies.results)),\n      map(recommendedMovies => {\n        const uniqueMovieIds = new Set();\n        const uniqueMovies = [];\n        console.log(recommendedMovies);\n        for (const movie of recommendedMovies) {\n          if (movie.poster_path && !uniqueMovieIds.has(movie.id)) {\n            uniqueMovieIds.add(movie.id);\n            uniqueMovies.unshift(movie);\n          }\n        }\n\n        return uniqueMovies.slice(0, 100);\n      })\n    ).subscribe((uniqueRecommendedMovies: any[]) => {\n      const recommendedCategoryIndex = this.categories.findIndex(category => category.name === 'Series Sugeridas');\n      if (recommendedCategoryIndex !== -1) {\n\n        this.categories[recommendedCategoryIndex].results = [\n          ...uniqueRecommendedMovies,\n          ...this.categories[recommendedCategoryIndex].results,\n        ];\n      } else {\n\n        this.categories.unshift({\n          name: 'Series Sugeridas',\n          results: uniqueRecommendedMovies,\n          activeIndex: 0,\n          showAll: false\n        });\n      }\n    });\n  }\n   /**\n   * Inicializa as categorias de séries com os nomes e resultados iniciais.\n   */\n  initCategories() {\n    this.categories = [\n      { name: 'Séries em Destaque', results: [], activeIndex: 0, showAll: false },\n      { name: 'Séries em Produção', results: [], activeIndex: 0, showAll: false },\n      { name: 'Séries de Ação e Aventura', results: [], activeIndex: 0, showAll: false },\n      { name: 'Séries de Drama', results: [], activeIndex: 0, showAll: false },\n      { name: 'Séries de Mistério', results: [], activeIndex: 0, showAll: false },\n      { name: 'Séries de Animação', results: [], activeIndex: 0, showAll: false },\n\n    ];\n\n    this.fetchMovies();\n  } \n\n /**\n   * Recupera as séries para cada categoria e as atualiza na respectiva categoria.\n   */\n  fetchMovies() {\n    const fetchMethods = [\n      this.service.fetchTopRatedSeries(),\n      this.service.getAiringSeries(),\n      this.service.fetchActionAndAdvetureSeries(),\n      this.service.fetchDramaSeries(),\n      this.service.fetchMysterySeries(),\n      this.service.fetchAnimationSeries(),\n  ];\n\n    fetchMethods.forEach((fetchMethod, index) => {\n      fetchMethod.subscribe((result) => {\n        this.categories[index].results = result.results;\n      });\n    });\n  }\n\n/**\n * Retorna os resultados da categoria especificada.\n * \n * @param categoryName O nome da categoria.\n * @returns Um array contendo os resultados da categoria.\n */\n  getCategoryResults(categoryName: string): any[] {\n    const category = this.categories.find(cat => cat.name === categoryName);\n    return category ? category.results : [];\n  }\n/**\n * Retorna o índice ativo da categoria especificada.\n * \n * @param categoryName O nome da categoria.\n * @returns O índice ativo da categoria.\n */\n  getCategoryActiveIndex(categoryName: string): number {\n    const category = this.categories.find(cat => cat.name === categoryName);\n    return category ? category.activeIndex : 0;\n  }\n\n/**\n * Avança para o próximo lote de resultados da categoria especificada.\n * \n * @param categoryName O nome da categoria.\n */\n  nextCategory(categoryName: string) {\n    const category = this.categories.find(cat => cat.name === categoryName);\n    if (category) {\n      const batchSize = 4; // Defina o tamanho do lote aqui\n      const newIndex = category.activeIndex + batchSize;\n      category.activeIndex = newIndex >= category.results.length ? 0 : newIndex;\n    }\n  }\n\n/**\n * Retrocede para o lote anterior de resultados da categoria especificada.\n * \n * @param categoryName O nome da categoria.\n */\n  prevCategory(categoryName: string) {\n    const category = this.categories.find(cat => cat.name === categoryName);\n    if (category) {\n      const batchSize = 4; // Defina o tamanho do lote aqui\n      const newIndex = category.activeIndex - batchSize;\n      category.activeIndex = newIndex  cat.name === categoryName);\n    if (category) {\n      category.showAll = !category.showAll;\n    }\n  }\n\n/**\n * Divide os filmes em linhas de 4 filmes cada.\n * \n * @param movies Um array de filmes.\n * @returns Um array de linhas de filmes, cada uma contendo até 4 filmes.\n */\n  getRows(movies: any[]) {\n    const rows = [];\n    for (let i = 0; i  {\n        const watchedSeriesIds = new Set(results.watchedMedia.map(media => media.mediaId));\n        const airingSeriesToNotify = results.airingToday.results.filter(\n          (series: any) => watchedSeriesIds.has(series.id)\n        );\n\n        return forkJoin(\n          airingSeriesToNotify.map((series: any) => \n            this.notificationService.notifyNewEpisode(\n              new MediaNotificationModel(\n                this.currentUser,\n                `Novo episódio disponível para ${series.name}!`,\n                new Date(),\n                false,\n                'NewMedia',\n                series.mediaId,\n                series.name,\n                series.poster_path,\n                series.id, \n              )\n            )\n          )\n        );\n      })\n    ).subscribe({\n      next: () => console.log('Notificações para novos episódios enviadas com sucesso.'),\n      error: (error) => console.error('Erro ao enviar notificações para novos episódios', error)\n    });\n  }\n\n\n\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavMenuComponent.html":{"url":"components/NavMenuComponent.html","title":"component - NavMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/nav-menu/nav-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        Este componente representa o menu de navegação da aplicação, oferecendo funcionalidades\ncomo a gestão da autenticação do utilizador, navegação baseada em papel de utilizador,\npesquisa de media e visualização de notificações e solicitações de seguimento pendentes.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav-menu\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./nav-menu.component.html\n            \n\n\n\n            \n                styleUrl\n                ./nav-menu.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                hasUnreadNotifications\n                            \n                            \n                                isActive\n                            \n                            \n                                loggedUserName\n                            \n                            \n                                pendingFollowRequests\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                searchQuery\n                            \n                            \n                                showMenu\n                            \n                            \n                                unsubscribed$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkForUnreadNotifications\n                            \n                            \n                                    \n                                clickout\n                            \n                            \n                                closeNav\n                            \n                            \n                                getPendingFollowRequests\n                            \n                            \n                                logout\n                            \n                            \n                                navigateBasedOnRole\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onKeyup\n                            \n                            \n                                onSubmit\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(profileService: ProfileService, notificationService: NotificationService, authService: AuthenticationService, _eref: ElementRef, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/nav-menu/nav-menu.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _eref\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/nav-menu/nav-menu.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Gerencia a exibição do menu de navegação lateral baseando-se na interação do utilizador.\nFecha o menu lateral quando um clique é registrado fora do menu.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O evento de clique documentado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkForUnreadNotifications\n                        \n                    \n                \n            \n            \n                \ncheckForUnreadNotifications()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/nav-menu/nav-menu.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Verifica se existem notificações não lidas para o utilizador autenticado.\nAtualiza o indicador de notificações não lidas no menu de navegação.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        clickout\n                        \n                    \n                \n            \n            \n                \n                        \n                    clickout(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/nav-menu/nav-menu.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Gerencia a exibição do menu de navegação lateral baseando-se na interação do utilizador.\nFecha o menu lateral quando um clique é registrado fora do menu.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O evento de clique documentado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeNav\n                        \n                    \n                \n            \n            \n                \ncloseNav()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/nav-menu/nav-menu.component.ts:118\n                        \n                    \n\n\n            \n                \n                        Fecha o menu de navegação lateral.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPendingFollowRequests\n                        \n                    \n                \n            \n            \n                \ngetPendingFollowRequests()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/nav-menu/nav-menu.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Carrega as solicitações de seguimento pendentes do utilizador autenticado.\nAtualiza a lista de solicitações pendentes no menu de navegação.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/nav-menu/nav-menu.component.ts:169\n                        \n                    \n\n\n            \n                \n                        Realiza o logout do utilizador e redireciona para a página de login.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateBasedOnRole\n                        \n                    \n                \n            \n            \n                \nnavigateBasedOnRole(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/nav-menu/nav-menu.component.ts:148\n                        \n                    \n\n\n            \n                \n                        Navega para diferentes partes da aplicação com base no papel do utilizador autenticado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome de utilizador do utilizador autenticado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/nav-menu/nav-menu.component.ts:36\n                        \n                    \n\n\n            \n                \n                        Inicializa as propriedades e verifica o estado de autenticação do utilizador.\nCarrega as solicitações de seguimento pendentes e verifica a existência de notificações não lidas.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onKeyup\n                        \n                    \n                \n            \n            \n                \nonKeyup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/nav-menu/nav-menu.component.ts:139\n                        \n                    \n\n\n            \n                \n                        Lida com o evento de tecla levantada no campo de pesquisa.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/nav-menu/nav-menu.component.ts:129\n                        \n                    \n\n\n            \n                \n                        Submete uma consulta de pesquisa e navega para a página de resultados da pesquisa.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/nav-menu/nav-menu.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Alterna a visibilidade do menu de navegação lateral.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O evento de clique que desencadeou a alteração.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthenticationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/nav-menu/nav-menu.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasUnreadNotifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/nav-menu/nav-menu.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/nav-menu/nav-menu.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedUserName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/nav-menu/nav-menu.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pendingFollowRequests\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FollowerProfile[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/nav-menu/nav-menu.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/nav-menu/nav-menu.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/nav-menu/nav-menu.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showMenu\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/nav-menu/nav-menu.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribed$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/nav-menu/nav-menu.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, HostListener } from '@angular/core';\nimport { AuthenticationService } from '../authentication/services/authentication.service';\nimport { Router } from '@angular/router';\nimport { SearchServiceComponent } from '../media/search-service/search-service.component';\nimport { MovieApiServiceComponent } from '../media/api/movie-api-service/movie-api-service.component';\nimport { ProfileService } from '../profile/services/profile.service';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FollowerProfile } from '../profile/models/follower-profile';\nimport { NotificationService } from '../notifications/services/notification.service';\n\n/**\n * Este componente representa o menu de navegação da aplicação, oferecendo funcionalidades\n * como a gestão da autenticação do utilizador, navegação baseada em papel de utilizador, \n * pesquisa de media e visualização de notificações e solicitações de seguimento pendentes.\n */\n@Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrl: './nav-menu.component.css'\n})\nexport class NavMenuComponent {\n  loggedUserName: string | null = null;\n  isActive: boolean = false;\n  searchQuery: any;\n  unsubscribed$: Subject = new Subject();\n  pendingFollowRequests: FollowerProfile[] = [];\n  hasUnreadNotifications: boolean = false;\n  showMenu = false;\n\n  constructor(private profileService: ProfileService, private notificationService: NotificationService, public authService: AuthenticationService, private _eref: ElementRef, public router: Router) {}\n\n  /**\n   * Inicializa as propriedades e verifica o estado de autenticação do utilizador.\n   * Carrega as solicitações de seguimento pendentes e verifica a existência de notificações não lidas.\n   */\n  ngOnInit(): void {\n    this.loggedUserName = this.authService.getLoggedInUserName();\n    this.getPendingFollowRequests();\n    this.checkForUnreadNotifications();\n  }\n\n  /**\n   * Carrega as solicitações de seguimento pendentes do utilizador autenticado.\n   * Atualiza a lista de solicitações pendentes no menu de navegação.\n   */\n  getPendingFollowRequests() {\n    if (this.loggedUserName) {\n      this.profileService.getPendingFollowRequests(this.loggedUserName)\n        .pipe(takeUntil(this.unsubscribed$))\n        .subscribe({\n          next: (profiles: FollowerProfile[]) => {\n            this.pendingFollowRequests = profiles;\n          },\n          error: (error) => {\n            console.error('Error fetching pending follow requests:', error);\n          }\n        });\n    }\n  }\n\n  /**\n   * Verifica se existem notificações não lidas para o utilizador autenticado.\n   * Atualiza o indicador de notificações não lidas no menu de navegação.\n   */\n  checkForUnreadNotifications(): void {\n    if (this.loggedUserName) {\n      this.notificationService.hasUnreadNotifications(this.loggedUserName)\n        .subscribe({\n          next: (response) => {\n            console.log(response);\n           this.hasUnreadNotifications = response.hasUnread;\n          },\n          error: (err) => {\n          }\n        });\n    }\n  }\n\n  \n  /**\n   * Gerencia a exibição do menu de navegação lateral baseando-se na interação do utilizador.\n   * Fecha o menu lateral quando um clique é registrado fora do menu.\n   * \n   * @param event O evento de clique documentado.\n   */\n  @HostListener('document:click', ['$event'])\n  clickout(event: MouseEvent) {\n    if (!this._eref.nativeElement.contains(event.target)) {\n      this.showMenu = false;\n      let sidebar = document.getElementById(\"sidebar\");\n      if (sidebar) {\n        sidebar.style.width = \"0\";\n      }\n    }\n  }\n\n  /**\n   * Alterna a visibilidade do menu de navegação lateral.\n   * \n   * @param event O evento de clique que desencadeou a alteração.\n   */\n  toggleMenu(event: MouseEvent) {\n    event.stopPropagation();\n    this.showMenu = !this.showMenu;\n    let sidebar = document.getElementById(\"sidebar\");\n    if (sidebar) {\n      if (this.showMenu) {\n        sidebar.style.width = \"250px\";\n      } else {\n        sidebar.style.width = \"0\";\n      }\n    }\n  }\n\n  /**\n   * Fecha o menu de navegação lateral.\n   */\n  closeNav() {\n    this.showMenu = false;\n    let sidebar = document.getElementById(\"sidebar\");\n    if (sidebar) {\n      sidebar.style.width = \"0\";\n    }\n  }\n\n  /**\n   * Submete uma consulta de pesquisa e navega para a página de resultados da pesquisa.\n   */\n  onSubmit() {\n    if (this.searchQuery) {\n      // Isso garante que a pesquisa é comunicada através de parâmetros de consulta\n      this.router.navigate(['/search'], { queryParams: { title: this.searchQuery } });\n    }\n  }\n\n  /**\n   * Lida com o evento de tecla levantada no campo de pesquisa.\n   */\n  onKeyup() {\n    console.log('one key up',this.searchQuery);\n  }\n\n  /**\n   * Navega para diferentes partes da aplicação com base no papel do utilizador autenticado.\n   * \n   * @param username O nome de utilizador do utilizador autenticado.\n   */\n  navigateBasedOnRole(username: string) {\n    this.authService.getUserRole(username).subscribe((roles: string[]) => {\n      if (roles.includes('Admin')) {\n        this.router.navigate(['/admin']);\n        this.isActive = true;\n      } else if (roles.includes('User') || roles.includes('Moderator')) {\n        this.router.navigate(['/profile', username]);\n        this.isActive = true;\n      } else {\n        // Handle case for users without Admin or User roles or redirect to a default route\n        this.router.navigate(['/home']);\n      }\n    }, error => {\n      console.error('Error fetching user role', error);\n      this.router.navigate(['/home']); // Fallback in case of an error\n    });\n  }\n\n  /**\n   * Realiza o logout do utilizador e redireciona para a página de login.\n   */\n  logout() {\n    this.authService.logout();\n  }\n}\n\n\n\n    \n\n    \n        \n  \n\n  \n     0 || hasUnreadNotifications }\" class=\"fa fa-bars\">\n    Menu\n  \n\n  \n    \n    \n      \n    \n    \n  \n  Séries\n  Filmes\n  \n    \n      \n    \n    \n      \n    \n  \n\n  \n    \n      Mensagens\n    \n       0 || hasUnreadNotifications}\"> Notificações\n    \n      Perfil \n      Séries \n      Filmes \n      Definições \n      Terminar Sessão \n    \n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         0 || hasUnreadNotifications }\" class=\"fa fa-bars\">    Menu                              Séries  Filmes                                            Mensagens           0 || hasUnreadNotifications}\"> Notificações          Perfil       Séries       Filmes       Definições       Terminar Sessão       '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminStatisticsComponent', 'selector': 'app-admin-statistics'},{'name': 'AllMoviesPageComponent', 'selector': 'app-all-movies-page'},{'name': 'AllSeriesPageComponent', 'selector': 'app-all-series-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'authentication-button'},{'name': 'BlockedAccountComponent', 'selector': 'app-blocked-account'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GamificationComponent', 'selector': 'app-gamification'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MovieDetailsComponent', 'selector': 'app-movie-details'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'PendingVerificationComponent', 'selector': 'app-pending-verification'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterWithThirdPartyComponent', 'selector': 'app-register-with-third-party'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchServiceComponent', 'selector': 'app-search-service'},{'name': 'SeasonDetailsComponent', 'selector': 'app-season-details'},{'name': 'SeasonDetailsInfoComponent', 'selector': 'app-season-details-info'},{'name': 'SendEmailComponent', 'selector': 'app-send-email'},{'name': 'SeriesDetailsComponent', 'selector': 'app-series-details'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'SuspendedAccountComponent', 'selector': 'app-suspended-account'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotificationModel.html":{"url":"classes/NotificationModel.html","title":"class - NotificationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotificationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/notifications/models/notification-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Modelo base para representar notificações na aplicação.\nDefine a estrutura comum a todas as notificações, incluindo dados do utilizador que disparou a notificação,\na mensagem da notificação, data de criação, status de leitura e tipo de evento.\nPropriedades:\n\ntriggeredByUserId: Identificador do utilizador que disparou a notificação.\nmessage: Mensagem da notificação.\ncreatedAt: Data e hora da criação da notificação.\nisRead: Estado da notificação, indicando se já foi lida.\neventType: Tipo do evento que disparou a notificação.\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                eventType\n                            \n                            \n                                isRead\n                            \n                            \n                                message\n                            \n                            \n                                triggeredByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(triggeredByUserId: string, message: string, createdAt: Date, isRead: boolean, eventType: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/notifications/models/notification-model.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        triggeredByUserId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createdAt\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isRead\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/notifications/models/notification-model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/notifications/models/notification-model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/notifications/models/notification-model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/notifications/models/notification-model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggeredByUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/notifications/models/notification-model.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NotificationModel {\n  triggeredByUserId: string;\n  message: string;\n  createdAt: Date;\n  isRead: boolean;\n  eventType: string;\n\n  constructor(\n    triggeredByUserId: string,\n    message: string,\n    createdAt: Date,\n    isRead: boolean,\n    eventType: string\n  ) {\n    this.triggeredByUserId = triggeredByUserId;\n    this.message = message;\n    this.createdAt = createdAt;\n    this.isRead = isRead;\n    this.eventType = eventType;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/notifications/services/notification.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Serviço responsável por gerenciar todas as operações relacionadas às notificações dos utilizadores,\nincluindo a obtenção de diferentes tipos de notificações, marcar notificações como lidas e limpar notificações.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearNotifications\n                            \n                            \n                                getAchievementNotifications\n                            \n                            \n                                getFollowNotificationsForUser\n                            \n                            \n                                getHeaders\n                            \n                            \n                                getJWT\n                            \n                            \n                                getMediaNotifications\n                            \n                            \n                                getMessageNotificationsForUser\n                            \n                            \n                                getReplyNotifications\n                            \n                            \n                                hasUnreadNotifications\n                            \n                            \n                                markAllAchievementNotificationsAsRead\n                            \n                            \n                                markAllFollowNotificationsAsRead\n                            \n                            \n                                markAllMediaNotificationsAsRead\n                            \n                            \n                                markAllMessageNotificationsAsRead\n                            \n                            \n                                markAllReplyNotificationsAsRead\n                            \n                            \n                                notifyNewEpisode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/notifications/services/notification.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearNotifications\n                        \n                    \n                \n            \n            \n                \nclearNotifications(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notifications/services/notification.service.ts:135\n                        \n                    \n\n\n            \n                \n                        Limpa todas as notificações para um utilizador específico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome do utilizador cujas notificações serão limpas.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Um Observable do resultado da operação.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAchievementNotifications\n                        \n                    \n                \n            \n            \n                \ngetAchievementNotifications(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notifications/services/notification.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Obtém as notificações de novas conquistas para um utilizador autenticado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome do utilizador autenticado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Um Observable de um array de AchievementNotificationModel.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFollowNotificationsForUser\n                        \n                    \n                \n            \n            \n                \ngetFollowNotificationsForUser(authenticatedUsername: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notifications/services/notification.service.ts:55\n                        \n                    \n\n\n            \n                \n                        Obtém as notificações de novos seguidores para um utilizador autenticado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authenticatedUsername\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome do utilizador autenticado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Um Observable de um array de FollowNotificationModel.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeaders\n                        \n                    \n                \n            \n            \n                \ngetHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notifications/services/notification.service.ts:41\n                        \n                    \n\n\n            \n                \n                        Constrói o cabeçalho HTTP necessário para as requisições autenticadas.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                Um objeto HttpHeaders com o token de autenticação.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getJWT\n                        \n                    \n                \n            \n            \n                \ngetJWT()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notifications/services/notification.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Recupera o token JWT do localStorage para uso nas requisições autenticadas.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                O token JWT se disponível; caso contrário, retorna 'No JWT'.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMediaNotifications\n                        \n                    \n                \n            \n            \n                \ngetMediaNotifications(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notifications/services/notification.service.ts:175\n                        \n                    \n\n\n            \n                \n                        Obtém as notificações de nova mídia para um utilizador específico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome do utilizador cujas notificações de nova mídia são solicitadas.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Um Observable de um array de MediaNotificationModel, representando as notificações de nova mídia.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessageNotificationsForUser\n                        \n                    \n                \n            \n            \n                \ngetMessageNotificationsForUser(authenticatedUsername: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notifications/services/notification.service.ts:85\n                        \n                    \n\n\n            \n                \n                        Obtém as notificações de novas mensagens para um utilizador autenticado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authenticatedUsername\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome do utilizador autenticado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Um Observable de um array de MessageNotificationModel.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReplyNotifications\n                        \n                    \n                \n            \n            \n                \ngetReplyNotifications(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notifications/services/notification.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Obtém as notificações de respostas a comentários para um utilizador específico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome do utilizador.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Um Observable de um array de ReplyNotificationModel.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasUnreadNotifications\n                        \n                    \n                \n            \n            \n                \nhasUnreadNotifications(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notifications/services/notification.service.ts:145\n                        \n                    \n\n\n            \n                \n                        Verifica se um utilizador possui notificações não lidas.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome do utilizador.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Um Observable que emite verdadeiro se houver notificações não lidas; falso caso contrário.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markAllAchievementNotificationsAsRead\n                        \n                    \n                \n            \n            \n                \nmarkAllAchievementNotificationsAsRead(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notifications/services/notification.service.ts:115\n                        \n                    \n\n\n            \n                \n                        Marca todas as notificações de novas conquistas como lidas para um utilizador específico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome do utilizador.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Um Observable do resultado da operação.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markAllFollowNotificationsAsRead\n                        \n                    \n                \n            \n            \n                \nmarkAllFollowNotificationsAsRead(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notifications/services/notification.service.ts:95\n                        \n                    \n\n\n            \n                \n                        Marca todas as notificações de novo seguidor como lidas para um utilizador específico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome do utilizador.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Um Observable do resultado da operação.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markAllMediaNotificationsAsRead\n                        \n                    \n                \n            \n            \n                \nmarkAllMediaNotificationsAsRead(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notifications/services/notification.service.ts:185\n                        \n                    \n\n\n            \n                \n                        Marca todas as notificações de nova mídia como lidas para um utilizador específico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome do utilizador.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Um Observable do resultado da operação.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markAllMessageNotificationsAsRead\n                        \n                    \n                \n            \n            \n                \nmarkAllMessageNotificationsAsRead(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notifications/services/notification.service.ts:125\n                        \n                    \n\n\n            \n                \n                        Marca todas as notificações de novas mensagens como lidas para um utilizador específico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome do utilizador.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Um Observable do resultado da operação.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markAllReplyNotificationsAsRead\n                        \n                    \n                \n            \n            \n                \nmarkAllReplyNotificationsAsRead(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notifications/services/notification.service.ts:105\n                        \n                    \n\n\n            \n                \n                        Marca todas as notificações de novas respostas como lidas para um utilizador específico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O nome do utilizador.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Um Observable do resultado da operação.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifyNewEpisode\n                        \n                    \n                \n            \n            \n                \nnotifyNewEpisode(notification: MediaNotificationModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notifications/services/notification.service.ts:155\n                        \n                    \n\n\n            \n                \n                        Notifica os utilizadores sobre um novo episódio de uma série ou atualização de mídia.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                notification\n                                            \n                                                            MediaNotificationModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    A notificação a ser enviada, contendo detalhes como o ID do utilizador que disparou a notificação, mensagem, etc.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Um Observable do resultado da operação de notificação.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../environments/environment.development';\nimport { NotificationModel } from '../models/notification-model';\nimport { User } from '../../authentication/models/user';\nimport { FollowNotificationModel } from '../models/follow-notification-model';\nimport { ReplyNotificationModel } from '../models/reply-notification-model';\nimport { AchievementNotificationModel } from '../models/achievement-notification-model';\nimport { MessageNotificationModel } from '../models/message-notification-model';\nimport { MediaNotificationModel } from '../models/media-notification-model';\n\n/**\n * Serviço responsável por gerenciar todas as operações relacionadas às notificações dos utilizadores,\n * incluindo a obtenção de diferentes tipos de notificações, marcar notificações como lidas e limpar notificações.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Recupera o token JWT do localStorage para uso nas requisições autenticadas.\n   * @returns O token JWT se disponível; caso contrário, retorna 'No JWT'.\n   */\n  getJWT() {\n    const key = localStorage.getItem(environment.userKey);\n    if (key) {\n      const user = JSON.parse(key) as User;\n      return user.jwt;\n    } else {\n      return 'No JWT';\n    }\n  }\n\n  /**\n   * Constrói o cabeçalho HTTP necessário para as requisições autenticadas.\n   * @returns Um objeto HttpHeaders com o token de autenticação.\n   */\n  getHeaders() {\n    const jwt = this.getJWT();\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${jwt}`\n    });\n    return headers;\n  }\n\n  /**\n   * Obtém as notificações de novos seguidores para um utilizador autenticado.\n   * @param authenticatedUsername O nome do utilizador autenticado.\n   * @returns Um Observable de um array de FollowNotificationModel.\n   */\n  getFollowNotificationsForUser(authenticatedUsername: string): Observable {\n    const headers = this.getHeaders();\n    return this.http.get(`${environment.appUrl}/api/notifications/followNotifications/${authenticatedUsername}`, { headers });\n  }\n\n  /**\n   * Obtém as notificações de respostas a comentários para um utilizador específico.\n   * @param username O nome do utilizador.\n   * @returns Um Observable de um array de ReplyNotificationModel.\n   */\n  getReplyNotifications(username: string): Observable {\n    const headers = this.getHeaders();\n    return this.http.get(`${environment.appUrl}/api/notifications/replyNotifications/${username}`, { headers });\n  }\n\n  /**\n  * Obtém as notificações de novas conquistas para um utilizador autenticado.\n  * @param username O nome do utilizador autenticado.\n  * @returns Um Observable de um array de AchievementNotificationModel.\n  */\n  getAchievementNotifications(username: string): Observable {\n    const headers = this.getHeaders();\n    return this.http.get(`${environment.appUrl}/api/notifications/achievementNotifications/${username}`, { headers });\n  }\n\n  /**\n  * Obtém as notificações de novas mensagens para um utilizador autenticado.\n  * @param authenticatedUsername O nome do utilizador autenticado.\n  * @returns Um Observable de um array de MessageNotificationModel.\n  */\n  getMessageNotificationsForUser(authenticatedUsername: string): Observable {\n    const headers = this.getHeaders();\n    return this.http.get(`${environment.appUrl}/api/notifications/messageNotifications/${authenticatedUsername}`, { headers });\n  }\n\n  /**\n   * Marca todas as notificações de novo seguidor como lidas para um utilizador específico.\n   * @param username O nome do utilizador.\n   * @returns Um Observable do resultado da operação.\n   */\n  markAllFollowNotificationsAsRead(username: string): Observable {\n    const headers = this.getHeaders();\n    return this.http.post(`${environment.appUrl}/api/notifications/followNotifications/mark-all-as-read/${username}`, {}, { headers });\n  }\n\n  /**\n   * Marca todas as notificações de novas respostas como lidas para um utilizador específico.\n   * @param username O nome do utilizador.\n   * @returns Um Observable do resultado da operação.\n   */\n  markAllReplyNotificationsAsRead(username: string): Observable {\n    const headers = this.getHeaders();\n    return this.http.post(`${environment.appUrl}/api/notifications/replyNotifications/mark-all-as-read/${username}`, {}, { headers });\n  }\n\n  /**\n   * Marca todas as notificações de novas conquistas como lidas para um utilizador específico.\n   * @param username O nome do utilizador.\n   * @returns Um Observable do resultado da operação.\n   */\n  markAllAchievementNotificationsAsRead(username: string): Observable {\n    const headers = this.getHeaders();\n    return this.http.post(`${environment.appUrl}/api/notifications/achievementNotifications/mark-all-as-read/${username}`, {}, { headers });\n  }\n\n  /**\n   * Marca todas as notificações de novas mensagens como lidas para um utilizador específico.\n   * @param username O nome do utilizador.\n   * @returns Um Observable do resultado da operação.\n   */\n  markAllMessageNotificationsAsRead(username: string): Observable {\n    const headers = this.getHeaders();\n    return this.http.post(`${environment.appUrl}/api/notifications/messageNotifications/mark-all-as-read/${username}`, {}, { headers });\n  }\n\n  /**\n  * Limpa todas as notificações para um utilizador específico.\n  * @param username O nome do utilizador cujas notificações serão limpas.\n  * @returns Um Observable do resultado da operação.\n  */\n  clearNotifications(username: string): Observable {\n    const headers = this.getHeaders();\n    return this.http.delete(`${environment.appUrl}/api/notifications/clearNotifications/${username}`, { headers });\n  }\n\n  /**\n  * Verifica se um utilizador possui notificações não lidas.\n  * @param username O nome do utilizador.\n  * @returns Um Observable que emite verdadeiro se houver notificações não lidas; falso caso contrário.\n  */\n  hasUnreadNotifications(username: string): Observable {\n    const headers = this.getHeaders();\n    return this.http.get(`${environment.appUrl}/api/notifications/hasUnread/${username}`, { headers });\n  }\n\n  /**\n  * Notifica os utilizadores sobre um novo episódio de uma série ou atualização de mídia.\n  * @param notification A notificação a ser enviada, contendo detalhes como o ID do utilizador que disparou a notificação, mensagem, etc.\n  * @returns Um Observable do resultado da operação de notificação.\n  */\n  notifyNewEpisode(notification: MediaNotificationModel): Observable {\n    const headers = this.getHeaders();\n    const body = {\n      triggeredByUserId: notification.triggeredByUserId,\n      message: notification.message,\n      createdAt: notification.createdAt,\n      isRead: notification.isRead,\n      eventType: notification.eventType,\n      mediaName: notification.mediaName,\n      mediaPhoto: notification.mediaPhoto,\n      userMediaId: notification.userMediaId\n    };\n    return this.http.post(`${environment.appUrl}/api/notifications/notify-new-episode`, body, { headers });\n  }\n\n  /**\n  * Obtém as notificações de nova mídia para um utilizador específico.\n  * @param username O nome do utilizador cujas notificações de nova mídia são solicitadas.\n  * @returns Um Observable de um array de MediaNotificationModel, representando as notificações de nova mídia.\n  */\n  getMediaNotifications(username: string): Observable {\n    const headers = this.getHeaders();\n    return this.http.get(`${environment.appUrl}/api/notifications/mediaNotifications/${username}`, { headers });\n  }\n\n  /**\n  * Marca todas as notificações de nova mídia como lidas para um utilizador específico.\n  * @param username O nome do utilizador.\n  * @returns Um Observable do resultado da operação.\n  */\n  markAllMediaNotificationsAsRead(username: string): Observable {\n    const headers = this.getHeaders();\n    return this.http.post(`${environment.appUrl}/api/notifications/mediaNotifications/mark-all-as-read/${username}`, {}, { headers });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PendingVerificationComponent.html":{"url":"components/PendingVerificationComponent.html","title":"component - PendingVerificationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PendingVerificationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/authentication/pending-verification/pending-verification.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente Angular para gerenciar a tela de verificação pendente, onde os usuários são direcionados após tentarem se registrar.\nEste componente verifica se o e-mail do usuário foi confirmado e redireciona conforme o resultado da confirmação.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pending-verification\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./pending-verification.component.html\n            \n\n\n\n            \n                styleUrl\n                ./pending-verification.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resendEmailConfirmationLink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, activatedRouter: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/authentication/pending-verification/pending-verification.component.ts:20\n                            \n                        \n\n                \n                    \n                            Construtor para inicializar dependências.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço de autenticação para realizar operações relacionadas à conta do usuário.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço do router para navegação.\n\n                                                        \n                                                \n                                                \n                                                        activatedRouter\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço para acesso aos parâmetros da rota ativa.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/pending-verification/pending-verification.component.ts:86\n                        \n                    \n\n\n            \n                \n                        Redireciona para a página de login.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/pending-verification/pending-verification.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Inicializa o componente verificando o estado de autenticação do usuário e procedendo com a confirmação de e-mail se necessário.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resendEmailConfirmationLink\n                        \n                    \n                \n            \n            \n                \nresendEmailConfirmationLink()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/pending-verification/pending-verification.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Redireciona para a página de reenvio de link de confirmação de e-mail.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/pending-verification/pending-verification.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { take } from 'rxjs';\nimport { User } from '../models/user';\nimport { ConfirmEmail } from '../models/confirmEmail';\n\n/**\n * Componente Angular para gerenciar a tela de verificação pendente, onde os usuários são direcionados após tentarem se registrar. \n * Este componente verifica se o e-mail do usuário foi confirmado e redireciona conforme o resultado da confirmação.\n *\n * @Component Decorador que define a classe como um componente Angular, especificando o seletor, template HTML e arquivo de estilo.\n */\n@Component({\n  selector: 'app-pending-verification',\n  templateUrl: './pending-verification.component.html',\n  styleUrl: './pending-verification.component.css'\n})\nexport class PendingVerificationComponent implements OnInit{\n  success = true;\n\n  /**\n   * Construtor para inicializar dependências.\n   *\n   * @param authService Serviço de autenticação para realizar operações relacionadas à conta do usuário.\n   * @param router Serviço do router para navegação.\n   * @param activatedRouter Serviço para acesso aos parâmetros da rota ativa.\n   */\n  constructor(private authService: AuthenticationService,\n    private router: Router,\n    private activatedRouter: ActivatedRoute\n  ) {}\n\n  /**\n   * Inicializa o componente verificando o estado de autenticação do usuário e procedendo com a confirmação de e-mail se necessário.\n   */\n  ngOnInit(): void {\n    this.authService.user$.pipe(take(1)).subscribe({\n      next: (user: User | null) => {\n        if (user) {\n          this.router.navigateByUrl('/home');\n        }\n        else {\n          this.activatedRouter.queryParamMap.subscribe({\n            next: (params: any) => {\n              const confirmEmail: ConfirmEmail = {\n                token: params.get('token'),\n                email: params.get('email')\n              }\n\n              if (confirmEmail.email == undefined || confirmEmail.token == undefined) {\n                this.success = false;\n              }\n              else {\n                this.authService.confirmEmail(confirmEmail).subscribe({\n                  next: (response: any) => {\n                    this.router.navigateByUrl('/account/login');\n                  },\n                  error: (error) => {\n                    console.log(error);\n                    this.success = false;\n                  }\n                });\n              }\n            },\n            error: error => {\n              console.log(error);\n              this.success = false;\n            }\n          })\n        }\n      }\n    })\n  }\n\n  /**\n  * Redireciona para a página de reenvio de link de confirmação de e-mail.\n  */\n  resendEmailConfirmationLink() {\n    this.router.navigateByUrl('/account/send-email/resend-email-confirmation-link');\n  }\n\n  /**\n   * Redireciona para a página de login.\n   */\n  login() {\n    this.router.navigateByUrl('/account/login');\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n    \n      \n        A sua conta ainda foi confirmada. Já pode dar login.\n      \n      \n    \n  \n  \n\n    \n      \n        A sua conta ainda se encontra por verificar.\n        Verifique-a primeiro no email.\n      \n      \n      \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      A sua conta ainda foi confirmada. Já pode dar login.                                      A sua conta ainda se encontra por verificar.        Verifique-a primeiro no email.                              '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminStatisticsComponent', 'selector': 'app-admin-statistics'},{'name': 'AllMoviesPageComponent', 'selector': 'app-all-movies-page'},{'name': 'AllSeriesPageComponent', 'selector': 'app-all-series-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'authentication-button'},{'name': 'BlockedAccountComponent', 'selector': 'app-blocked-account'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GamificationComponent', 'selector': 'app-gamification'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MovieDetailsComponent', 'selector': 'app-movie-details'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'PendingVerificationComponent', 'selector': 'app-pending-verification'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterWithThirdPartyComponent', 'selector': 'app-register-with-third-party'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchServiceComponent', 'selector': 'app-search-service'},{'name': 'SeasonDetailsComponent', 'selector': 'app-season-details'},{'name': 'SeasonDetailsInfoComponent', 'selector': 'app-season-details-info'},{'name': 'SendEmailComponent', 'selector': 'app-send-email'},{'name': 'SeriesDetailsComponent', 'selector': 'app-series-details'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'SuspendedAccountComponent', 'selector': 'app-suspended-account'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PendingVerificationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Profile.html":{"url":"classes/Profile.html","title":"class - Profile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/profile/models/profile.ts\n        \n\n\n            \n                Description\n            \n            \n                Modelo para representar o perfil de um utilizador na aplicação.\nEste modelo inclui informações pessoais e de configuração do perfil de um utilizador na plataforma.\nPropriedades:\n\nuserName: Nome de utilizador único na plataforma.\nbirthDate: Data de nascimento do utilizador.\ndescription: Descrição ou biografia fornecida pelo utilizador. Pode ser nula.\ngender: Género do utilizador. Pode ser nulo se o utilizador escolher não especificar.\nprofilePhoto: Caminho ou URL para a foto de perfil do utilizador.\ncoverPhoto: Caminho ou URL para a foto de capa do perfil do utilizador.\nprofileStatus: Estado do perfil do utilizador, podendo indicar visibilidade como \"público\" ou \"privado\".\nfollowers: Número de seguidores que o utilizador possui.\nfollowing: Número de utilizadores que este utilizador está a seguir.\nstartBanDate: Data de início do banimento do utilizador, se aplicável.\nendBanDate: Data de fim do banimento do utilizador, se aplicável.\nisBanned: Indica se o utilizador está atualmente banido.\nisModerator: Indica se o utilizador tem privilégios de moderador.\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                birthDate\n                            \n                            \n                                coverPhoto\n                            \n                            \n                                description\n                            \n                            \n                                endBanDate\n                            \n                            \n                                followers\n                            \n                            \n                                following\n                            \n                            \n                                gender\n                            \n                            \n                                isBanned\n                            \n                            \n                                isModerator\n                            \n                            \n                                profilePhoto\n                            \n                            \n                                profileStatus\n                            \n                            \n                                startBanDate\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(birthDate: Date, description: string | null, gender: string | null, profilePhoto: string, coverPhoto: string, profileStatus: string, followers: number, following: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/models/profile.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        birthDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gender\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profilePhoto\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        coverPhoto\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileStatus\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        followers\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        following\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/models/profile.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        coverPhoto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/models/profile.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/models/profile.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endBanDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/models/profile.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        followers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/models/profile.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        following\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/models/profile.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/models/profile.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBanned\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/models/profile.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isModerator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/models/profile.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilePhoto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/models/profile.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/models/profile.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startBanDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/models/profile.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/models/profile.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Profile {\n  userName!: string;\n  birthDate: Date;\n  description: string | null;\n  gender: string | null;\n  profilePhoto: string;\n  coverPhoto: string;\n  profileStatus: string;\n  followers: number;\n  following: number\n  startBanDate: Date | undefined;\n  endBanDate: Date | undefined;\n  isBanned: boolean | undefined;\n  isModerator: boolean | undefined;\n\n  constructor(\n    birthDate: Date,\n    description: string | null,\n    gender: string | null,\n    profilePhoto: string,\n    coverPhoto: string,\n    profileStatus: string,\n    followers: number,\n    following: number,\n  ) {\n    this.birthDate = birthDate;\n    this.description = description;\n    this.gender = gender;\n    this.profilePhoto = profilePhoto;\n    this.coverPhoto = coverPhoto;\n    this.profileStatus = profileStatus;\n    this.followers = followers;\n    this.following = following;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProfileChat.html":{"url":"interfaces/ProfileChat.html","title":"interface - ProfileChat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProfileChat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/chat/models/profileChat.ts\n        \n\n\n            \n                Description\n            \n            \n                Define a estrutura para um perfil de chat, mostrando informações resumidas do chat na interface do utilizador.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            lastMessage\n                                        \n                                \n                                \n                                        \n                                            profilePhoto\n                                        \n                                \n                                \n                                        \n                                            unreadMessages\n                                        \n                                \n                                \n                                        \n                                            userName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lastMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastMessage:         Message | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Message | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Última mensagem enviada ou recebida no chat.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profilePhoto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profilePhoto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URL da fotografia de perfil associada ao chat.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unreadMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unreadMessages:         Message[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Message[] | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Lista de mensagens não lidas no chat.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userName:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nome de utilizador do proprietário do perfil de chat.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Message } from \"./messages\";\n\n/**\n * Define a estrutura para um perfil de chat, mostrando informações resumidas do chat na interface do utilizador.\n */\nexport interface ProfileChat {\n  /**\n   * Nome de utilizador do proprietário do perfil de chat.\n   */\n  userName: string | undefined;\n\n  /**\n   * URL da fotografia de perfil associada ao chat.\n   */\n  profilePhoto: string;\n\n  /**\n   * Última mensagem enviada ou recebida no chat.\n   */\n  lastMessage: Message | undefined;\n\n  /**\n   * Lista de mensagens não lidas no chat.\n   */\n  unreadMessages: Message[] | null;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Register.html":{"url":"interfaces/Register.html","title":"interface - Register","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Register\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authentication/models/register.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface para representar os dados necessários para registrar um novo utilizador no sistema.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Register {\n  username: string,\n  email: string,\n  password: string,\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterWithExternal.html":{"url":"classes/RegisterWithExternal.html","title":"class - RegisterWithExternal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterWithExternal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authentication/models/registerWithExternal.ts\n        \n\n\n            \n                Description\n            \n            \n                Classe para armazenar informações de registro de utilizador utilizando serviços de autenticação externos.\nContém detalhes recebidos de provedores de identidade externos como Google, Facebook, etc.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                email\n                            \n                            \n                                provider\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userName: string, userId: string, accessToken: string, provider: string, email: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/authentication/models/registerWithExternal.ts:12\n                            \n                        \n\n                \n                    \n                            Construtor para inicializar um objeto RegisterWithExternal com os dados fornecidos pelo provedor externo.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O nome de utilizador associado à conta externa.\n\n                                                        \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O identificador único do utilizador no serviço externo.\n\n                                                        \n                                                \n                                                \n                                                        accessToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O token de acesso fornecido pelo serviço externo para acessar a API do provedor.\n\n                                                        \n                                                \n                                                \n                                                        provider\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O nome do serviço provedor de identidade externo (ex.: Google, Facebook).\n\n                                                        \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O endereço de email do utilizador conforme fornecido pelo serviço externo.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/models/registerWithExternal.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/models/registerWithExternal.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/models/registerWithExternal.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/models/registerWithExternal.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/models/registerWithExternal.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RegisterWithExternal {\n  userName: string;\n  userId: string;\n  accessToken: string;\n  provider: string;\n  email: string;\n\n  /**\n   * Construtor para inicializar um objeto RegisterWithExternal com os dados fornecidos pelo provedor externo.\n   * \n   * @param userName O nome de utilizador associado à conta externa.\n   * @param userId O identificador único do utilizador no serviço externo.\n   * @param accessToken O token de acesso fornecido pelo serviço externo para acessar a API do provedor.\n   * @param provider O nome do serviço provedor de identidade externo (ex.: Google, Facebook).\n   * @param email O endereço de email do utilizador conforme fornecido pelo serviço externo.\n   */\n  constructor(userName: string, userId: string, accessToken: string, provider: string, email:string)\n {\n    this.userName = userName;\n    this.userId = userId;\n    this.accessToken = accessToken;\n    this.provider = provider;\n    this.email = email;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterWithThirdPartyComponent.html":{"url":"components/RegisterWithThirdPartyComponent.html","title":"component - RegisterWithThirdPartyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterWithThirdPartyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/authentication/register-with-third-party/register-with-third-party.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente Angular para registro utilizando um serviço de autenticação de terceiros.\nPermite aos usuários registrar-se utilizando credenciais de terceiros, como Google, facilitando o processo de registro sem a necessidade de criar uma senha específica para o site.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register-with-third-party\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./register-with-third-party.component.html\n            \n\n\n\n            \n                styleUrl\n                ./register-with-third-party.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                            \n                                email\n                            \n                            \n                                errorMessages\n                            \n                            \n                                provider\n                            \n                            \n                                registerForm\n                            \n                            \n                                submitted\n                            \n                            \n                                submittedValues\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeForm\n                            \n                            \n                                isFieldModified\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                register\n                            \n                            \n                                registerBack\n                            \n                            \n                                    Private\n                                saveSubmittedValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AuthenticationService, router: Router, activatedRoute: ActivatedRoute, ngZone: NgZone, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/authentication/register-with-third-party/register-with-third-party.component.ts:31\n                            \n                        \n\n                \n                    \n                            Construtor para inicializar dependências.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço de autenticação para realizar o registro com um provedor de terceiros.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço do router para navegação.\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço para acesso aos parâmetros da rota ativa.\n\n                                                        \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço para execução de operações fora do Angular.\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Construtor de formulários para criação de formulários reativos.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeForm\n                        \n                    \n                \n            \n            \n                \ninitializeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/register-with-third-party/register-with-third-party.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Configura o formulário de registro com as validações necessárias.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldModified\n                        \n                    \n                \n            \n            \n                \nisFieldModified(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/register-with-third-party/register-with-third-party.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Verifica se um campo específico do formulário foi modificado em relação ao valor originalmente submetido.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nome do campo a ser verificado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Booleano indicando se o campo foi modificado ou não.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/register-with-third-party/register-with-third-party.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Inicializa o componente verificando o estado de autenticação do usuário e configurando o formulário se necessário.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/register-with-third-party/register-with-third-party.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Processa a submissão do formulário de registro, validando e enviando os dados para a ação de registro com terceiros.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerBack\n                        \n                    \n                \n            \n            \n                \nregisterBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/register-with-third-party/register-with-third-party.component.ts:134\n                        \n                    \n\n\n            \n                \n                        Navega de volta para a página de registro normal em caso de cancelamento ou erro.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveSubmittedValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveSubmittedValues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/register-with-third-party/register-with-third-party.component.ts:126\n                        \n                    \n\n\n            \n                \n                        Salva os valores submetidos do formulário para futura referência em caso de erros.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        access_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/register-with-third-party/register-with-third-party.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/register-with-third-party/register-with-third-party.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/register-with-third-party/register-with-third-party.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/register-with-third-party/register-with-third-party.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/register-with-third-party/register-with-third-party.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/register-with-third-party/register-with-third-party.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submittedValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/register-with-third-party/register-with-third-party.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/register-with-third-party/register-with-third-party.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { take } from 'rxjs';\nimport { User } from '../models/user';\nimport { RegisterWithExternal } from '../models/registerWithExternal';\n\n/**\n * Componente Angular para registro utilizando um serviço de autenticação de terceiros.\n * Permite aos usuários registrar-se utilizando credenciais de terceiros, como Google, facilitando o processo de registro sem a necessidade de criar uma senha específica para o site.\n *\n * @Component Decorador que define a classe como um componente Angular, especificando o seletor, template HTML e arquivo de estilo.\n */\n@Component({\n  selector: 'app-register-with-third-party',\n  templateUrl: './register-with-third-party.component.html',\n  styleUrl: './register-with-third-party.component.css'\n})\nexport class RegisterWithThirdPartyComponent implements OnInit {\n\n  registerForm: FormGroup = new FormGroup({});\n\n  submitted = false;\n  provider: string | null = null;\n  access_token: string | null = null;\n  userId: string | null = null;\n  email: string | null = null;\n\n  errorMessages: any = {};\n  submittedValues: any = {};\n\n  /**\n   * Construtor para inicializar dependências.\n   *\n   * @param accountService Serviço de autenticação para realizar o registro com um provedor de terceiros.\n   * @param router Serviço do router para navegação.\n   * @param activatedRoute Serviço para acesso aos parâmetros da rota ativa.\n   * @param ngZone Serviço para execução de operações fora do Angular.\n   * @param formBuilder Construtor de formulários para criação de formulários reativos.\n   */\n  constructor(private accountService: AuthenticationService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private ngZone: NgZone,\n    private formBuilder: FormBuilder) { }\n\n  /**\n   * Inicializa o componente verificando o estado de autenticação do usuário e configurando o formulário se necessário.\n   */\n  ngOnInit(): void {\n    this.accountService.user$.pipe(take(1)).subscribe({\n      next: (user: User | null) => {\n        if (user) {\n          this.router.navigateByUrl('/');\n        } else {\n          this.activatedRoute.queryParamMap.subscribe({\n            next: (params: any) => {\n              this.provider = this.activatedRoute.snapshot.paramMap.get('provider');\n              this.access_token = params.get('access_token');\n              this.userId = params.get('userId');\n              this.email = params.get('email');\n              if (this.provider && this.access_token && this.userId && this.email && (this.provider === 'google')) {\n                this.initializeForm();\n              } else {\n                this.router.navigateByUrl('/account/register');\n              }\n            }\n          });\n\n\n\n        }\n      }\n    });\n  }\n\n  /**\n   * Configura o formulário de registro com as validações necessárias.\n   */\n  initializeForm() {\n    this.registerForm = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(20)]],\n    });\n\n  }\n\n  /**\n   * Processa a submissão do formulário de registro, validando e enviando os dados para a ação de registro com terceiros.\n   */\n  register() {\n    this.submitted = true;\n    this.errorMessages = {};\n    this.submittedValues = {};\n\n    if (this.registerForm.valid && this.userId && this.access_token && this.provider && this.email) {\n      const userName = this.registerForm.get('username')?.value;\n      const model = new RegisterWithExternal(userName, this.userId, this.access_token, this.provider, this.email);\n      this.accountService.registerWithThirdParty(model).subscribe({\n        next: _ => {\n          this.router.navigateByUrl('/');\n        },\n        error: error => {\n          this.ngZone.run(() => {\n            this.errorMessages[error.error.field] = error.error.message;\n            this.saveSubmittedValues();\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Verifica se um campo específico do formulário foi modificado em relação ao valor originalmente submetido.\n   *\n   * @param fieldName Nome do campo a ser verificado.\n   * @returns Booleano indicando se o campo foi modificado ou não.\n   */\n  isFieldModified(fieldName: string) {\n    return this.registerForm.get(fieldName)!.value !== this.submittedValues[fieldName];\n  }\n\n  /**\n  * Salva os valores submetidos do formulário para futura referência em caso de erros.\n  */\n  private saveSubmittedValues(): void {\n    this.submittedValues[\"username\"] = this.registerForm.get(\"username\")!.value;\n\n  }\n\n  /**\n   * Navega de volta para a página de registro normal em caso de cancelamento ou erro.\n   */\n  registerBack() {\n    this.router.navigateByUrl('/account/register');\n  }\n\n}\n\n\n    \n\n    \n        \n  \n  \n    \n\n\n      \n        \n        \n      \n\n      \n        \n          O nome de utilizador é obrigatório!\n        \n        \n          O nome de utilizador tem de conter entre 4-20 caracteres!\n        \n        \n          {{ errorMessages['Username'] }}\n        \n        \n          {{ errorMessages['ThirdPartyEmail'] }}\n        \n      \n\n\n      \n      \n      \n      \n        Já possui conta?\n         \n        Faça login aqui!\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            O nome de utilizador é obrigatório!                          O nome de utilizador tem de conter entre 4-20 caracteres!                          {{ errorMessages[\\'Username\\'] }}                          {{ errorMessages[\\'ThirdPartyEmail\\'] }}                                              Já possui conta?                 Faça login aqui!            '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminStatisticsComponent', 'selector': 'app-admin-statistics'},{'name': 'AllMoviesPageComponent', 'selector': 'app-all-movies-page'},{'name': 'AllSeriesPageComponent', 'selector': 'app-all-series-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'authentication-button'},{'name': 'BlockedAccountComponent', 'selector': 'app-blocked-account'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GamificationComponent', 'selector': 'app-gamification'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MovieDetailsComponent', 'selector': 'app-movie-details'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'PendingVerificationComponent', 'selector': 'app-pending-verification'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterWithThirdPartyComponent', 'selector': 'app-register-with-third-party'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchServiceComponent', 'selector': 'app-search-service'},{'name': 'SeasonDetailsComponent', 'selector': 'app-season-details'},{'name': 'SeasonDetailsInfoComponent', 'selector': 'app-season-details-info'},{'name': 'SendEmailComponent', 'selector': 'app-send-email'},{'name': 'SeriesDetailsComponent', 'selector': 'app-series-details'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'SuspendedAccountComponent', 'selector': 'app-suspended-account'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterWithThirdPartyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationComponent.html":{"url":"components/RegistrationComponent.html","title":"component - RegistrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/authentication/registration/registration.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente responsável pelo registro de novos usuários no sistema. Inclui opções para registro tradicional e registro através de serviços externos como Google.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration\n            \n\n\n\n            \n                styleUrls\n                ./registration.component.css\n            \n\n\n\n            \n                templateUrl\n                ./registration.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessages\n                            \n                            \n                                    \n                                googleButton\n                            \n                            \n                                registrationForm\n                            \n                            \n                                submitted\n                            \n                            \n                                submittedValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                googleCallBack\n                            \n                            \n                                initializeForm\n                            \n                            \n                                    Private\n                                initializeGoogleButton\n                            \n                            \n                                isFieldModified\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                register\n                            \n                            \n                                    Private\n                                saveSubmittedValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, formBuilder: FormBuilder, router: Router, _renderer2: Renderer2, ngZone: NgZone, _document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/authentication/registration/registration.component.ts:27\n                            \n                        \n\n                \n                    \n                            Construtor para inicializar dependências e configurações.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço de autenticação para gerenciar o registro e autenticação de usuários.\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Construtor de formulários para criação de formulários reativos.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço do router para navegação.\n\n                                                        \n                                                \n                                                \n                                                        _renderer2\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Renderer para manipulação de elementos DOM.\n\n                                                        \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço para execução de operações fora do Angular.\n\n                                                        \n                                                \n                                                \n                                                        _document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Documento para acesso ao DOM global.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        googleCallBack\n                        \n                    \n                \n            \n            \n                \n                        \n                    googleCallBack(response: CredentialResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/registration/registration.component.ts:158\n                        \n                    \n\n\n            \n                \n                        Callback para o processo de autenticação com o Google. Trata o token recebido e envia para o servidor para autenticação e registro.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                        CredentialResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Resposta do serviço de autenticação do Google.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeForm\n                        \n                    \n                \n            \n            \n                \ninitializeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/registration/registration.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Define o formulário de registro com validações necessárias para username, email e senha.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeGoogleButton\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeGoogleButton()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/registration/registration.component.ts:136\n                        \n                    \n\n\n            \n                \n                        Configura o botão de registro do Google na página, inicializando a biblioteca de autenticação do Google e configurando o callback para o processo de autenticação.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldModified\n                        \n                    \n                \n            \n            \n                \nisFieldModified(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/registration/registration.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Verifica se um campo específico do formulário foi modificado em relação ao valor originalmente submetido.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nome do campo a ser verificado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Booleano indicando se o campo foi modificado ou não.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/registration/registration.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/registration/registration.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Inicializa o componente configurando o formulário e o botão do Google.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/registration/registration.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Processa a submissão do formulário de registro, validando e enviando os dados para o servidor.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveSubmittedValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveSubmittedValues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/registration/registration.component.ts:128\n                        \n                    \n\n\n            \n                \n                        Salva os valores submetidos do formulário para referência futura.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/registration/registration.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        googleButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Default value : new ElementRef({})\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('googleButton', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/registration/registration.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup([])\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/registration/registration.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/registration/registration.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submittedValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/registration/registration.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Inject, OnInit, Renderer2, ViewChild, NgZone } from '@angular/core';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from '../models/user';\nimport { take } from 'rxjs';\nimport { DOCUMENT } from '@angular/common';\nimport { CredentialResponse } from 'google-one-tap';\nimport { jwtDecode } from 'jwt-decode';\n\n/**\n * Componente responsável pelo registro de novos usuários no sistema. Inclui opções para registro tradicional e registro através de serviços externos como Google.\n *\n * @Component Decorador que define a classe como um componente Angular com seu seletor, template HTML e arquivos de estilo associados.\n */\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\n\nexport class RegistrationComponent implements OnInit{\n  @ViewChild('googleButton', { static: true }) googleButton: ElementRef = new ElementRef({});\n  registrationForm: FormGroup = new FormGroup([]);\n  submitted = false;\n  errorMessages: any = {};\n  submittedValues: any = {};\n\n  /**\n   * Construtor para inicializar dependências e configurações.\n   *\n   * @param authService Serviço de autenticação para gerenciar o registro e autenticação de usuários.\n   * @param formBuilder Construtor de formulários para criação de formulários reativos.\n   * @param router Serviço do router para navegação.\n   * @param _renderer2 Renderer para manipulação de elementos DOM.\n   * @param ngZone Serviço para execução de operações fora do Angular.\n   * @param _document Documento para acesso ao DOM global.\n   */\n  constructor(\n    private authService: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private _renderer2: Renderer2,\n    private ngZone: NgZone,\n\n    @Inject(DOCUMENT) private _document: Document\n  ) {\n    this.authService.user$.pipe(take(1)).subscribe({\n      next: (user: User | null) => {\n        if (user) {\n          this.router.navigateByUrl(\"/home\");\n        }\n      }\n    });\n  }\n\n\n  /**\n   * Inicializa o componente configurando o formulário e o botão do Google.\n   */\n  ngOnInit(): void {\n    this.initializeGoogleButton();\n    this.initializeForm();\n  }\n\n    ngAfterViewInit() {\n    const script1 = this._renderer2.createElement('script');\n    script1.src = 'https://accounts.google.com/gsi/client';\n    script1.async = 'true';\n    script1.defer = 'true';\n    this._renderer2.appendChild(this._document.body, script1);\n  }\n\n  /**\n   * Define o formulário de registro com validações necessárias para username, email e senha.\n   */\n  initializeForm() {\n    this.registrationForm = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(20)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.pattern(\"(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d).{8,}\"), Validators.maxLength(12)]]\n    });\n  }\n\n  /**\n   * Processa a submissão do formulário de registro, validando e enviando os dados para o servidor.\n   */\n  register() {\n    this.submitted = true;\n    this.errorMessages = {};\n    this.submittedValues = {};\n;\n    if (this.registrationForm.valid) {\n      this.authService.register(this.registrationForm.value).subscribe({\n        next: (response) => {\n          this.router.navigateByUrl('/account/confirm-email');\n        },\n        error: error => {\n          if (error.error.errors) {\n            error.error.errors.forEach((value: any) => {\n              if (!this.errorMessages[value.field]) {\n                this.errorMessages[value.field] = value.message;\n              }\n            });\n            this.saveSubmittedValues();\n          } else {\n            this.errorMessages[error.error.field] = error.error.message;\n            this.saveSubmittedValues();\n          }\n        }\n      });\n    }\n  }\n\n  /**\n  * Verifica se um campo específico do formulário foi modificado em relação ao valor originalmente submetido.\n  *\n  * @param fieldName Nome do campo a ser verificado.\n  * @returns Booleano indicando se o campo foi modificado ou não.\n  */\n  isFieldModified(fieldName: string) {\n    return this.registrationForm.get(fieldName)!.value !== this.submittedValues[fieldName];\n  }\n\n  /**\n   * Salva os valores submetidos do formulário para referência futura.\n   */\n  private saveSubmittedValues(): void {\n    this.submittedValues[\"username\"] = this.registrationForm.get(\"username\")!.value;\n    this.submittedValues[\"email\"] = this.registrationForm.get(\"email\")!.value;\n  }\n\n  /**\n   * Configura o botão de registro do Google na página, inicializando a biblioteca de autenticação do Google e configurando o callback para o processo de autenticação.\n   */\n  private initializeGoogleButton() {\n    (window as any).onGoogleLibraryLoad = () => {\n      //@ts-ignore\n      google.accounts.id.initialize({\n        client_id: '290666772375-5s2b58vflc2ohpc01f7q1hguo9k5gpi7.apps.googleusercontent.com',\n        callback: this.googleCallBack.bind(this),\n        auto_select: false,\n        cancel_on_tap_outside: true\n      });\n      //@ts-ignore\n      google.accounts.id.renderButton(\n        this.googleButton.nativeElement,\n        { size: 'medium', shape: 'rectangular', text: 'signup_with', logo_alignment: 'center' }\n      );\n    };\n  }\n\n  /**\n   * Callback para o processo de autenticação com o Google. Trata o token recebido e envia para o servidor para autenticação e registro.\n   *\n   * @param response Resposta do serviço de autenticação do Google.\n   */\n  private async googleCallBack(response: CredentialResponse) {\n    this.ngZone.run(() => {\n      const decodedToken: any = jwtDecode(response.credential);\n      this.router.navigateByUrl(`/account/register/third-party/google?access_token=${response.credential}&userId=${decodedToken.sub}&email=${decodedToken.email}`);\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n\n\n      \n        \n        \n      \n\n      \n        \n          O nome de utilizador é obrigatório!\n        \n        \n          O nome de utilizador tem de conter entre 4-20 caracteres!\n        \n        \n          {{ errorMessages['Username'] }}\n        \n      \n\n\n      \n        \n        \n      \n\n       \n         \n           O email é obrigatório!\n         \n         \n           A nomenclatura do email está incorreta!\n         \n         \n           {{ errorMessages['Email'] }}\n         \n         \n           {{ errorMessages['ThirdPartyEmail'] }}\n         \n       \n\n      \n        \n        \n      \n\n      \n        \n          A palavra-passe é obrigatória!\n        \n        \n          A palavra-passe tem de conter entre 8-12 caracteres, entre eles pelo menos uma letra minúscula, uma letra maiúscula e um número!\n        \n        \n          {{ errorMessages['Password'] }}\n        \n      \n\n      \n      \n      \n\n      -->\n\n      \n        Já possui conta?\n         \n        Faça login aqui!\n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./registration.component.css\n                \n                .register-container {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-bottom:50px;\n}\n\n.register-form-container {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.register-form {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 30%;\n  gap: 5px;\n}\n\n.register-form .forgot-password-link,\n.register-form .register-link,\n.register-form authentication-button {\n  width: 75%;\n}\n\n.register-form .forgot-password-link,\n.register-form .register-link {\n    display: flex;\n    justify-content: flex-end;\n    color: white;\n  }\n\na {\n  color: white;\n}\n\n.divider {\n  height: 1px;\n  width: 100%;\n  background-color: white;\n  margin: 20px 0;\n  border-radius: 15px;\n}\n\n.logo {\n  margin: 90px 0px 20px 0px;\n  width: 10%\n}\n\n.register-link {\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n  margin-left:100px;\n}\n\n.register-separator {\n  margin: 0 2px; /* Ajuste o espaçamento conforme necessário */\n}\n\n\n/*** INPUTS FIELDS */\n.input-with-icon input {\n  border: none;\n  background-color: transparent;\n  outline: none;\n  font-size: 16px; /* Ajuste o tamanho da fonte conforme necessário */\n  padding: 5px;\n  flex-grow: 1;\n  width: 100%;\n  color: white;\n}\n\n.input-with-icon {\n  background-color: transparent;\n  color: #000000;\n  border-radius: 10px;\n  font-size: 16px;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 10px;\n  box-sizing: border-box;\n  padding: 5px 20px;\n  border: 2px solid white;\n  cursor: pointer;\n  width: 75%;\n  height: 40px;\n  position: relative;\n  margin-bottom: 20px;\n}\n\n.has-error{\n    margin-bottom: 0px !important;\n}\n\n.input-with-icon .fa {\n    color: white;\n    width: 16px;\n    height: 16px\n}\n\n.error-container{\n    width: 75%;\n    display: flex;\n}\n\n.error-container span{\n    width: 100%;\n    padding: 5px 20px;\n}\n\n.error-message {\n  font-size: 14px;\n  color: red;\n  /* Remova margens negativas se houver */\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            O nome de utilizador é obrigatório!                          O nome de utilizador tem de conter entre 4-20 caracteres!                          {{ errorMessages[\\'Username\\'] }}                                                                     O email é obrigatório!                             A nomenclatura do email está incorreta!                             {{ errorMessages[\\'Email\\'] }}                             {{ errorMessages[\\'ThirdPartyEmail\\'] }}                                                                    A palavra-passe é obrigatória!                          A palavra-passe tem de conter entre 8-12 caracteres, entre eles pelo menos uma letra minúscula, uma letra maiúscula e um número!                          {{ errorMessages[\\'Password\\'] }}                                      -->              Já possui conta?                 Faça login aqui!            '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminStatisticsComponent', 'selector': 'app-admin-statistics'},{'name': 'AllMoviesPageComponent', 'selector': 'app-all-movies-page'},{'name': 'AllSeriesPageComponent', 'selector': 'app-all-series-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'authentication-button'},{'name': 'BlockedAccountComponent', 'selector': 'app-blocked-account'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GamificationComponent', 'selector': 'app-gamification'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MovieDetailsComponent', 'selector': 'app-movie-details'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'PendingVerificationComponent', 'selector': 'app-pending-verification'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterWithThirdPartyComponent', 'selector': 'app-register-with-third-party'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchServiceComponent', 'selector': 'app-search-service'},{'name': 'SeasonDetailsComponent', 'selector': 'app-season-details'},{'name': 'SeasonDetailsInfoComponent', 'selector': 'app-season-details-info'},{'name': 'SendEmailComponent', 'selector': 'app-send-email'},{'name': 'SeriesDetailsComponent', 'selector': 'app-series-details'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'SuspendedAccountComponent', 'selector': 'app-suspended-account'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReplyNotificationModel.html":{"url":"classes/ReplyNotificationModel.html","title":"class - ReplyNotificationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReplyNotificationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/notifications/models/reply-notification-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Modelo para notificações de respostas a comentários. Estende o modelo de notificação base,\nadicionando propriedades específicas como ID da mídia, tipo da mídia, ID do comentário,\nID do utilizador alvo e foto do utilizador que disparou a notificação.\nPropriedades:\n\nmediaId: Identificador da mídia associada à notificação.\nmediaType: Tipo da mídia (por exemplo, filme, série).\ncommentId: Identificador do comentário associado à notificação.\ntargetUserId: Identificador do utilizador alvo da notificação.\ntriggeredByUserPhoto: Foto do utilizador que disparou a notificação.\n\n\n            \n\n            \n                Extends\n            \n            \n                            NotificationModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                commentId\n                            \n                            \n                                mediaId\n                            \n                            \n                                mediaType\n                            \n                            \n                                targetUserId\n                            \n                            \n                                triggeredByUserPhoto\n                            \n                            \n                                createdAt\n                            \n                            \n                                eventType\n                            \n                            \n                                isRead\n                            \n                            \n                                message\n                            \n                            \n                                triggeredByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(triggeredByUserId: string, message: string, createdAt: Date, isRead: boolean, eventType: string, mediaId: number, mediaType: string, commentId: number, targetUserId: string, triggeredByUserPhoto: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/notifications/models/reply-notification-model.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        triggeredByUserId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createdAt\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isRead\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commentId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        targetUserId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        triggeredByUserPhoto\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        commentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/notifications/models/reply-notification-model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/notifications/models/reply-notification-model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/notifications/models/reply-notification-model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/notifications/models/reply-notification-model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggeredByUserPhoto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/notifications/models/reply-notification-model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         NotificationModel\n\n                            \n                        \n                    \n                        \n                                Defined in         NotificationModel:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         NotificationModel\n\n                            \n                        \n                    \n                        \n                                Defined in         NotificationModel:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         NotificationModel\n\n                            \n                        \n                    \n                        \n                                Defined in         NotificationModel:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         NotificationModel\n\n                            \n                        \n                    \n                        \n                                Defined in         NotificationModel:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggeredByUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         NotificationModel\n\n                            \n                        \n                    \n                        \n                                Defined in         NotificationModel:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotificationModel } from \"./notification-model\";\n\n/**\n * Modelo para notificações de respostas a comentários. Estende o modelo de notificação base,\n * adicionando propriedades específicas como ID da mídia, tipo da mídia, ID do comentário,\n * ID do utilizador alvo e foto do utilizador que disparou a notificação.\n *\n * Propriedades:\n * - mediaId: Identificador da mídia associada à notificação.\n * - mediaType: Tipo da mídia (por exemplo, filme, série).\n * - commentId: Identificador do comentário associado à notificação.\n * - targetUserId: Identificador do utilizador alvo da notificação.\n * - triggeredByUserPhoto: Foto do utilizador que disparou a notificação.\n */\nexport class ReplyNotificationModel extends NotificationModel {\n  mediaId: number;\n  mediaType: string;\n  commentId: number;\n  targetUserId: string;\n  triggeredByUserPhoto: string;\n\n\n  constructor(\n    triggeredByUserId: string,\n    message: string,\n    createdAt: Date,\n    isRead: boolean,\n    eventType: string,\n    mediaId: number,\n    mediaType: string,\n    commentId: number,\n    targetUserId: string,\n  triggeredByUserPhoto: string\n\n  ) {\n    super(triggeredByUserId, message, createdAt, isRead, eventType);\n    this.mediaId = mediaId;\n    this.mediaType = mediaType;\n    this.commentId = commentId;\n    this.targetUserId = targetUserId;\n    this.triggeredByUserPhoto = triggeredByUserPhoto;\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResetPassword.html":{"url":"interfaces/ResetPassword.html","title":"interface - ResetPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResetPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authentication/models/resetPassword.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface para representar os dados necessários para realizar a operação de redefinição de senha.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            newPassword\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ResetPassword {\n  token: string;\n  email: string;\n  newPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/authentication/reset-password/reset-password.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente Angular para redefinir a senha do usuário.\nUtiliza um formulário para coletar a nova senha do usuário e envia ao backend para atualização.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./reset-password.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                errorMessages\n                            \n                            \n                                mode\n                            \n                            \n                                passwordForm\n                            \n                            \n                                passwordValue\n                            \n                            \n                                submitted\n                            \n                            \n                                submittedValues\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                initializeForm\n                            \n                            \n                                isFieldModified\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, formBuilder: FormBuilder, router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/authentication/reset-password/reset-password.component.ts:28\n                            \n                        \n\n                \n                    \n                            Construtor para inicializar dependências.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço de autenticação para realizar a redefinição de senha.\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Construtor de formulários para criação de formulários reativos.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço do router para navegação.\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço para acesso aos parâmetros da rota ativa.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/reset-password/reset-password.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Cancela a operação de redefinição de senha e redireciona o usuário para a página inicial.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeForm\n                        \n                    \n                \n            \n            \n                \ninitializeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/reset-password/reset-password.component.ts:72\n                        \n                    \n\n\n            \n                \n                        Define o formulário de redefinição de senha com as validações necessárias.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldModified\n                        \n                    \n                \n            \n            \n                \nisFieldModified(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/reset-password/reset-password.component.ts:108\n                        \n                    \n\n\n            \n                \n                        Verifica se um campo específico do formulário foi modificado em relação ao valor originalmente submetido.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nome do campo a ser verificado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Booleano indicando se o campo foi modificado ou não.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/reset-password/reset-password.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Inicializa o componente verificando o estado de autenticação do usuário e configura o formulário se necessário.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/reset-password/reset-password.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Processa a submissão do formulário de redefinição de senha, validando e enviando os dados para a ação especificada.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/reset-password/reset-password.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/reset-password/reset-password.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/reset-password/reset-password.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/reset-password/reset-password.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/reset-password/reset-password.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/reset-password/reset-password.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submittedValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/reset-password/reset-password.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/reset-password/reset-password.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from '../models/user';\nimport { take } from 'rxjs';\nimport { ResetPassword } from '../models/resetPassword';\n\n/**\n * Componente Angular para redefinir a senha do usuário.\n * Utiliza um formulário para coletar a nova senha do usuário e envia ao backend para atualização.\n *\n * @Component Decorador que define a classe como um componente Angular, especificando o seletor, template HTML e arquivo de estilo.\n */\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrl: './reset-password.component.css'\n})\nexport class ResetPasswordComponent {\n  passwordForm: FormGroup = new FormGroup({});\n  submitted = false;\n  mode: string | undefined;\n  errorMessages: any = {};\n  submittedValues: any = {};\n  passwordValue: string = \"\";\n  token: string | undefined;\n  email: string | undefined;\n\n  /**\n   * Construtor para inicializar dependências.\n   *\n   * @param authService Serviço de autenticação para realizar a redefinição de senha.\n   * @param formBuilder Construtor de formulários para criação de formulários reativos.\n   * @param router Serviço do router para navegação.\n   * @param activatedRoute Serviço para acesso aos parâmetros da rota ativa.\n   */\n  constructor(private authService: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) { }\n\n  /**\n   * Inicializa o componente verificando o estado de autenticação do usuário e configura o formulário se necessário.\n   */\n  ngOnInit(): void {\n    this.authService.user$.pipe(take(1)).subscribe({\n      next: (user: User | null) => {\n        if (user) {\n          this.router.navigateByUrl('/home');\n        } else {\n          this.activatedRoute.queryParamMap.subscribe({\n            next: (params: any) => {\n              this.token = params.get('token');\n              this.email = params.get('email');\n              if (this.token && this.email) {\n                this.initializeForm();\n              } else {\n                this.router.navigateByUrl(\"/account/login\");\n              }\n            }\n          })\n        }\n      }\n    })\n  }\n\n  /**\n   * Define o formulário de redefinição de senha com as validações necessárias.\n   */\n  initializeForm() {\n    this.passwordForm = this.formBuilder.group({\n      newPassword: ['', [Validators.required, Validators.minLength(8), Validators.pattern(\"(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d).{8,}\"), Validators.maxLength(12)]]\n    })\n  }\n\n  /**\n   * Processa a submissão do formulário de redefinição de senha, validando e enviando os dados para a ação especificada.\n   */\n  resetPassword() {\n    this.submitted = true;\n    this.errorMessages = {};\n    if (this.passwordForm.valid && this.email && this.token) {\n      const model: ResetPassword = {\n        token: this.token,\n        email: this.email,\n        newPassword: this.passwordForm.get('newPassword')?.value,\n      }\n\n      this.authService.resetPassword(model).subscribe({\n        next: (response: any) => {\n          this.router.navigateByUrl('/account/login');\n        },\n        error: (error) => {\n          console.log(error);\n        }\n      });\n    }\n  }\n\n  /**\n   * Verifica se um campo específico do formulário foi modificado em relação ao valor originalmente submetido.\n   *\n   * @param fieldName Nome do campo a ser verificado.\n   * @returns Booleano indicando se o campo foi modificado ou não.\n   */\n  isFieldModified(fieldName: string) {\n    return this.passwordForm.get(fieldName)!.value !== this.submittedValues[fieldName];\n  }\n\n  /**\n   * Cancela a operação de redefinição de senha e redireciona o usuário para a página inicial.\n   */\n  cancel() {\n    this.router.navigateByUrl('/home');\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n    \n      \n        Insira a sua nova palavra passe.\n      \n      \n        \n        \n      -->\n\n      \n        \n        \n      \n\n      \n        \n          A nova palavra-passe é obrigatória!\n        \n        \n          A nova palavra-passe tem de conter entre 8-12 caracteres, entre eles pelo menos uma letra minúscula, uma letra maiúscula e um número!\n        \n        \n          {{ errorMessages['Password'] }}\n        \n      \n\n      \n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Insira a sua nova palavra passe.                                  -->                                                    A nova palavra-passe é obrigatória!                          A nova palavra-passe tem de conter entre 8-12 caracteres, entre eles pelo menos uma letra minúscula, uma letra maiúscula e um número!                          {{ errorMessages[\\'Password\\'] }}                                '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminStatisticsComponent', 'selector': 'app-admin-statistics'},{'name': 'AllMoviesPageComponent', 'selector': 'app-all-movies-page'},{'name': 'AllSeriesPageComponent', 'selector': 'app-all-series-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'authentication-button'},{'name': 'BlockedAccountComponent', 'selector': 'app-blocked-account'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GamificationComponent', 'selector': 'app-gamification'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MovieDetailsComponent', 'selector': 'app-movie-details'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'PendingVerificationComponent', 'selector': 'app-pending-verification'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterWithThirdPartyComponent', 'selector': 'app-register-with-third-party'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchServiceComponent', 'selector': 'app-search-service'},{'name': 'SeasonDetailsComponent', 'selector': 'app-season-details'},{'name': 'SeasonDetailsInfoComponent', 'selector': 'app-season-details-info'},{'name': 'SendEmailComponent', 'selector': 'app-send-email'},{'name': 'SeriesDetailsComponent', 'selector': 'app-series-details'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'SuspendedAccountComponent', 'selector': 'app-suspended-account'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/media/search/search.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n            \n                styleUrl\n                ./search.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentFilter\n                            \n                            \n                                currentPage\n                            \n                            \n                                genresMovies\n                            \n                            \n                                genresSeries\n                            \n                            \n                                isGenreSelected\n                            \n                            \n                                originalSearchResult\n                            \n                            \n                                searchForm\n                            \n                            \n                                searchResult\n                            \n                            \n                                selectedGenreId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyCurrentFilter\n                            \n                            \n                                changeType\n                            \n                            \n                                filterByGenre\n                            \n                            \n                                nextPage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSearch\n                            \n                            \n                                previousPage\n                            \n                            \n                                processSearchResults\n                            \n                            \n                                submitForm\n                            \n                            \n                                updateSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    totalPagesArray\n                                \n                                \n                                    displayPages\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: MovieApiServiceComponent, route: ActivatedRoute, router: Router, title: Title, meta: Meta, formBuilder: FormBuilder, searchService: SearchServiceComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/media/search/search.component.ts:74\n                            \n                        \n\n                \n                    \n                            Construtor da classe SearchComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        MovieApiServiceComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O serviço de API de filmes.\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O serviço de roteamento ativado.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O serviço de roteamento.\n\n                                                        \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O serviço para definir o título da página.\n\n                                                        \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                    Meta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O serviço para manipular meta tags HTML.\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O construtor de formulários reativos.\n\n                                                        \n                                                \n                                                \n                                                        searchService\n                                                  \n                                                        \n                                                                        SearchServiceComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O serviço de pesquisa.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyCurrentFilter\n                        \n                    \n                \n            \n            \n                \napplyCurrentFilter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/search/search.component.ts:182\n                        \n                    \n\n\n            \n                \n                        Aplica o filtro de pesquisa atual aos resultados da pesquisa.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeType\n                        \n                    \n                \n            \n            \n                \nchangeType(newType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/search/search.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterByGenre\n                        \n                    \n                \n            \n            \n                \nfilterByGenre(genreId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/search/search.component.ts:160\n                        \n                    \n\n\n            \n                \n                        Filtra os resultados da pesquisa por gênero.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                genreId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O ID do gênero a ser filtrado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextPage\n                        \n                    \n                \n            \n            \n                \nnextPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/search/search.component.ts:273\n                        \n                    \n\n\n            \n                \n                        Avança para a próxima página de resultados.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/search/search.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/search/search.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Método executado quando o formulário de pesquisa é submetido.\nAtualiza a pesquisa e a URL quando o formulário é submetido.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousPage\n                        \n                    \n                \n            \n            \n                \npreviousPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/search/search.component.ts:282\n                        \n                    \n\n\n            \n                \n                        Retrocede para a página anterior de resultados.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processSearchResults\n                        \n                    \n                \n            \n            \n                \nprocessSearchResults(result: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/search/search.component.ts:233\n                        \n                    \n\n\n            \n                \n                        Processa os resultados da pesquisa.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                result\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Os resultados da pesquisa.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/search/search.component.ts:212\n                        \n                    \n\n\n            \n                \n                        Submete o formulário de pesquisa com os valores atuais e atualiza os resultados da pesquisa.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O número da página a ser exibida.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSearch\n                        \n                    \n                \n            \n            \n                \nupdateSearch(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/search/search.component.ts:190\n                        \n                    \n\n\n            \n                \n                        Atualiza os parâmetros de consulta da URL com os valores atuais do formulário de pesquisa.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.currentPage\n                                            \n\n                                            \n                                                    O número da página a ser exibida.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/media/search/search.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/media/search/search.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genresMovies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n      { \"id\": 28, \"name\": \"Action\" },\n      { \"id\": 12, \"name\": \"Adventure\" },\n      { \"id\": 16, \"name\": \"Animation\" },\n      { \"id\": 35, \"name\": \"Comedy\" },\n      { \"id\": 80, \"name\": \"Crime\" },\n      { \"id\": 99, \"name\": \"Documentary\" },\n      { \"id\": 18, \"name\": \"Drama\" },\n      { \"id\": 10751, \"name\": \"Family\" },\n      { \"id\": 14, \"name\": \"Fantasy\" },\n      { \"id\": 36, \"name\": \"History\" },\n      { \"id\": 27, \"name\": \"Horror\" },\n      { \"id\": 10402, \"name\": \"Music\" },\n      { \"id\": 9648, \"name\": \"Mystery\" },\n      { \"id\": 10749, \"name\": \"Romance\" },\n      { \"id\": 878, \"name\": \"Science Fiction\" },\n      { \"id\": 10770, \"name\": \"TV Movie\" },\n      { \"id\": 53, \"name\": \"Thriller\" },\n      { \"id\": 10752, \"name\": \"War\" },\n      { \"id\": 37, \"name\": \"Western\" }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/media/search/search.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genresSeries\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n      { \"id\": 10759, \"name\": \"Action & Adventure\" },\n      { \"id\": 16, \"name\": \"Animation\" },\n      { \"id\": 35, \"name\": \"Comedy\" },\n      { \"id\": 80, \"name\": \"Crime\" },\n      { \"id\": 99, \"name\": \"Documentary\" },\n      { \"id\": 18, \"name\": \"Drama\" },\n      { \"id\": 10751, \"name\": \"Family\" },\n      { \"id\": 10762, \"name\": \"Kids\" },\n      { \"id\": 9648, \"name\": \"Mystery\" },\n      { \"id\": 10763, \"name\": \"News\" },\n      { \"id\": 10764, \"name\": \"Reality\" },\n      { \"id\": 10765, \"name\": \"Sci-Fi & Fantasy\" },\n      { \"id\": 10766, \"name\": \"Soap\" },\n      { \"id\": 10767, \"name\": \"Talk\" },\n      { \"id\": 10768, \"name\": \"War & Politics\" },\n      { \"id\": 37, \"name\": \"Western\" }\n      // ...\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/media/search/search.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGenreSelected\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/media/search/search.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        originalSearchResult\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/media/search/search.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n      'movieName': new FormControl(''),\n      'type': new FormControl('movie'),\n      'total_pages': new FormControl()\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/media/search/search.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchResult\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/media/search/search.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedGenreId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/media/search/search.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        totalPagesArray\n                    \n                \n\n                \n                    \n                        gettotalPagesArray()\n                    \n                \n                            \n                                \n                                    Defined in src/app/media/search/search.component.ts:245\n                                \n                            \n                    \n                        \n                                Obtém um array com o número total de páginas disponíveis para exibição.\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        displayPages\n                    \n                \n\n                \n                    \n                        getdisplayPages()\n                    \n                \n                            \n                                \n                                    Defined in src/app/media/search/search.component.ts:253\n                                \n                            \n                    \n                        \n                                Obtém uma lista de páginas para exibição com base na página atual.\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n  import { Meta, Title } from '@angular/platform-browser';\n  import { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { SearchServiceComponent } from '../search-service/search-service.component';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MovieApiServiceComponent } from '../api/movie-api-service/movie-api-service.component';\n\n  @Component({\n    selector: 'app-search',\n    templateUrl: './search.component.html',\n    styleUrl: './search.component.css'\n  })\n\n\n  /**\n * Componente responsável por realizar pesquisas de filmes e séries.\n */\n  export class SearchComponent implements OnInit {\n\n    currentPage: any;\n    searchResult: any;\n    searchForm = new FormGroup({\n      'movieName': new FormControl(''),\n      'type': new FormControl('movie'),\n      'total_pages': new FormControl()\n    });\n\n    selectedGenreId: any;\n    isGenreSelected = false;\n    originalSearchResult: any;\n    currentFilter: any = null;\n\n\n    genresSeries = [\n      { \"id\": 10759, \"name\": \"Action & Adventure\" },\n      { \"id\": 16, \"name\": \"Animation\" },\n      { \"id\": 35, \"name\": \"Comedy\" },\n      { \"id\": 80, \"name\": \"Crime\" },\n      { \"id\": 99, \"name\": \"Documentary\" },\n      { \"id\": 18, \"name\": \"Drama\" },\n      { \"id\": 10751, \"name\": \"Family\" },\n      { \"id\": 10762, \"name\": \"Kids\" },\n      { \"id\": 9648, \"name\": \"Mystery\" },\n      { \"id\": 10763, \"name\": \"News\" },\n      { \"id\": 10764, \"name\": \"Reality\" },\n      { \"id\": 10765, \"name\": \"Sci-Fi & Fantasy\" },\n      { \"id\": 10766, \"name\": \"Soap\" },\n      { \"id\": 10767, \"name\": \"Talk\" },\n      { \"id\": 10768, \"name\": \"War & Politics\" },\n      { \"id\": 37, \"name\": \"Western\" }\n      // ...\n    ];\n\n    genresMovies = [\n      { \"id\": 28, \"name\": \"Action\" },\n      { \"id\": 12, \"name\": \"Adventure\" },\n      { \"id\": 16, \"name\": \"Animation\" },\n      { \"id\": 35, \"name\": \"Comedy\" },\n      { \"id\": 80, \"name\": \"Crime\" },\n      { \"id\": 99, \"name\": \"Documentary\" },\n      { \"id\": 18, \"name\": \"Drama\" },\n      { \"id\": 10751, \"name\": \"Family\" },\n      { \"id\": 14, \"name\": \"Fantasy\" },\n      { \"id\": 36, \"name\": \"History\" },\n      { \"id\": 27, \"name\": \"Horror\" },\n      { \"id\": 10402, \"name\": \"Music\" },\n      { \"id\": 9648, \"name\": \"Mystery\" },\n      { \"id\": 10749, \"name\": \"Romance\" },\n      { \"id\": 878, \"name\": \"Science Fiction\" },\n      { \"id\": 10770, \"name\": \"TV Movie\" },\n      { \"id\": 53, \"name\": \"Thriller\" },\n      { \"id\": 10752, \"name\": \"War\" },\n      { \"id\": 37, \"name\": \"Western\" }\n    ];\n\n\n     /**\n   * Construtor da classe SearchComponent.\n   * @param service O serviço de API de filmes.\n   * @param route O serviço de roteamento ativado.\n   * @param router O serviço de roteamento.\n   * @param title O serviço para definir o título da página.\n   * @param meta O serviço para manipular meta tags HTML.\n   * @param formBuilder O construtor de formulários reativos.\n   * @param searchService O serviço de pesquisa.\n   */\n    constructor(private service: MovieApiServiceComponent, private route: ActivatedRoute,\n      private router: Router, private title: Title, private meta: Meta, private formBuilder: FormBuilder, private searchService: SearchServiceComponent) {\n\n\n      this.searchForm = new FormGroup({\n        'movieName': new FormControl(''),\n        'type': new FormControl(''), // Remova o valor padrão aqui\n        'total_pages': new FormControl()\n      });\n\n    }\n\n     /**\n   * Método executado quando o formulário de pesquisa é submetido.\n   * Atualiza a pesquisa e a URL quando o formulário é submetido.\n   */\n    onSearch(): void {\n      // Atualiza a pesquisa e a URL quando o formulário é submetido.\n      this.updateSearch(1);\n      this.submitForm(1);// Isso atualizará a URL e submeterá a forma com a primeira página.\n    }\n\n\n    changeType(newType: string): void {\n      // Se o novo tipo for diferente do atual, então atualize o formulário e faça uma nova busca.\n      if (this.searchForm.value.type !== newType) {\n        this.searchForm.controls['type'].setValue(newType);\n\n        // Resetar estados relacionados se necessário\n        this.isGenreSelected = false;\n        this.selectedGenreId = null;\n        this.currentFilter = null; // Reseta o filtro de gênero\n\n        \n        this.updateSearch(1); // Passa '1' para resetar para a primeira página após mudança de tipo.\n        this.submitForm(1); // Passa '1' para resetar para a primeira página após mudança de tipo.\n\n      }\n    }\n\n  \n    ngOnInit() {\n      this.route.queryParams.subscribe(params => {\n        const genreId = params['genre'];\n        const title = params['title'];\n        const type = params['type'] || this.searchForm.value.type || 'movie'; // Usa o valor da URL ou o valor anterior ou 'movie' como último recurso\n        const page = parseInt(params['page'], 10) || 1;\n\n        let shouldUpdateSearch = false;\n\n        if (page !== this.currentPage || genreId !== this.selectedGenreId?.toString() || title !== this.searchForm.value.movieName || type !== this.searchForm.value.type) {\n          shouldUpdateSearch = true;\n          this.currentPage = page;\n          this.selectedGenreId = genreId ? parseInt(genreId, 10) : null;\n          this.isGenreSelected = !!genreId;\n          this.searchForm.setValue({\n            movieName: title || '',\n            type: type,\n            total_pages: this.searchForm.get('total_pages')?.value || 0\n          });\n        }\n\n        if (shouldUpdateSearch) {\n          this.submitForm(this.currentPage);\n        }\n      });\n    }\n\n\n      /**\n   * Filtra os resultados da pesquisa por gênero.\n   * @param genreId O ID do gênero a ser filtrado.\n   */\n    filterByGenre(genreId: number) {\n      if (this.selectedGenreId === genreId) {\n        // Se o gênero selecionado é o mesmo que o gênero atualmente filtrado,\n        // remova o filtro e retorne todos os resultados da pesquisa original.\n        this.isGenreSelected = false;\n        this.selectedGenreId = null;\n        this.currentFilter = null;\n      } else {\n        // Caso contrário, aplique o filtro como antes.\n        this.isGenreSelected = true;\n        this.selectedGenreId = genreId;\n        this.currentFilter = genreId;\n      }\n      this.applyCurrentFilter();\n      this.updateSearch(1);\n\n    }\n\n\n      /**\n   * Aplica o filtro de pesquisa atual aos resultados da pesquisa.\n   */\n    applyCurrentFilter() {\n      this.searchResult = this.currentFilter ? this.originalSearchResult.filter((result: any) => result.genre_ids.includes(this.currentFilter)) : [...this.originalSearchResult];\n    }\n\n /**\n   * Atualiza os parâmetros de consulta da URL com os valores atuais do formulário de pesquisa.\n   * @param page O número da página a ser exibida.\n   */\n    updateSearch(page: number = this.currentPage): void {\n      const title = this.searchForm.get('movieName')?.value;\n      const type = this.searchForm.get('type')?.value; // Isso agora incluirá 'movie' ou 'serie'\n\n      // Navega para a mesma rota mas com os parâmetros de consulta atualizados.\n      this.router.navigate([], {\n        relativeTo: this.route,\n        queryParams: {\n          title: title || null,\n          type: type, // Garanta que o tipo atualizado seja refletido na URL.\n          page: page || null,\n          genre: this.selectedGenreId || null\n        },\n        queryParamsHandling: 'merge', // Mescla com outros queryParams existentes.\n      });\n    }\n\n\n     /**\n   * Submete o formulário de pesquisa com os valores atuais e atualiza os resultados da pesquisa.\n   * @param page O número da página a ser exibida.\n   */\n    submitForm(page: number): void {\n      this.currentPage = page;\n      const searchValue = { ...this.searchForm.value, page };\n\n      // Chamada de serviço baseada no tipo; ajuste conforme seu caso de uso\n      if (searchValue.type === 'serie') {\n        this.service.getSearchSerie(searchValue).subscribe((result) => {\n          this.processSearchResults(result);\n        });\n      } else {\n        this.service.getSearchMovie(searchValue).subscribe((result) => {\n          this.processSearchResults(result);\n        });\n      }\n    }\n\n\n    /**\n * Processa os resultados da pesquisa.\n * @param result Os resultados da pesquisa.\n */\n    processSearchResults(result: any): void { // Ajuste o tipo 'any' conforme necessário\n      this.originalSearchResult = [...result.results];\n      this.applyCurrentFilter(); // Aplica filtro atual aos novos resultados\n      this.searchForm.patchValue({ total_pages: result.total_pages });\n    }\n  \n\n\n/**\n * Obtém um array com o número total de páginas disponíveis para exibição.\n * @returns Um array contendo o número total de páginas.\n */\n    get totalPagesArray() {\n      return Array.from({ length: this.searchForm.value.total_pages }, (_, i) => i + 1);\n    }\n\n    /**\n * Obtém uma lista de páginas para exibição com base na página atual.\n * @returns Uma lista de páginas para exibição.\n */\n    get displayPages() {\n      let start = this.currentPage - 1;\n      let end = this.currentPage + 2;\n\n      if (start  this.totalPagesArray.length) {\n        end = this.totalPagesArray.length;\n        start = end - 3 > 0 ? end - 3 : 1;\n      }\n\n      return this.totalPagesArray.slice(start - 1, end);\n    }\n\n    /**\n * Avança para a próxima página de resultados.\n */\nnextPage(): void {\n  const newPage = this.currentPage + 1;\n  // Certifique-se de que newPage não exceda totalPages\n  this.updateSearch(newPage);\n}\n\n/**\n * Retrocede para a página anterior de resultados.\n */\npreviousPage(): void {\n  const newPage = this.currentPage - 1;\n  // Certifique-se de que newPage seja pelo menos 1\n  this.updateSearch(newPage);\n}\n  }\n\n    \n\n    \n        \n  \n    \n      \n        \n        Procurar\n      \n    \n\n    \n      \n        Resultados da Pesquisa\n        \n          \n            \n              \n              Filmes\n            \n            \n              \n              Series\n            \n            \n              Utilizadores\n            \n          \n        \n      \n      \n        \n         Dica: O utilizador pode pesquisar pelo nome original do filme, mesmo que esse nao seja do mesmo idioma da pagina. Exemplo: '기생충' (Parasite).\n      \n\n      \n\n      \n        Categorias\n        \n          \n            \n            \n              \n                {{genre.name}}\n              \n            \n            \n              \n                {{genre.name}}\n              \n            \n          \n        \n      \n\n    \n    \n      \n        \n          \n            \n              \n              \n                \n              \n            \n            \n              \n                {{media.name}}\n                {{media.first_air_date}}\n                {{media.overview | slice:0:250}}...\n              \n              \n                {{media.title}}\n                {{media.release_date}}\n                {{media.overview | slice:0:250}}...\n              \n            \n          \n        \n        \n           1\" (click)=\"updateSearch(currentPage - 1)\">&lt;\n          {{ page }}\n          &gt;\n        \n\n\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Procurar                            Resultados da Pesquisa                                                          Filmes                                                    Series                                      Utilizadores                                                           Dica: O utilizador pode pesquisar pelo nome original do filme, mesmo que esse nao seja do mesmo idioma da pagina. Exemplo: \\'기생충\\' (Parasite).                          Categorias                                                                        {{genre.name}}                                                                    {{genre.name}}                                                                                                                                                                                                              {{media.name}}                {{media.first_air_date}}                {{media.overview | slice:0:250}}...                                            {{media.title}}                {{media.release_date}}                {{media.overview | slice:0:250}}...                                                               1\" (click)=\"updateSearch(currentPage - 1)\">          {{ page }}          >                    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminStatisticsComponent', 'selector': 'app-admin-statistics'},{'name': 'AllMoviesPageComponent', 'selector': 'app-all-movies-page'},{'name': 'AllSeriesPageComponent', 'selector': 'app-all-series-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'authentication-button'},{'name': 'BlockedAccountComponent', 'selector': 'app-blocked-account'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GamificationComponent', 'selector': 'app-gamification'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MovieDetailsComponent', 'selector': 'app-movie-details'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'PendingVerificationComponent', 'selector': 'app-pending-verification'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterWithThirdPartyComponent', 'selector': 'app-register-with-third-party'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchServiceComponent', 'selector': 'app-search-service'},{'name': 'SeasonDetailsComponent', 'selector': 'app-season-details'},{'name': 'SeasonDetailsInfoComponent', 'selector': 'app-season-details-info'},{'name': 'SendEmailComponent', 'selector': 'app-send-email'},{'name': 'SeriesDetailsComponent', 'selector': 'app-series-details'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'SuspendedAccountComponent', 'selector': 'app-suspended-account'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchServiceComponent.html":{"url":"components/SearchServiceComponent.html","title":"component - SearchServiceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchServiceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/media/search-service/search-service.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-service\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./search-service.component.html\n            \n\n\n\n            \n                styleUrl\n                ./search-service.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSearchQuery\n                            \n                            \n                                    Private\n                                searchQuerySource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSearchQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/media/search-service/search-service.component.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeSearchQuery\n                        \n                    \n                \n            \n            \n                \nchangeSearchQuery(searchQuery: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/media/search-service/search-service.component.ts:23\n                        \n                    \n\n\n            \n                \n                        Atualiza a consulta de pesquisa atual com uma nova consulta.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                searchQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    A nova consulta de pesquisa a ser definida.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentSearchQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.searchQuerySource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/media/search-service/search-service.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        searchQuerySource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/media/search-service/search-service.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-search-service',\n  templateUrl: './search-service.component.html',\n  styleUrl: './search-service.component.css'\n})\n\n/**\n * Um serviço que fornece funcionalidade para gerenciar consultas de pesquisa.\n */\nexport class SearchServiceComponent {\n  private searchQuerySource = new BehaviorSubject('');\n  currentSearchQuery = this.searchQuerySource.asObservable();\n\n  constructor() { }\n\n    /**\n   * Atualiza a consulta de pesquisa atual com uma nova consulta.\n   * @param searchQuery A nova consulta de pesquisa a ser definida.\n   */\n  changeSearchQuery(searchQuery: string) {\n    console.log('changeSearchQuery called with:', searchQuery);  // Adicione esta linha\n    this.searchQuerySource.next(searchQuery);\n  }\n}\n\n    \n\n    \n        search-service works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'search-service works!'\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminStatisticsComponent', 'selector': 'app-admin-statistics'},{'name': 'AllMoviesPageComponent', 'selector': 'app-all-movies-page'},{'name': 'AllSeriesPageComponent', 'selector': 'app-all-series-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'authentication-button'},{'name': 'BlockedAccountComponent', 'selector': 'app-blocked-account'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GamificationComponent', 'selector': 'app-gamification'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MovieDetailsComponent', 'selector': 'app-movie-details'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'PendingVerificationComponent', 'selector': 'app-pending-verification'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterWithThirdPartyComponent', 'selector': 'app-register-with-third-party'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchServiceComponent', 'selector': 'app-search-service'},{'name': 'SeasonDetailsComponent', 'selector': 'app-season-details'},{'name': 'SeasonDetailsInfoComponent', 'selector': 'app-season-details-info'},{'name': 'SendEmailComponent', 'selector': 'app-send-email'},{'name': 'SeriesDetailsComponent', 'selector': 'app-series-details'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'SuspendedAccountComponent', 'selector': 'app-suspended-account'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchServiceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SeasonDetailsComponent.html":{"url":"components/SeasonDetailsComponent.html","title":"component - SeasonDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SeasonDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/season-details/season-details.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-season-details\n            \n\n\n\n            \n                styleUrls\n                ./season-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./season-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getSerieDetailsResult\n                            \n                            \n                                    \n                                    Optional\n                                lastSeason\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSerieDetails\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                scrollToLastSeason\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: MovieApiServiceComponent, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/season-details/season-details.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        MovieApiServiceComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSerieDetails\n                        \n                    \n                \n            \n            \n                \ngetSerieDetails(id: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/season-details/season-details.component.ts:35\n                        \n                    \n\n\n            \n                \n                        Get the details of a series.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the series.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/season-details/season-details.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/season-details/season-details.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollToLastSeason\n                        \n                    \n                \n            \n            \n                \nscrollToLastSeason()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/season-details/season-details.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Scroll to the last season of the series.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getSerieDetailsResult\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/season-details/season-details.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        lastSeason\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('lastSeason')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/season-details/season-details.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MovieApiServiceComponent } from '../media/api/movie-api-service/movie-api-service.component';\n\n@Component({\n  selector: 'app-season-details',\n  templateUrl: './season-details.component.html',\n  styleUrls: ['./season-details.component.css']\n})\nexport class SeasonDetailsComponent implements AfterViewInit {\n\n  getSerieDetailsResult: any;\n  @ViewChild('lastSeason') lastSeason?: ElementRef;\n\n  constructor(\n    private service: MovieApiServiceComponent,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    const getParamId = this.route.snapshot.paramMap.get('id');\n    if (getParamId) {\n      this.getSerieDetails(getParamId);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    // Já que a chamada de rolar a tela depende dos dados carregados, movemos isso para getSerieDetails\n  }\n\n  /**\n   * Get the details of a series.\n   * @param id The ID of the series.\n   */\n  getSerieDetails(id: any) {\n    this.service.getSerieDetails(id).subscribe(result => {\n      this.getSerieDetailsResult = result;\n      // Após carregar os detalhes da série, verifique se precisamos rolar para a última temporada\n      if (this.route.snapshot.queryParamMap.get('scrollToLastSeason') === 'true') {\n        setTimeout(() => this.scrollToLastSeason(), 0); // Timeout para garantir que a view esteja atualizada\n      }\n    });\n  }\n\n   /**\n   * Scroll to the last season of the series.\n   */\n  scrollToLastSeason(): void {\n    if (this.lastSeason) {\n      const element = this.lastSeason.nativeElement;\n      const offset = element.offsetTop;\n      const offsetWithMargin = offset - (window.innerHeight - element.offsetHeight);\n      window.scrollTo({ top: offsetWithMargin, behavior: 'smooth' });\n    }\n  }\n}\n\n    \n\n    \n        \n      \n        \n          \n          \n          \n\n            \n              \n              \n                \n                   Voltar\n                \n              \n              {{ getSerieDetailsResult.name }}\n              {{ getSerieDetailsResult.tagline }}\n\n            \n          \n\n          Temporadas\n          \n            \n              \n              \n                \n                \n                  \n                \n              \n              \n                 {{ season.name }}\n                Número de Episódios: {{ season.episode_count }}\n                Data de Lançamento: {{ season.air_date || '-' }}\n                Sinopse: {{ season.overview }}\n                \n                  Sinopse: Esta é a temporada {{ season.season_number }} da série \"{{ getSerieDetailsResult?.name }}\".\n                \n                 0\">\n                  Classificação Geral dos Utilizadores: {{ season.vote_average }}\n                \n                Ver detalhes da temporada\n              \n            \n            \n              \n              \n                \n                \n                  \n                \n              \n              \n                 {{ season.name }}\n                Número de Episódios: {{ season.episode_count }}\n                Data de Lançamento: {{ season.air_date || '-' }}\n                Sinopse: {{ season.overview }}\n                \n                  Sinopse: Esta é a temporada {{ season.season_number }} da série \"{{ getSerieDetailsResult?.name }}\".\n                \n                 0\">\n                  Classificação Geral dos Utilizadores: {{ season.vote_average }}\n                \n                Ver detalhes da temporada\n              \n            \n          \n\n        \n\n        \n        \n\n\n\n    \n\n    \n                \n                    ./season-details.component.css\n                \n                .container.bg-white {\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 8px;\n  margin-top: 20px;\n}\n\n.movie-page-box {\n  margin: auto;\n  padding: 20px;\n}\n\n.season-container {\n  display: flex;\n  align-items: center; /* Alinha os itens ao centro verticalmente */\n  margin-bottom: 20px;\n  border: 1px solid #ccc; /* Acrescenta um border cinza discreto */\n  box-shadow: 0 2px 5px rgba(0,0,0,0.1); /* Acrescenta uma sombra suave */\n  border-radius: 5px; /* Bordas arredondadas */\n  background-color: white; /* Fundo branco */\n}\n\n.movie-page-box {\n  margin: auto;\n  padding: 20px;\n  background-color: white; /* Fundo branco para o container principal */\n  border-radius: 8px; /* Bordas arredondadas para o container principal */\n}\n\n/* Pode aplicar a mesma sombra a outros containers que você deseja destacar */\n.white_container, .settings_panel, .genre_tab, .row.mb-4.shadow-sm {\n  background-color: #ffffff;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  overflow: hidden; /* Para manter todo o conteúdo dentro dos limites do container */\n}\n\n.season-image-container {\n  padding: 15px; /* Espaçamento interno para a imagem não tocar as bordas */\n  text-align: center; /* Centraliza a imagem horizontalmente */\n}\n\n.season-poster-image {\n  height: auto; /* Altura automática para manter a proporção */\n  max-width: 100%; /* Garante que a imagem não exceda o container */\n  border-radius: 5px; /* Bordas arredondadas para a imagem */\n}\n\n.season-info {\n  flex: 1; /* Ocupa o restante do espaço */\n  padding: 20px; /* Espaçamento interno para o texto */\n}\n\n.btn-primary {\n  margin-top: 10px; /* Espaço acima do botão */\n  box-shadow: 0 2px 5px rgba(0,0,0,0.1); /* Acrescenta uma sombra suave ao botão */\n}\n\n.btn-secondary {\n  box-shadow: 0 2px 5px rgba(0,0,0,0.1); /* Acrescenta uma sombra suave ao botão */\n}\n  .season-info h3, .season-info p {\n    margin-bottom: 10px; /* Espaçamento entre os elementos */\n  }\n\n\n\n.btn-secondary {\n  display: inline-flex;\n  align-items: center;\n  gap: 8px; /* Espaço entre o ícone e o texto */\n  padding: 10px 20px; /* Ajuste conforme necessário */\n  border-radius: 5px; /* Bordas arredondadas */\n  background-color: #4CAEFE; /* Cor de fundo do botão */\n  color: white; /* Cor do texto */\n}\n\n  .btn-secondary i {\n    margin-right: 5px; /* Espaço entre o ícone e o texto */\n  }\n\n.btn-primary {\n  background-color: #4CAEFE;\n  color: white;\n  border-radius: 4px;\n  padding: 8px 12px;\n  text-align: center;\n  display: inline-block;\n  text-decoration: none;\n  transition: background-color 0.2s;\n}\n\n  .btn-primary:hover {\n    background-color: #007bff;\n  }\n\n@media (max-width: 768px) {\n  .season-container {\n    flex-direction: column; /* Muda a direção dos itens para coluna em dispositivos menores */\n    align-items: center; /* Centraliza os itens no container */\n  }\n\n  .season-image-container {\n    margin-bottom: 15px; /* Adiciona espaço abaixo da imagem em dispositivos menores */\n  }\n\n  .season-info p, .season-info h3 {\n    color: #495057; /* Cor cinza escuro para texto */\n  }\n}\n.back-navigation-container {\n  display: flex;\n  align-items: center;\n  background-color: #f0f0f0; /* Cor de fundo */\n  padding: 10px; /* Espaçamento interno */\n  border-radius: 8px; /* Bordas arredondadas */\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1); /* Sombra */\n}\n\n.series-poster {\n  width: 60px; /* Largura da imagem */\n  margin-right: 20px; /* Espaçamento entre a imagem e o texto */\n  border-radius: 4px; /* Bordas arredondadas da imagem */\n}\n\n.navigation-info h2 {\n  margin: 0; /* Remove margem padrão */\n  color: #333; /* Cor do texto */\n  font-size: 24px; /* Tamanho do texto */\n}\n\n.back-link {\n  display: inline-flex; /* Exibe como flex inline */\n  align-items: center; /* Alinha itens verticalmente */\n  color: #007bff; /* Cor do link */\n  text-decoration: none; /* Remove sublinhado do link */\n  font-size: 16px; /* Tamanho do texto */\n  gap: 8px; /* Espaço entre ícone e texto */\n}\n\n  .back-link:hover {\n    text-decoration: underline; /* Sublinha ao passar o mouse */\n  }\n\n.d-flex {\n  display: flex !important;\n  align-content: center;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n}\n.container.bg-white[_ngcontent-ng-c4128739590] {\n  background-color: #fff;\n  /* padding: 20px; */\n  border-radius: 8px;\n  /* margin-top: 20px; */\n}\n\n.container.bg-white {\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.backdrop-with-poster {\n  position: relative;\n  text-align: center;\n}\n\n.backdrop-image {\n  width: 100%;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.poster-overlay {\n  position: absolute;\n  top: 10px; /* Ajuste conforme necessário */\n  left: 10px; /* Ajuste conforme necessário */\n  display: flex;\n  align-items: center;\n}\n\n.poster-image {\n  width: 120px; /* Ajuste o tamanho conforme necessário */\n  margin-right: 20px;\n}\n.serie-title {\n  color: black; /* Azul */\n  font-weight: bold;\n}\n\n.season-info h3 {\n  color: #4CAEFE; /* Cor azul para títulos */\n}\n\n.serie-tagline {\n    font-size:19px;\n}\n\n\n.backdrop-image[_ngcontent-ng-c2959465852] {\n  width: 100%;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  opacity:0.8;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                       Voltar                                            {{ getSerieDetailsResult.name }}              {{ getSerieDetailsResult.tagline }}                                Temporadas                                                                                                                                                                 {{ season.name }}                Número de Episódios: {{ season.episode_count }}                Data de Lançamento: {{ season.air_date || \\'-\\' }}                Sinopse: {{ season.overview }}                                  Sinopse: Esta é a temporada {{ season.season_number }} da série \"{{ getSerieDetailsResult?.name }}\".                                 0\">                  Classificação Geral dos Utilizadores: {{ season.vote_average }}                                Ver detalhes da temporada                                                                                                                                                                                 {{ season.name }}                Número de Episódios: {{ season.episode_count }}                Data de Lançamento: {{ season.air_date || \\'-\\' }}                Sinopse: {{ season.overview }}                                  Sinopse: Esta é a temporada {{ season.season_number }} da série \"{{ getSerieDetailsResult?.name }}\".                                 0\">                  Classificação Geral dos Utilizadores: {{ season.vote_average }}                                Ver detalhes da temporada                                                            '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminStatisticsComponent', 'selector': 'app-admin-statistics'},{'name': 'AllMoviesPageComponent', 'selector': 'app-all-movies-page'},{'name': 'AllSeriesPageComponent', 'selector': 'app-all-series-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'authentication-button'},{'name': 'BlockedAccountComponent', 'selector': 'app-blocked-account'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GamificationComponent', 'selector': 'app-gamification'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MovieDetailsComponent', 'selector': 'app-movie-details'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'PendingVerificationComponent', 'selector': 'app-pending-verification'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterWithThirdPartyComponent', 'selector': 'app-register-with-third-party'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchServiceComponent', 'selector': 'app-search-service'},{'name': 'SeasonDetailsComponent', 'selector': 'app-season-details'},{'name': 'SeasonDetailsInfoComponent', 'selector': 'app-season-details-info'},{'name': 'SendEmailComponent', 'selector': 'app-send-email'},{'name': 'SeriesDetailsComponent', 'selector': 'app-series-details'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'SuspendedAccountComponent', 'selector': 'app-suspended-account'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SeasonDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SeasonDetailsInfoComponent.html":{"url":"components/SeasonDetailsInfoComponent.html","title":"component - SeasonDetailsInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SeasonDetailsInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/season-details-info/season-details-info.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-season-details-info\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./season-details-info.component.html\n            \n\n\n\n            \n                styleUrl\n                ./season-details-info.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getSerieDetailsResult\n                            \n                            \n                                getSerieSeasonDetailsResult\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSeasonDetails\n                            \n                            \n                                getSerieDetails\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: MovieApiServiceComponent, router: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/season-details-info/season-details-info.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        MovieApiServiceComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSeasonDetails\n                        \n                    \n                \n            \n            \n                \ngetSeasonDetails(id: any, seasonNumber: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/season-details-info/season-details-info.component.ts:30\n                        \n                    \n\n\n            \n                \n                        Obtém os detalhes da temporada de uma série.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O ID da série.\n\n                                            \n                                        \n                                        \n                                                seasonNumber\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O número da temporada.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSerieDetails\n                        \n                    \n                \n            \n            \n                \ngetSerieDetails(id: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/season-details-info/season-details-info.component.ts:44\n                        \n                    \n\n\n            \n                \n                        Obtém os detalhes de uma série.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    O ID da série.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/season-details-info/season-details-info.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getSerieDetailsResult\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/season-details-info/season-details-info.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSerieSeasonDetailsResult\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/season-details-info/season-details-info.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MovieApiServiceComponent } from '../media/api/movie-api-service/movie-api-service.component';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-season-details-info',\n  templateUrl: './season-details-info.component.html',\n  styleUrl: './season-details-info.component.css'\n})\nexport class SeasonDetailsInfoComponent {\n  constructor(private service: MovieApiServiceComponent, private router: ActivatedRoute) { }\n\n  getSerieDetailsResult: any;\n  getSerieSeasonDetailsResult: any;\n\n  ngOnInit(): void {\n    const getParamId = this.router.snapshot.paramMap.get('id');\n    const seasonNumber = this.router.snapshot.paramMap.get('seasonNumber');\n    console.log(getParamId, 'getparamid#');\n\n    this.getSeasonDetails(getParamId, seasonNumber);\n    this.getSerieDetails(getParamId);\n  }\n\n  /**\n   * Obtém os detalhes da temporada de uma série.\n   * @param id O ID da série.\n   * @param seasonNumber O número da temporada.\n   */\n  getSeasonDetails(id: any, seasonNumber: any) {\n    this.service.getSerieSeasonInfo(id, seasonNumber).subscribe({\n      next: (data) => {\n        console.log(data);\n        this.getSerieSeasonDetailsResult = data;\n      },\n      error: (error) => console.error('Erro ao buscar informações da temporada:', error)\n    });\n  }\n\n   /**\n   * Obtém os detalhes de uma série.\n   * @param id O ID da série.\n   */\n  getSerieDetails(id: any) {\n    this.service.getSerieDetails(id).subscribe(async (result) => {\n      console.log(result, 'serie#');\n      this.getSerieDetailsResult = result;\n    });\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n    \n      \n         Voltar\n      \n      \n        {{ getSerieSeasonDetailsResult.name }}\n        {{ getSerieDetailsResult.tagline }}\n      \n    \n  \n\n  \n  Episódios\n\n  \n  \n    \n      \n      \n        \n      \n    \n    \n      {{ episode.episode_number }}. {{ episode.name }}\n      Temporada: {{ episode.season_number }}\n      Episódio: {{ episode.episode_number }}\n      Data de Exibição: {{ episode.air_date || '-' }}\n      Sinopse: {{ episode.overview }}\n      \n        Sinopse: Detalhes não disponíveis.\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                     Voltar                    {{ getSerieSeasonDetailsResult.name }}        {{ getSerieDetailsResult.tagline }}                Episódios                                                {{ episode.episode_number }}. {{ episode.name }}      Temporada: {{ episode.season_number }}      Episódio: {{ episode.episode_number }}      Data de Exibição: {{ episode.air_date || \\'-\\' }}      Sinopse: {{ episode.overview }}              Sinopse: Detalhes não disponíveis.            '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminStatisticsComponent', 'selector': 'app-admin-statistics'},{'name': 'AllMoviesPageComponent', 'selector': 'app-all-movies-page'},{'name': 'AllSeriesPageComponent', 'selector': 'app-all-series-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'authentication-button'},{'name': 'BlockedAccountComponent', 'selector': 'app-blocked-account'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GamificationComponent', 'selector': 'app-gamification'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MovieDetailsComponent', 'selector': 'app-movie-details'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'PendingVerificationComponent', 'selector': 'app-pending-verification'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterWithThirdPartyComponent', 'selector': 'app-register-with-third-party'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchServiceComponent', 'selector': 'app-search-service'},{'name': 'SeasonDetailsComponent', 'selector': 'app-season-details'},{'name': 'SeasonDetailsInfoComponent', 'selector': 'app-season-details-info'},{'name': 'SendEmailComponent', 'selector': 'app-send-email'},{'name': 'SeriesDetailsComponent', 'selector': 'app-series-details'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'SuspendedAccountComponent', 'selector': 'app-suspended-account'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SeasonDetailsInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SendEmailComponent.html":{"url":"components/SendEmailComponent.html","title":"component - SendEmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SendEmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/authentication/send-email/send-email.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente responsável por enviar e-mails de confirmação de conta ou recuperação de senha.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-send-email\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./send-email.component.html\n            \n\n\n\n            \n                styleUrl\n                ./send-email.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailForm\n                            \n                            \n                                emailValue\n                            \n                            \n                                errorMessages\n                            \n                            \n                                mode\n                            \n                            \n                                submitted\n                            \n                            \n                                submittedValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                initializeForm\n                            \n                            \n                                isFieldModified\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                saveSubmittedValues\n                            \n                            \n                                sendEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, formBuilder: FormBuilder, router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/authentication/send-email/send-email.component.ts:24\n                            \n                        \n\n                \n                    \n                            Construtor para inicializar dependências.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço de autenticação para gerenciar ações relacionadas a e-mails.\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Construtor de formulários para criação de formulários reativos.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço do router para navegação.\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Serviço para acesso aos parâmetros da rota ativa.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/send-email/send-email.component.ts:127\n                        \n                    \n\n\n            \n                \n                        Cancela a operação de envio de e-mail e redireciona o usuário para a página de login.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeForm\n                        \n                    \n                \n            \n            \n                \ninitializeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/send-email/send-email.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Define o formulário de e-mail com validações necessárias.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldModified\n                        \n                    \n                \n            \n            \n                \nisFieldModified(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/send-email/send-email.component.ts:113\n                        \n                    \n\n\n            \n                \n                        Verifica se um campo específico do formulário foi modificado em relação ao valor originalmente submetido.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nome do campo a ser verificado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Booleano indicando se o campo foi modificado ou não.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/send-email/send-email.component.ts:44\n                        \n                    \n\n\n            \n                \n                        Inicializa o componente configurando o formulário e determinando o modo de operação a partir dos parâmetros da rota.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveSubmittedValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveSubmittedValues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/send-email/send-email.component.ts:120\n                        \n                    \n\n\n            \n                \n                        Salva os valores submetidos do formulário para referência futura.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendEmail\n                        \n                    \n                \n            \n            \n                \nsendEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/send-email/send-email.component.ts:72\n                        \n                    \n\n\n            \n                \n                        Processa a submissão do formulário de e-mail, validando e enviando os dados para a ação especificada pelo modo.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        emailForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/send-email/send-email.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/send-email/send-email.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/send-email/send-email.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/send-email/send-email.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/send-email/send-email.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submittedValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/send-email/send-email.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from '../models/user';\nimport { take } from 'rxjs';\n\n/**\n * Componente responsável por enviar e-mails de confirmação de conta ou recuperação de senha.\n *\n * @Component Decorador que define a classe como um componente Angular, especificando o seletor, template HTML e arquivo de estilo.\n */\n@Component({\n  selector: 'app-send-email',\n  templateUrl: './send-email.component.html',\n  styleUrl: './send-email.component.css'\n})\nexport class SendEmailComponent implements OnInit{\n  emailForm: FormGroup = new FormGroup({});\n  submitted = false;\n  mode: string | undefined;\n  errorMessages: any = {};\n  submittedValues: any = {};\n  emailValue: string = \"\";\n\n\n  /**\n   * Construtor para inicializar dependências.\n   *\n   * @param authService Serviço de autenticação para gerenciar ações relacionadas a e-mails.\n   * @param formBuilder Construtor de formulários para criação de formulários reativos.\n   * @param router Serviço do router para navegação.\n   * @param activatedRoute Serviço para acesso aos parâmetros da rota ativa.\n   */\n  constructor(private authService: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private activatedRoute : ActivatedRoute,\n  ) {}\n\n  /**\n   * Inicializa o componente configurando o formulário e determinando o modo de operação a partir dos parâmetros da rota.\n   */\n  ngOnInit(): void {\n    this.authService.user$.pipe(take(1)).subscribe({\n      next: (user: User | null) => {\n        if (user) {\n          this.router.navigateByUrl('/home');\n        } else {\n          const mode = this.activatedRoute.snapshot.paramMap.get('mode');\n          if (mode) {\n            this.mode = mode;\n            this.initializeForm();\n          }\n        }\n      }\n    })\n  }\n\n  /**\n   * Define o formulário de e-mail com validações necessárias.\n   */\n  initializeForm() {\n    this.emailForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n    })\n  }\n\n  /**\n   * Processa a submissão do formulário de e-mail, validando e enviando os dados para a ação especificada pelo modo.\n   */\n  sendEmail() {\n    this.submitted = true;\n    this.errorMessages = [];\n\n    if (this.emailForm.valid && this.mode) {\n      this.emailValue = this.emailForm.get('email')?.value;\n      if (this.mode.includes('resend-email-confirmation-link')) {\n        this.authService.resendEmailConfirmationLink(this.emailValue).subscribe({\n          next: (response: any) => {\n            this.router.navigateByUrl('/account/login');\n          },\n          error: error => {\n            if (error.error) {\n              this.errorMessages[error.error.field] = error.error.message;\n              this.saveSubmittedValues();\n            }\n          }\n        });\n      }\n      else if (this.mode.includes('forgot-password')) {\n        this.authService.forgotPassword(this.emailValue).subscribe({\n          next: (response: any) => {\n            this.router.navigateByUrl('/account/login');\n          },\n          error: error => {\n            if (error.error) {\n              this.errorMessages[error.error.field] = error.error.message;\n              this.saveSubmittedValues();\n            }\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * Verifica se um campo específico do formulário foi modificado em relação ao valor originalmente submetido.\n   *\n   * @param fieldName Nome do campo a ser verificado.\n   * @returns Booleano indicando se o campo foi modificado ou não.\n   */\n  isFieldModified(fieldName: string) {\n    return this.emailForm.get(fieldName)!.value !== this.submittedValues[fieldName];\n  }\n\n  /**\n   * Salva os valores submetidos do formulário para referência futura.\n   */\n  private saveSubmittedValues(): void {\n    this.submittedValues[\"email\"] = this.emailValue;\n  }\n\n  /**\n   * Cancela a operação de envio de e-mail e redireciona o usuário para a página de login.\n   */\n  cancel() {\n    this.router.navigateByUrl('/account/login');\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n    \n      \n        Insira o seu email para podermos reenviar a confirmação.\n      \n      \n        \n        \n      \n\n      \n        \n          O email é obrigatório!\n        \n        \n          A nomenclatura do email está incorreta!\n        \n        \n          {{ errorMessages['Email'] }}\n        \n      \n\n      \n      \n    \n  \n\n\n\n  \n  \n\n    \n      \n        Insira o seu email para podermos enviar o link para alteração da palavra passe.\n      \n      \n        \n        \n      \n\n      \n        \n          O email é obrigatório!\n        \n        \n          A nomenclatura do email está incorreta!\n        \n        \n          {{ errorMessages['Email'] }}\n        \n      \n\n      \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Insira o seu email para podermos reenviar a confirmação.                                                          O email é obrigatório!                          A nomenclatura do email está incorreta!                          {{ errorMessages[\\'Email\\'] }}                                                      Insira o seu email para podermos enviar o link para alteração da palavra passe.                                                          O email é obrigatório!                          A nomenclatura do email está incorreta!                          {{ errorMessages[\\'Email\\'] }}                                '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminStatisticsComponent', 'selector': 'app-admin-statistics'},{'name': 'AllMoviesPageComponent', 'selector': 'app-all-movies-page'},{'name': 'AllSeriesPageComponent', 'selector': 'app-all-series-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'authentication-button'},{'name': 'BlockedAccountComponent', 'selector': 'app-blocked-account'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GamificationComponent', 'selector': 'app-gamification'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MovieDetailsComponent', 'selector': 'app-movie-details'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'PendingVerificationComponent', 'selector': 'app-pending-verification'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterWithThirdPartyComponent', 'selector': 'app-register-with-third-party'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchServiceComponent', 'selector': 'app-search-service'},{'name': 'SeasonDetailsComponent', 'selector': 'app-season-details'},{'name': 'SeasonDetailsInfoComponent', 'selector': 'app-season-details-info'},{'name': 'SendEmailComponent', 'selector': 'app-send-email'},{'name': 'SeriesDetailsComponent', 'selector': 'app-series-details'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'SuspendedAccountComponent', 'selector': 'app-suspended-account'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SendEmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SuspendedAccountComponent.html":{"url":"components/SuspendedAccountComponent.html","title":"component - SuspendedAccountComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SuspendedAccountComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/authentication/suspended-account/suspended-account.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-suspended-account\n            \n\n\n\n            \n                styleUrls\n                ./suspended-account.component.css\n            \n\n\n\n            \n                templateUrl\n                ./suspended-account.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                banDurationMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                redirectToLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authentication/suspended-account/suspended-account.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToLogin\n                        \n                    \n                \n            \n            \n                \nredirectToLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/authentication/suspended-account/suspended-account.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        banDurationMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/suspended-account/suspended-account.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\n\n@Component({\n  selector: 'app-suspended-account',\n  templateUrl: './suspended-account.component.html',\n  styleUrls: ['./suspended-account.component.css']\n})\nexport class SuspendedAccountComponent {\n  banDurationMessage: string = '';\n\n  constructor(private router: Router) {\n    const currentNavigation = this.router.getCurrentNavigation();\n    if (currentNavigation?.extras?.state) {\n      this.banDurationMessage = currentNavigation.extras.state['banDurationMessage'];\n    }\n  }\n\n\n  redirectToLogin() {\n    this.router.navigateByUrl('/account/login');\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{ banDurationMessage }}\n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./suspended-account.component.css\n                \n                .suspended-account-container {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-bottom:50px;\n}\n\n.suspended-account-form-container {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.suspended-account-form {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 30%;\n  gap: 5px;\n}\n\n\n.suspended-account-form authentication-button {\n    width: 75%;\n    padding-bottom: 150px;\n}\n\n.logo {\n  margin: 90px 0px 20px 0px;\n  width: 10%\n}\n\n/*** INPUTS FIELDS */\n.input-with-icon input {\n  border: none;\n  background-color: transparent;\n  outline: none;\n  font-size: 16px; /* Ajuste o tamanho da fonte conforme necessário */\n  padding: 5px;\n  flex-grow: 1;\n  width: 100%;\n  color: white;\n}\n\n.input-with-icon {\n  background-color: transparent;\n  color: #000000;\n  border-radius: 10px;\n  font-size: 16px;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 10px;\n  box-sizing: border-box;\n  padding: 5px 20px;\n  border: 2px solid white;\n  cursor: pointer;\n  width: 75%;\n  height: 40px;\n  margin-bottom: 20px;\n}\n\n.input-with-icon .fa {\n    color: white;\n    width: 16px;\n    height: 16px\n}\n\nh3 {\n  font-weight: bold;\n  color: white;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{ banDurationMessage }}              '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminStatisticsComponent', 'selector': 'app-admin-statistics'},{'name': 'AllMoviesPageComponent', 'selector': 'app-all-movies-page'},{'name': 'AllSeriesPageComponent', 'selector': 'app-all-series-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'authentication-button'},{'name': 'BlockedAccountComponent', 'selector': 'app-blocked-account'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GamificationComponent', 'selector': 'app-gamification'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MovieDetailsComponent', 'selector': 'app-movie-details'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'PendingVerificationComponent', 'selector': 'app-pending-verification'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterWithThirdPartyComponent', 'selector': 'app-register-with-third-party'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchServiceComponent', 'selector': 'app-search-service'},{'name': 'SeasonDetailsComponent', 'selector': 'app-season-details'},{'name': 'SeasonDetailsInfoComponent', 'selector': 'app-season-details-info'},{'name': 'SendEmailComponent', 'selector': 'app-send-email'},{'name': 'SeriesDetailsComponent', 'selector': 'app-series-details'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'SuspendedAccountComponent', 'selector': 'app-suspended-account'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SuspendedAccountComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authentication/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                Classe para representar um utilizador no sistema.\nArmazena as informações essenciais do utilizador que são frequentemente utilizadas após o login.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                jwt\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string, jwt: string, username: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/authentication/models/user.ts:7\n                            \n                        \n\n                \n                    \n                            Construtor da classe User.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O endereço de email do utilizador.\n\n                                                        \n                                                \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O token JWT (JSON Web Token) usado para autenticação nas requisições API.\n\n                                                        \n                                                \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                O nome de utilizador único.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/models/user.ts:16\n                        \n                    \n\n            \n                \n                    O endereço de email do utilizador.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        jwt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/models/user.ts:17\n                        \n                    \n\n            \n                \n                    O token JWT (JSON Web Token) usado para autenticação nas requisições API.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authentication/models/user.ts:18\n                        \n                    \n\n            \n                \n                    O nome de utilizador único.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  /**\n   * Construtor da classe User.\n   *\n   * @param email O endereço de email do utilizador.\n   * @param jwt O token JWT (JSON Web Token) usado para autenticação nas requisições API.\n   * @param username O nome de utilizador único.\n   */\n  constructor(\n    public email: string,    \n    public jwt: string,     \n    public username: string \n  ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserMedia.html":{"url":"interfaces/UserMedia.html","title":"interface - UserMedia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserMedia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/profile/models/user-media.ts\n        \n\n\n            \n                Description\n            \n            \n                Modelo para representar uma associação de mídia a um utilizador.\nInclui informações sobre a mídia associada a um perfil de utilizador, como filmes ou séries favoritas.\nPropriedades:\n\nmediaId: Identificador único da mídia.\ntype: Tipo de mídia, como \"filme\", \"série\", etc.\n\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mediaId\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mediaId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mediaId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserMedia {\n  mediaId: number;\n  type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRatingMedia.html":{"url":"interfaces/UserRatingMedia.html","title":"interface - UserRatingMedia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRatingMedia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/media/media-models/UserRatingMedia.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Media\n                                        \n                                \n                                \n                                        \n                                            Rating\n                                        \n                                \n                                \n                                        \n                                            Username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Media\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Media:         UserMedia\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserMedia\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserMedia } from \"../../profile/models/user-media\";\n\nexport interface UserRatingMedia {\n  Media: UserMedia;\n  Rating: number;\n  Username: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/about-us/about-us.component.ts\n            \n            component\n            AboutUsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/admin-statistics/admin-statistics.component.ts\n            \n            component\n            AdminStatisticsComponent\n            \n                47 %\n                (10/21)\n            \n        \n        \n            \n                \n                src/app/admin/admin.component.ts\n            \n            component\n            AdminComponent\n            \n                51 %\n                (19/37)\n            \n        \n        \n            \n                \n                src/app/admin/service/admin.service.ts\n            \n            injectable\n            AdminService\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/authentication/blocked-account/blocked-account.component.ts\n            \n            component\n            BlockedAccountComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/authentication/components/authentication-button/authentication-button.component.ts\n            \n            component\n            AuthenticationButtonComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/authentication/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                61 %\n                (11/18)\n            \n        \n        \n            \n                \n                src/app/authentication/models/confirmEmail.ts\n            \n            interface\n            ConfirmEmail\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/authentication/models/login.ts\n            \n            interface\n            Login\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/authentication/models/loginWithExternals.ts\n            \n            class\n            LoginWithExternal\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/authentication/models/register.ts\n            \n            interface\n            Register\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/authentication/models/registerWithExternal.ts\n            \n            class\n            RegisterWithExternal\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/authentication/models/resetPassword.ts\n            \n            interface\n            ResetPassword\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/authentication/models/user.ts\n            \n            class\n            User\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/authentication/pending-verification/pending-verification.component.ts\n            \n            component\n            PendingVerificationComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/authentication/register-with-third-party/register-with-third-party.component.ts\n            \n            component\n            RegisterWithThirdPartyComponent\n            \n                50 %\n                (8/16)\n            \n        \n        \n            \n                \n                src/app/authentication/registration/registration.component.ts\n            \n            component\n            RegistrationComponent\n            \n                60 %\n                (9/15)\n            \n        \n        \n            \n                \n                src/app/authentication/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                46 %\n                (7/15)\n            \n        \n        \n            \n                \n                src/app/authentication/send-email/send-email.component.ts\n            \n            component\n            SendEmailComponent\n            \n                57 %\n                (8/14)\n            \n        \n        \n            \n                \n                src/app/authentication/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                84 %\n                (16/19)\n            \n        \n        \n            \n                \n                src/app/authentication/suspended-account/suspended-account.component.ts\n            \n            component\n            SuspendedAccountComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/chat/chat.component.ts\n            \n            component\n            ChatComponent\n            \n                64 %\n                (34/53)\n            \n        \n        \n            \n                \n                src/app/chat/models/chatWithMessages.ts\n            \n            interface\n            ChatWithMessages\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/chat/models/messages.ts\n            \n            interface\n            Message\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/chat/models/profileChat.ts\n            \n            interface\n            ProfileChat\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/chat/services/chat.service.ts\n            \n            injectable\n            ChatService\n            \n                88 %\n                (24/27)\n            \n        \n        \n            \n                \n                src/app/confirm-dialog/confirm-dialog.component.ts\n            \n            component\n            ConfirmDialogComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/confirm-dialog/services/dialog.service.ts\n            \n            injectable\n            DialogService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/gamification/Service/gamification.service.ts\n            \n            injectable\n            GamificationService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/gamification/gamification.component.ts\n            \n            component\n            GamificationComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/gamification/models/MedalsDto.ts\n            \n            interface\n            MedalsDto\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/guards/authorization.guard.ts\n            \n            injectable\n            AuthorizationGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                46 %\n                (7/15)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            interface\n            MovieCategory\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interceptors/jwt.interceptor.ts\n            \n            interceptor\n            JwtInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interceptors/loading/loading-interceptor.service.ts\n            \n            interceptor\n            LoadingInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/loader/loading-service/loading.service.ts\n            \n            injectable\n            LoadingService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/loader/loading/loading.component.ts\n            \n            component\n            LoadingComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/media/api/movie-api-service/movie-api-service.component.ts\n            \n            injectable\n            MovieApiServiceComponent\n            \n                95 %\n                (65/68)\n            \n        \n        \n            \n                \n                src/app/media/media-models/UserRatingMedia.ts\n            \n            interface\n            UserRatingMedia\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/media/media-models/actor.ts\n            \n            class\n            Actor\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/media/media-models/fav-actor.ts\n            \n            class\n            FavoriteActor\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/media/movies/all-movies-page/all-movies-page.component.ts\n            \n            component\n            AllMoviesPageComponent\n            \n                78 %\n                (11/14)\n            \n        \n        \n            \n                \n                src/app/media/movies/all-movies-page/all-movies-page.component.ts\n            \n            interface\n            MovieCategory\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/media/movies/movie-details/movie-details.component.ts\n            \n            component\n            MovieDetailsComponent\n            \n                59 %\n                (52/87)\n            \n        \n        \n            \n                \n                src/app/media/search-service/search-service.component.ts\n            \n            component\n            SearchServiceComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/media/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                42 %\n                (9/21)\n            \n        \n        \n            \n                \n                src/app/media/series/all-series-page/all-series-page.component.ts\n            \n            component\n            AllSeriesPageComponent\n            \n                80 %\n                (12/15)\n            \n        \n        \n            \n                \n                src/app/media/series/all-series-page/all-series-page.component.ts\n            \n            interface\n            MovieCategory\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/media/series/series-details/series-details.component.ts\n            \n            component\n            SeriesDetailsComponent\n            \n                60 %\n                (53/88)\n            \n        \n        \n            \n                \n                src/app/nav-menu/nav-menu.component.ts\n            \n            component\n            NavMenuComponent\n            \n                54 %\n                (12/22)\n            \n        \n        \n            \n                \n                src/app/notifications/models/achievement-notification-model.ts\n            \n            class\n            AchievementNotificationModel\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/notifications/models/follow-notification-model.ts\n            \n            class\n            FollowNotificationModel\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/notifications/models/media-notification-model.ts\n            \n            class\n            MediaNotificationModel\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/notifications/models/message-notification-model.ts\n            \n            class\n            MessageNotificationModel\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/notifications/models/notification-model.ts\n            \n            class\n            NotificationModel\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/notifications/models/reply-notification-model.ts\n            \n            class\n            ReplyNotificationModel\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/app/notifications/notifications/notifications.component.ts\n            \n            component\n            NotificationsComponent\n            \n                56 %\n                (18/32)\n            \n        \n        \n            \n                \n                src/app/notifications/services/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                94 %\n                (16/17)\n            \n        \n        \n            \n                \n                src/app/profile/edit-profile/edit-profile.component.ts\n            \n            component\n            EditProfileComponent\n            \n                38 %\n                (21/54)\n            \n        \n        \n            \n                \n                src/app/profile/models/follower-profile.ts\n            \n            class\n            FollowerProfile\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/profile/models/profile.ts\n            \n            class\n            Profile\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/app/profile/models/user-media.ts\n            \n            interface\n            UserMedia\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/profile/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                30 %\n                (40/130)\n            \n        \n        \n            \n                \n                src/app/profile/profile/profile.component.ts\n            \n            interface\n            MovieCategory\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/profile/services/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                96 %\n                (28/29)\n            \n        \n        \n            \n                \n                src/app/season-details-info/season-details-info.component.ts\n            \n            component\n            SeasonDetailsInfoComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/season-details/season-details.component.ts\n            \n            component\n            SeasonDetailsComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/statistics/statistics.component.ts\n            \n            component\n            StatisticsComponent\n            \n                22 %\n                (12/53)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.0.0\n        \n            @angular/common : ^17.0.0\n        \n            @angular/compiler : ^17.0.0\n        \n            @angular/core : ^17.0.0\n        \n            @angular/forms : ^17.0.0\n        \n            @angular/material : ^17.3.2\n        \n            @angular/platform-browser : ^17.0.0\n        \n            @angular/platform-browser-dynamic : ^17.0.0\n        \n            @angular/router : ^17.0.0\n        \n            @costlydeveloper/ngx-awesome-popup : ^3.2.1\n        \n            @fortawesome/angular-fontawesome : ^0.14.1\n        \n            @fortawesome/fontawesome-free : ^6.5.1\n        \n            @fortawesome/fontawesome-svg-core : ^6.5.1\n        \n            @fortawesome/free-brands-svg-icons : ^6.5.1\n        \n            @fortawesome/free-solid-svg-icons : ^6.5.1\n        \n            @microsoft/signalr : ^7.0.14\n        \n            @types/google-one-tap : ^1.2.6\n        \n            angular-font-awesome : ^3.1.2\n        \n            font-awesome : ^4.7.0\n        \n            highcharts : ^11.4.1\n        \n            highcharts-angular : ^4.0.0\n        \n            jest-editor-support : *\n        \n            jwt-decode : ^4.0.0\n        \n            primeng : ^17.12.0\n        \n            run-script-os : *\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWatchersworldClient\nThis project was generated with Angular CLI version 17.0.9.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\ncluster_AuthenticationModule_imports\n\n\n\n\nAboutUsComponent\n\nAboutUsComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutUsComponent->AppModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAdminStatisticsComponent\n\nAdminStatisticsComponent\n\nAppModule -->\n\nAdminStatisticsComponent->AppModule\n\n\n\n\n\nAllMoviesPageComponent\n\nAllMoviesPageComponent\n\nAppModule -->\n\nAllMoviesPageComponent->AppModule\n\n\n\n\n\nAllSeriesPageComponent\n\nAllSeriesPageComponent\n\nAppModule -->\n\nAllSeriesPageComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChatComponent\n\nChatComponent\n\nAppModule -->\n\nChatComponent->AppModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nAppModule -->\n\nConfirmDialogComponent->AppModule\n\n\n\n\n\nEditProfileComponent\n\nEditProfileComponent\n\nAppModule -->\n\nEditProfileComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nGamificationComponent\n\nGamificationComponent\n\nAppModule -->\n\nGamificationComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoadingComponent\n\nLoadingComponent\n\nAppModule -->\n\nLoadingComponent->AppModule\n\n\n\n\n\nMovieDetailsComponent\n\nMovieDetailsComponent\n\nAppModule -->\n\nMovieDetailsComponent->AppModule\n\n\n\n\n\nNavMenuComponent\n\nNavMenuComponent\n\nAppModule -->\n\nNavMenuComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nAppModule -->\n\nSearchComponent->AppModule\n\n\n\n\n\nSearchServiceComponent\n\nSearchServiceComponent\n\nAppModule -->\n\nSearchServiceComponent->AppModule\n\n\n\n\n\nSeasonDetailsComponent\n\nSeasonDetailsComponent\n\nAppModule -->\n\nSeasonDetailsComponent->AppModule\n\n\n\n\n\nSeasonDetailsInfoComponent\n\nSeasonDetailsInfoComponent\n\nAppModule -->\n\nSeasonDetailsInfoComponent->AppModule\n\n\n\n\n\nSeriesDetailsComponent\n\nSeriesDetailsComponent\n\nAppModule -->\n\nSeriesDetailsComponent->AppModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nAppModule -->\n\nStatisticsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nChatService\n\nChatService\n\nAppModule -->\n\nChatService->AppModule\n\n\n\n\n\nDialogService\n\nDialogService\n\nAppModule -->\n\nDialogService->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\nLoadingInterceptor\n\nLoadingInterceptor\n\nAppModule -->\n\nLoadingInterceptor->AppModule\n\n\n\n\n\nMovieApiServiceComponent\n\nMovieApiServiceComponent\n\nAppModule -->\n\nMovieApiServiceComponent->AppModule\n\n\n\nAppModule -->\n\nMovieApiServiceComponent->AppModule\n\n\n\n\n\nAuthenticationButtonComponent\n\nAuthenticationButtonComponent\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nAuthenticationButtonComponent->AuthenticationModule\n\n\n\nAuthenticationModule -->\n\nAuthenticationButtonComponent->AuthenticationModule\n\n\n\n\n\nBlockedAccountComponent\n\nBlockedAccountComponent\n\nAuthenticationModule -->\n\nBlockedAccountComponent->AuthenticationModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthenticationModule -->\n\nLoginComponent->AuthenticationModule\n\n\n\n\n\nPendingVerificationComponent\n\nPendingVerificationComponent\n\nAuthenticationModule -->\n\nPendingVerificationComponent->AuthenticationModule\n\n\n\n\n\nRegisterWithThirdPartyComponent\n\nRegisterWithThirdPartyComponent\n\nAuthenticationModule -->\n\nRegisterWithThirdPartyComponent->AuthenticationModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAuthenticationModule -->\n\nRegistrationComponent->AuthenticationModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthenticationModule -->\n\nResetPasswordComponent->AuthenticationModule\n\n\n\n\n\nSendEmailComponent\n\nSendEmailComponent\n\nAuthenticationModule -->\n\nSendEmailComponent->AuthenticationModule\n\n\n\n\n\nSuspendedAccountComponent\n\nSuspendedAccountComponent\n\nAuthenticationModule -->\n\nSuspendedAccountComponent->AuthenticationModule\n\n\n\n\n\nAuthenticationRoutingModule\n\nAuthenticationRoutingModule\n\nAuthenticationModule -->\n\nAuthenticationRoutingModule->AuthenticationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    32 Components\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        36 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  appUrl: \"https://localhost:7232\",\n  userKey: 'WatcherWorldsUserKey',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  appUrl: \"https://watchers-world-backend.azurewebsites.net\",\n  userKey: 'WatcherWorldsUserKey'\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
